{
  "name": "My tech resources",
  "tagline": "List of tech resources future me and other Javascript/Ruby/Python/Elixir/Elm developers might find useful",
  "body": "# My Tech Resources - James Lavin\r\n\r\n## DESCRIPTION\r\n\r\nLinks to resources I have found useful or think might be helpful to future me or Ruby/Javascript/Python/Erlang/Elixir/Elm developers like me.\r\n\r\n## MAJOR CATEGORIES\r\n\r\n[Business](#business) | [Clean Code](#clean-code) | [Code Search](#code-search) | [Coffeescript](#javascript---coffeescript) | [CSS](#css) | [Data](#data) | [DevOps](#devops) | [Elasticsearch](#elasticsearch) | [Elixir](#elixir) | [Elm](#elm) | [Erlang](#erlang) | [Event sourcing](#event-sourcingstreams) | [Functional programming](#functional-programming) | [Git](#git) | [HAML](#html---haml) | [Haskell](#haskell) | [HTML5](#html5) | [Javascript](#javascript) | [JRuby](#jruby) | [Learning](#learning) | [Linux](#linux) | [Machine learning](#machine-learning) | [Maker movement](#maker) | [Mobile](#mobile) | [MongoDB](#mongodb) | [News](#news) | [Node.js](#nodejs) | [Octave](#octave) | [Postgresql](#postgresql) | [Product development](#product-development) | [Python](#python), [getting started](#python---getting-started), [books (free)](https://github.com/JamesLavin/my_tech_resources#python---learning---books-free), [data analysis](#python---data-analysis), [learning](https://github.com/JamesLavin/my_tech_resources#python---learning), [Pandas](https://github.com/JamesLavin/my_tech_resources#python---data-analysis---pandas) | [R](#r) | [Rack](#rack) | [Rails](#rails) | [Ruby](#ruby) | [Scala](#scala) | [Slim](#html---slim) | [Statistical analysis](#statistical-analysis) | [Testing](#testing) | [Tmux](#tmux) | [Usability](#usability) | [Vim](#vim-yeah-its-the-best) | [Web components](#web-components) | [Writing/Publishing](#writingpublishing)\r\n\r\n## ALGORITHMS\r\n\r\n* Algorithms: Kevin Wayne & Robert Sedgewick (Princeton University): [Part I](https://www.coursera.org/course/algs4partI) & [Part II](https://www.coursera.org/course/algs4partII)\r\n* Algorithms: Design and Analysis - Tim Roughgarden (Stanford University): [Part 1](https://www.coursera.org/course/algo) & [Part 2](https://www.coursera.org/course/algo2)\r\n* [Automata: finite automata, context-free grammars, Turing machines, undecidable problems, and intractable problems (NP-completeness) - Jeff Ullman (Stanford University)](https://www.coursera.org/course/automata)\r\n* [Analysis of Algorithms - Robert Sedgewick (Princeton University)](https://www.coursera.org/course/aofa)\r\n* Algorithmic Thinking (Rice University): [Part 1](https://www.coursera.org/learn/algorithmic-thinking-1) & [Part 2](https://www.coursera.org/learn/algorithmic-thinking-2)\r\n* [Algorithmic Toolbox - UC San Diego](https://www.coursera.org/learn/algorithmic-toolbox)\r\n* [Algorithms on Strings - UC San Diego](https://www.coursera.org/learn/algorithms-on-strings)\r\n\r\n### ALGORITHMS - CRDTs\r\n\r\n* [Practical Demystification of CRDTs - Dmitry Ivanov & Nami Nasserazad (Curry On 2016)](https://www.youtube.com/watch?v=ShiU9g5JFq8)\r\n\r\n## ANIMATION\r\n\r\n* [Algorithms for Animation - Courtney Hemphill](https://youtu.be/GrloJWKBGtg)\r\n\r\n## BLOCKCHAINS\r\n\r\n* [What the #?!* is Bitcoin? - Jeremy Rubin (TEDxBeaconStreet)](https://www.youtube.com/watch?v=Vzjtvt77mgc)\r\n* [Blockchain Disruption: How Bitcoin Technology Creates a Sharing Economy - Thomas Ramge (TEDxHamburg)](https://www.youtube.com/watch?v=ZF0iCdYkXTM)\r\n\r\n### BLOCKCHAINS - BITCOIN\r\n\r\n* [Bitcoin -- distributing power & trust - Eric Spano (TEDxConcordia)](https://www.youtube.com/watch?v=WI1pbHi1fww)\r\n\r\n## BOOKS\r\n\r\n* [List of free programming books (many languages)](https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md)\r\n* [List of free programming books - CodeInfo.info](http://isn.codelab.info/ressources/livres-numeriques/free-programming-books/)\r\n\r\n## BROWSERS\r\n\r\n### BROWSERS - AUTOMATION\r\n\r\n* [Nightmare](https://github.com/segmentio/nightmare)\r\n* [Phantom.js](http://phantomjs.org/)\r\n* [Selenium](http://docs.seleniumhq.org/)\r\n\r\n### BROWSERS - PLUGINS/EXTENSIONS\r\n\r\n#### BROWSERS - PLUGINS/EXTENSIONS - CHROME\r\n\r\n* [Documentation](https://developer.chrome.com/extensions) | [Overview](https://developer.chrome.com/extensions/overview) | [Examples](https://developer.chrome.com/extensions/samples) | [CodeLab](https://developer.chrome.com/apps/app_codelab_intro) | [Developer's Guide](https://developer.chrome.com/extensions/devguide)\r\n* [Javascript APIs](https://developer.chrome.com/extensions/api_index)\r\n* [How to Make a Chrome Extension - Gabe Berke-Williams](https://robots.thoughtbot.com/how-to-make-a-chrome-extension)\r\n* [Extensionizr: Start a Chrome extension in 15 seconds](http://extensionizr.com)\r\n\r\n### BROWSERS - WEBRTC\r\n\r\n* [High Performance Browser Networking](https://hpbn.co/)\r\n* [WebRTC.org](https://webrtc.org/)\r\n* [WebRTCHacks.com](https://webrtchacks.com/)\r\n\r\n## BUSINESS\r\n\r\n* [The Startup Playbook -Sam Altman](http://playbook.samaltman.com)\r\n* [Lectures (by successful entrepreneurs) on \"How to Start a Startup\" (Stanford University)](http://startupclass.samaltman.com/)\r\n* [How to Build a Startup: The Lean LaunchPad - Steve Blank](https://www.udacity.com/course/how-to-build-a-startup--ep245)\r\n* [Startup (podcast)](https://gimletmedia.com/show/startup/episodes/)\r\n* [SteveBlank.com](http://steveblank.com/slides/#Videos)\r\n* [The Tim Ferriss Show](http://fourhourworkweek.com/podcast/)\r\n* [James Altucher interview podcasts](http://www.stansberryradio.com/James-Altucher/Latest-Episodes)\r\n* [Kauffmann Founders School](http://www.entrepreneurship.org/Founders-School)\r\n* [Observatory of Economic Complexity (interactive international trade data displayed using D3)](http://atlas.media.mit.edu/en/visualize/tree_map/hs92/export/usa/all/show/2013/)\r\n* [Startup Success Podcast](http://startupsuccesspodcast.com/)\r\n* [First Round Review](http://firstround.com/review/)\r\n\r\n## CHARACTERS\r\n\r\n* [Characters, Symbols and the Unicode Miracle - Computerphile](https://www.youtube.com/watch?v=MijmeoH9LT4) + [other cool Computerphile videos](https://www.youtube.com/user/Computerphile/videos)\r\n\r\n## CHESS\r\n\r\n### CHESS - ANALYSIS\r\n\r\n* [When Grandmasters Blunder - Joe Doliner](https://medium.com/pachyderm-data/when-grandmasters-blunder-a819860b883d), [code underlying the analysis](https://github.com/pachyderm/chess), [The Pachyderm Stack (a completely new MapReduce engine built on top of modern tools)](https://medium.com/pachyderm-data/lets-build-a-modern-hadoop-4fc160f8d74f) & [Pachyderm Single Node Mode](https://medium.com/pachyderm-data/pachyderm-v0-5-release-a-more-tightly-pached-derm-25023bc51f8e)\r\n* [ChessGames.com (746,000 chess games)](http://www.chessgames.com/)\r\n\r\n### CHESS - TOOLS\r\n\r\n* [Chessboard.js](http://chessboardjs.com/)\r\n* [Chess.js](https://github.com/jhlywa/chess.js)\r\n\r\n## CHINESE\r\n\r\n* [InfoQ Chinese news](http://www.infoq.com/cn/)\r\n* [Chinese university courses on Coursera](https://www.coursera.org/about/partners/cn)\r\n* Fudan University: [Coursera courses](https://www.coursera.org/fudan)\r\n* Nanjing University: [Coursera courses](https://www.coursera.org/nanjing)\r\n    * [计算机操作系统](https://www.coursera.org/learn/jisuanji-caozuo-xitong)\r\n    * [计算机系统基础（一） ：程序的表示、转换与链接](https://www.coursera.org/learn/jisuanji-xiton://www.coursera.org/learn/jisuanji-xitong)\r\n    * [软件测试 (Software Testing)](https://www.coursera.org/learn/ruanjian-ceshi)\r\n    * [用Python玩转数据 Data Processing Using Python](https://www.coursera.org/learn/hipython)\r\n* Peking Univesity: [Coursera courses](https://www.coursera.org/pku) | [EdX courses](https://www.edx.org/school/pekingx)\r\n    * [魅力机器人 | The Fascinating World of Robots and Robotics](https://www.edx.org/course/mei-li-ji-qi-ren-fascinating-world-pekingx-00330280x-0)\r\n    * [操作系统与虚拟化安全](https://www.coursera.org/learn/os-virtsecurity)\r\n    * [软件工程](https://www.coursera.org/learn/ruanjian-gongcheng)\r\n    * [数据结构与算法第一部分 | Data Structures and Algorithms Part 1 (Beijing University)](https://www.edx.org/course/pekingx/pekingx-04830050x-shu-ju-jie-gou-yu-suan-2061) & [Part 2](https://www.edx.org/course/shu-ju-jie-gou-yu-suan-fa-di-er-bu-fen-pekingx-04830050-2x)\r\n    * [算法基础－Fundamental Algorithms](https://www.edx.org/course/fundamental-algorithms-suan-fa-ji-chu-pekingx-04831750-2x)\r\n    * [Principles and Practice of Computer Aided Translation 计算机辅助翻译原理与实践](https://www.edx.org/course/pekingx/pekingx-01718330x-principles-practice-1484)\r\n    * [人群与网络 | Networks and Crowds](https://www.edx.org/course/pekingx/pekingx-03131840x-ren-qun-yu-wang-luo-2536)\r\n    * [程序设计基础 | Fundamentals of Programming](https://www.edx.org/course/pekingx/pekingx-532001x-cheng-xu-she-ji-ji-chu-2046)\r\n    * [理论计算机科学基础 | Introduction to Theoretical Computer Science](https://www.edx.org/course/pekingx/pekingx-04830260x-li-lun-ji-suan-ji-ke-3011)\r\n* Shanghai Jiaotong University: [Coursera courses](https://www.coursera.org/sjtu)\r\n* Tsinghua University: [EdX courses](https://www.edx.org/school/tsinghuax)\r\n    * [Data Structures and Algorithm Design Part I 数据结构与算法设计(上)](https://www.edx.org/course/data-structures-algorithm-design-part-i-tsinghuax-30240184-1x) | [Data Structures and Algorithm Design Part II 数据结构与算法设计(下)](https://www.edx.org/course/data-structures-algorithm-design-part-ii-tsinghuax-30240184-2x) | [Data Structures • 数据结构](https://www.edx.org/course/data-structures-shu-ju-jie-gou-tsinghuax-30240184x-0) | [2015 course - Data Structures and Algorithm Design 数据结构与算法设计](https://www.edx.org/course/data-structures-algorithm-design-shu-ju-tsinghuax-30240184x) | [2014 course](https://www.edx.org/course/data-structures-shu-ju-jie-gou-tsinghuax-30240184x-0)\r\n* USTC: [Coursera courses](https://www.coursera.org/ustc)\r\n* Xian Jiaotong University: [Coursera courses](https://www.coursera.org/xjtu)\r\n* [Elixir入门文档中文](https://github.com/elixir-lang-china/elixir_guide_cn)\r\n\r\n### CHINESE - AUDIO\r\n\r\n* [Ting (Pianke.me)](http://pianke.me/ting/)\r\n\r\n### CHINESE - BOOKS\r\n\r\n* [海量电子书](http://ebuk.cn/)\r\n* [努努书坊](http://www.kanunu8.com/)\r\n\r\n### CHINESE - LEARNING\r\n\r\n* [The Chairman's Bao - Simplified Chinese newspaper](http://www.thechairmansbao.com/)\r\n* [JustLearnChinese.com](http://justlearnchinese.com/)\r\n\r\n* [HanziJS is a Chinese character and NLP module for Chinese language processing for Node.js](http://www.hanzijs.com/) | [Github](https://github.com/nieldlr/Hanzi)\r\n\r\n### CHINESE - SCIENCE FICTION\r\n\r\n* [刘慈欣：科学中的故事资源](https://www.youtube.com/watch?v=NdYYc6IOAgc) & [full list](https://www.youtube.com/results?search_query=%E5%88%98%E6%85%88%E6%AC%A3%EF%BC%9A%E7%A7%91%E5%AD%A6%E4%B8%AD%E7%9A%84%E6%95%85%E4%BA%8B%E8%B5%84%E6%BA%90)\r\n\r\n## CLEAN CODE\r\n\r\n* [Is Your Code Too SOLID? - Sarah Mei](http://forwardjs.com/university/is-your-code-too-solid)\r\n* [\"The Mess We're In\" - Joe Armstrong (StrangeLoop 2014)](https://www.youtube.com/watch?v=lKXe3HUG2l4)\r\n* [The Failures of \"Intro to TDD\" - Justin Searls](http://blog.testdouble.com/posts/2014-01-25-the-failures-of-intro-to-tdd.html)\r\n* [Treat Your Code as a Crime Scene - Adam Tornhill](http://www.infoq.com/presentations/code-bugs-legacy-pitfalls)\r\n* [Code review advice from Thoughtbot](https://github.com/thoughtbot/guides/tree/master/code-review)\r\n* [Keynote: Architecture the Lost Years - Robert Martin (Ruby Midwest 2011)](http://confreaks.tv/videos/759-rubymidwest2011-keynote-architecture-the-lost-years)\r\n* [Cruft and Technical Debt: A Long View - Yehuda Katz (GoGaRuCo 2012)](http://confreaks.tv/videos/1121-gogaruco2012-cruft-and-technical-debt-a-long-view)\r\n* [Grasping Complexity with Both Hands - Glenn Vandenurg (GoGaRuCo 2012)](http://confreaks.tv/videos/1123-gogaruco2012-grasping-complexity-with-both-hands)\r\n* [Behind the Curtain: Applying lessons learned from years in the Theatre to crafting software applications - Nell Shamrell (MaidosnRuby 2012)](http://confreaks.tv/videos/1093-madisonruby2012-behind-the-curtain-applying-lessons-learned-from-years-in-the-theatre-to-crafting-software-applications)\r\n* [Modular & reusable front-end code with HTML5, Sass and CoffeeScript - Roy Tomeij (MadisonRuby 2012)](http://confreaks.tv/videos/1101-madisonruby2012-modular-reusable-front-end-code-with-html5-sass-and-coffeescript)\r\n* [Robert C. Martin videos (free)](http://www.google.com/search?q=robert+c.+martin&tbm=vid)\r\n* [Robert C. Martin videos (non-free)](http://www.cleancoders.com/)\r\n* [Grand Unification Theory: Writing and Running Code, by Brian Ford (Barcelona RuCo 2012)](http://www.youtube.com/watch?v=iub8zWID4yk)\r\n* [Programming and minimalism: lessons from Orwell and the Clash - Jonathan Dahl (RubyConf 2010)](http://www.confreaks.tv/videos/460-rubyconf2010-programming-and-minimalism-lessons-from-orwell-and-the-clash)\r\n* [States and Nomads: Handling Software Complexity - Zach Tellman](http://forwardjs.com/university/states-and-nomads)\r\n\r\n### CLEAN CODE - APIS\r\n\r\n* [APIs: The Good, The Bad, The Ugly - MicheleTitolo (Ruby Remote Conf 2015)](https://www.youtube.com/watch?v=k0FYm4scLlc)\r\n* [HTTP API Design Guide](https://github.com/interagent/http-api-design)\r\n* [Beautiful REST & JSON APIs - Les Hazelwood (Jax Conference 2013)](https://www.youtube.com/watch?v=mZ8_QgJ5mbs)\r\n* [Building the Great Wall: API Driven Applications by Scott Parker, Dan Melnick (Madison Ruby 2012)](http://www.youtube.com/watch?v=AoRkqMgX-4Q)\r\n* [How to Design a Good API and Why It Matters](https://www.youtube.com/watch?v=aAb7hSCtvGw)\r\n* [API Blueprint](https://apiblueprint.org/) & [Github](https://github.com/apiaryio/api-blueprint)\r\n* [Dredd — HTTP API Validation Tool](https://github.com/apiaryio/dredd)\r\n* [Pliny - Write excellent APIs in Ruby](https://github.com/interagent/pliny) & [Better APIs with Pliny - Will Leinweber (RubyOnAles 2015)](https://www.youtube.com/watch?v=lA8KhC9fFYY)\r\n\r\n#### CLEAN CODE - APIS - DOCUMENTING\r\n\r\n* [Understanding JSON Schema - Michael Droettboom et al.](http://spacetelescope.github.io/understanding-json-schema/) & [PDF](http://spacetelescope.github.io/understanding-json-schema/UnderstandingJSONSchema.pdf)\r\n* [prmd - JSON Schema tools and doc generation for HTTP APIs](https://github.com/interagent/prmd)\r\n\r\n### CLEAN CODE - CODE CLIMATE\r\n\r\n* Code Climate: [Open source projects](https://codeclimate.com/oss) | [Platform](https://codeclimate.com/platform) | [Free service for open source projects](https://codeclimate.com/github/signup)\r\n* [Build your own Code Climate Analysis Engine](http://blog.codeclimate.com/blog/2015/07/07/build-your-own-codeclimate-engine/)\r\n\r\n### CLEAN CODE - MEASURING\r\n\r\n* [Ruby-Toolbox - Code Metrics](https://www.ruby-toolbox.com/categories/code_metrics)\r\n* [Semi Automatic Code Review - Richard Huang (RailsConf 2012)](http://confreaks.tv/videos/888-railsconf2012-semi-automatic-code-review)\r\n* [rails_best_practices gem](https://github.com/railsbp/rails_best_practices) & [railsbp.com](http://railsbp.com/) \r\n\r\n## CODING CONTESTS\r\n\r\n* [CodeChef](https://www.codechef.com/)\r\n* [TopCoder](http://www.topcoder.com/)\r\n\r\n## CODING PUZZLES\r\n\r\n* [Programming Praxis](http://programmingpraxis.com/)\r\n\r\n## CODE SEARCH\r\n\r\n* [Github Search](https://github.com/search/advanced)\r\n* [Google Code](https://code.google.com/)\r\n* [Ohloh Code](https://code.ohloh.net/)\r\n* [SearchCode.com](https://searchcode.com/)\r\n* [Sourcegraph.com](https://sourcegraph.com/)\r\n\r\n## COMPUTING BASICS\r\n\r\n* [See How Computers Add Numbers in One Lesson - In One Lesson](https://www.youtube.com/watch?v=VBDoT8o4q00)\r\n* Computerphile: [AND OR NOT - Logic Gates Explained](https://www.youtube.com/watch?v=UvI-AMAtrvE) & [XOR & the Half Adder](https://www.youtube.com/watch?v=VPw9vPN-3ac)\r\n* [Logic Components - \"lcc0612\"](https://www.youtube.com/playlist?list=PLJse9iV6Reqj1M8p1jzvv6Zzj0js_gawl)\r\n* [Digital Electronics: The Half Adder and Full Adder - Derek Molloy](https://www.youtube.com/watch?v=mZ9VWA4cTbE)\r\n* [An Introduction to Logic Gates - DrPhysicsA](https://www.youtube.com/watch?v=95kv5BF2Z9E)\r\n* [Making Your Own 4-bit Computer From Transistors - Simon Inns](https://www.youtube.com/watch?v=xISG4nGTQYE)\r\n\r\n## CSS\r\n\r\n* [How to Master CSS - Christopher Harrison & Helen Zeng (Microsoft Virtual Academy - Jumpstart)](https://www.youtube.com/watch?v=Vafp5xr_bxk)\r\n* [HTML and CSS Tutorial for Beginners: The Ultimate Guide to Learning HTML and CSS](https://www.youtube.com/watch?v=sEo8ci9Lfmw)\r\n* [CSS3 Tutorial - Derek Banas](https://www.youtube.com/watch?v=CUxH_rWSI1k)\r\n* [LearnLayout.com](http://www.learnlayout.com/)\r\n* [Mozilla MDN](https://developer.mozilla.org/en-US/docs/CSS)\r\n* [CSS2 Cheat Sheet (Cheatography)](http://www.cheatography.com/davechild/cheat-sheets/css2/)\r\n* [Sass](http://sass-lang.com/)\r\n* [Less](http://lesscss.org/)\r\n* [Compass](http://compass-style.org/)\r\n* [Getting Oriented With Compass](http://www.sdruby.org/podcast/100)\r\n* [Kicking Ass + Taking Names with Sass & Compass](http://vimeo.com/24278115)\r\n* [csscss (finds CSS redundancies)](https://github.com/zmoazeni/csscss)\r\n* [Twitter Bootstrap](http://twitter.github.com/bootstrap/)\r\n* [Front End Legos: Better Design with Reusable HTML & CSS](http://confreaks.tv/videos/2230-html5tx2013-front-end-legos-better-design-with-reusable-html-css)\r\n* [Github CSS style guide](https://github.com/styleguide/css)\r\n* [Zen-Coding](http://code.google.com/p/zen-coding/)\r\n* [CSS Conf videos](http://cssconf.com/talks.html)\r\n\r\n### CSS - COOL STUFF\r\n\r\n* [CSS-Tricks.com](https://css-tricks.com/)\r\n* [How To Make a Slide Out Navigation with HTML/CSS (No JavaScript)](https://www.youtube.com/watch?v=d4P8s-mkMvs)\r\n\r\n### CSS - FLEXBOX\r\n\r\n* [A Complete Guide to Flexbox - Chris Coyier](https://css-tricks.com/snippets/css/a-guide-to-flexbox/)\r\n* [Solved By Flexbox - Philip Walton](http://philipwalton.github.io/solved-by-flexbox/)\r\n* [W3C spec](http://www.w3.org/TR/css3-flexbox/)\r\n\r\n### CSS - RESPONSIVE DESIGN\r\n\r\n* [Laziness in the Time of Responsive Design - Ethan Marcotte (Constant Contact 2014)](http://www.confreaks.tv/videos/4605-e4e2014-laziness-in-the-time-of-responsive-design)\r\n* [The New Rules of The Responsive Web](http://confreaks.tv/videos/2222-html5tx2013-the-new-rules-of-the-responsive-web)\r\n\r\n## DATA\r\n\r\n* [ProgrammableWeb.com](http://www.programmableweb.com/category)\r\n* [Data Sources on the Web - Managed R Archive Network](http://mran.revolutionanalytics.com/documents/data/)\r\n* [23 Resources for Finding Open Data](http://blog.sense.io/23-resources-for-finding-open-data/)\r\n* [30 Places to Find Open Data on the Web](http://blog.visual.ly/data-sources/)\r\n* [AWS Public Data Sets](http://aws.amazon.com/publicdatasets/)\r\n* [DataCataloges.org](http://datacatalogs.org/)\r\n* [Data Repositories - Jerry Smith](http://datascientistinsights.com/2013/10/07/data-repositories-mothers-milk-for-data-scientists/#!)\r\n* [Datasets for Data Mining and Data Science](http://www.kdnuggets.com/datasets/index.html)\r\n* [Freebase.com](http://www.freebase.com/)\r\n* [Kaggle.com Datasets](https://www.kaggle.com/datasets)\r\n* [Public datasets - ScaleUnlimited.com](http://www.scaleunlimited.com/datasets/public-datasets/)\r\n* [UCL Data Science Student Challenge 2016](http://kenji.azurewebsites.net/?p=301)\r\n* [Where can I find large datasets open to the public?](http://www.quora.com/Where-can-I-find-large-datasets-open-to-the-public)\r\n* [Comprehensive List of Free Historical Market Data Sources](http://computeraidedfinance.com/2012/05/02/comprehensive-list-of-free-historical-market-data-sources/)\r\n* [Datahub.io](http://datahub.io/)\r\n\r\n## DATA - ANALYSIS\r\n\r\n* [Kaggle.com](https://www.kaggle.com/)\r\n* [Data Driven NYC videos (Nov 2014)](https://www.youtube.com/channel/UCQID78IY6EOojr5RUdD47MQ/videos)\r\n\r\n### DATA - APIS\r\n\r\n* [Best Buy](https://developer.bestbuy.com/) (retail)\r\n* [Bloomberg](http://www.bloomberglabs.com/)\r\n* [DataSift](http://dev.datasift.com/) (Twitter firehose)\r\n* [Expedia](http://developer.ean.com/)\r\n* [Facebook](https://developers.facebook.com/docs/graph-api)\r\n* [Forecast.io](https://developer.forecast.io/) (weather)\r\n* [Hotwire](http://developer.hotwire.com/)\r\n* [Kaggle](http://blog.kaggle.com/2016/08/17/making-kaggle-the-home-of-open-data/)\r\n* [MapQuest](http://developer.mapquest.com/web/products/open) (maps)\r\n* [New York Times](http://developer.nytimes.com/docs)\r\n* [OpenStreetMap](http://wiki.openstreetmap.org/wiki/API)\r\n* [OpenWeatherMap](http://openweathermap.org/api) (weather)\r\n* [ProPublica](https://projects.propublica.org/data-store/)\r\n* [Quandl](http://www.quandl.com/help/python), [Github](https://github.com/quandl/Python) & [example iPython notebook](http://nbviewer.ipython.org/url/www.logilab.org/file/187482/raw/quandl-data-with-pandas.ipynb)\r\n* [Reuters](https://customers.reuters.com/developer/apis_tech.aspx)\r\n* [Salesforce](http://www.salesforce.com/us/developer/docs/api/), [pyforce](https://pypi.python.org/pypi/pyforce/1.4), [simple-salesforce](https://pypi.python.org/pypi/simple-salesforce), [salesforce-python-toolkit](https://code.google.com/p/salesforce-python-toolkit/) & [example](https://developer.salesforce.com/blogs/developer-relations/2014/01/python-and-the-force-com-rest-api-simple-simple-salesforce-example.html)\r\n* [Socrata](http://dev.socrata.com/)\r\n* [Twitter](https://dev.twitter.com/docs)\r\n* [Walmart](https://developer.walmartlabs.com/docs) (retail; real-time prices and availability)\r\n* [Weather Underground](http://www.wunderground.com/weather/api/) (weather)\r\n* [WeatherBug](http://weather.weatherbug.com/pulseapi.html) (weather)\r\n* [World Bank](http://data.worldbank.org/node/9) (socioeconomic data)\r\n* [Yahoo! Finance](https://help.yahoo.com/kb/finance) (financial data)\r\n* [Zillow](http://www.zillow.com/howto/api/APIOverview.htm) (real estate)\r\n\r\n#### DATA - APIS - INTERNATIONAL\r\n\r\n* [Google public data directory](http://www.google.com/publicdata/directory)\r\n* [IMF](http://www.imf.org/external/data.htm)\r\n* [International Social Survey Programme](http://www.issp.org/page.php?pageId=4)\r\n* [Stanford Large Network Dataset Collection (SNAP)](http://snap.stanford.edu/data/)\r\n* [United Nations](http://data.un.org/)\r\n* [World Bank](http://data.worldbank.org/)\r\n* [World Health Organization](http://www.who.int/research/en/)\r\n\r\n#### DATA - APIS - NATIONAL (NON-US)\r\n\r\n* [United Kingdom](http://data.gov.uk/)\r\n\r\n#### DATA - APIS - UNITED STATES\r\n\r\n* [Bureau of Labor Statistics](http://www.bls.gov/developers/) & [Dept of Labor](http://developer.dol.gov/)\r\n* [Census Bureau](http://www.census.gov/developers/)\r\n* [Census Bureau's Statistical Abstract](http://www.census.gov/compendia/statab/)\r\n* [CDC Wonder](http://wonder.cdc.gov/)\r\n* [Dartmouth Atlas of Healthcare](http://www.dartmouthatlas.org/)\r\n* [Dept of Education](http://www.ed.gov/developer)\r\n* [Dept of Health & Human Services](http://www.hhs.gov/developer/)\r\n* [EDGAR (SEC)](http://datahub.io/dataset/edgar)\r\n* [Energy Information Administration](http://www.eia.gov/developer/)\r\n* [EPA](http://www.epa.gov/enviro/facts/datadownloads.html)\r\n* [Explore.data.gov](https://explore.data.gov/)\r\n* [FCC (Federal Communications Commission)](http://www.fcc.gov/developers)\r\n* [FedStats](http://fedstats.sites.usa.gov/)\r\n* [FRED (Federal Reserve Economic Data)](http://research.stlouisfed.org/fred2/)\r\n* [Healthcare.gov](https://www.healthcare.gov/developers/)\r\n* [ICPSR](http://www.icpsr.umich.edu/icpsrweb/ICPSR/index.jsp)\r\n* [Medicare.gov](http://www.medicare.gov/download/downloaddb.asp)\r\n* [NationalMap.gov](http://nationalmap.gov)\r\n* [NIH (National Institutes of Health) Data Sharing Repositories](https://www.nlm.nih.gov/NIHbmic/nih_data_sharing_repositories.html)\r\n* [National Library of Medicine](https://www.nlm.nih.gov/)\r\n* [NOAA National Climatic Data Center](http://www.ncdc.noaa.gov)\r\n* [Quality of Government data](http://qog.pol.gu.se/data/datadownloads/qogstandarddata)\r\n* [Sunlight Labs](https://data.sunlightlabs.com/)\r\n* [USA.gov](http://www.usa.gov/About/developer-resources/developers.shtml)\r\n* [USGS](http://earthquake.usgs.gov/earthquakes/feed/v0.1/)\r\n\r\n##### DATA - APIS - UNITED STATES - CITIES/STATES\r\n\r\n* [Austin, TX](https://data.austintexas.gov/)\r\n* [Boston, MA](https://data.cityofboston.gov/)\r\n* [Chicago, IL](https://data.cityofchicago.org/)\r\n* [New York City, NY](https://nycopendata.socrata.com/)\r\n* [New York State](https://data.ny.gov/)\r\n* [San Francisco, CA](https://data.sfgov.org/)\r\n* [Seattle, WA](https://data.seattle.gov/)\r\n\r\n### DATA - SCRAPING\r\n\r\n* [Top 50 open source web crawlers for data mining](http://www.bigdata-madesimple.com/top-50-open-source-web-crawlers-for-data-mining/)\r\n\r\n### DATA - VISUALIZATION\r\n\r\n* [VizWiz: Data visualization done right (blog)](http://vizwiz.blogspot.com/)\r\n* [OpenVis Conference videos (Boston 2016)](https://openvisconf.com/#videos)\r\n\r\n## DATABASES\r\n\r\n### DATABASES - ANALYSIS TOOLS\r\n\r\n* [DbDesigner](http://www.fabforce.net/dbdesigner4/)\r\n* [SQL Developer](http://sqldeveloper.solyp.com/)\r\n* [SQL Power Architect](http://www.sqlpower.ca/page/architect)\r\n\r\n### DATABASES - DATOMIC\r\n\r\n* [Datomic.com](http://www.datomic.com/)\r\n\r\n### DATABASES - GRAPHQL\r\n\r\n* [GraphQL: Data query language and runtime](http://graphql.org/) | [GitHub](https://github.com/graphql)\r\n* [Getting started (documentation)](http://graphql.org/docs/getting-started/)\r\n* [GraphQL-Ruby](https://github.com/rmosolgo/graphql-ruby)\r\n* [Learn GraphQL](https://learngraphql.com/)\r\n* [The GitHub GraphQL API - GitHub](http://githubengineering.com/the-github-graphql-api/)\r\n* [GraphiQL: Graphical interactive in-browser GraphQL IDE](https://github.com/graphql/graphiql)\r\n* [Intro to GraphQL - Lee Byron (0REDEV 2015)](https://www.youtube.com/watch?v=Wq02BNrN1dU)\r\n* [Exploring GraphQL - Nick Schrock (Dev Tools @ Scale)](https://www.youtube.com/watch?v=_9RgHXqH8J0)\r\n* [GraphQL: Designing a Data Language - Lee Byron (StrangeLoop 2016)](https://www.youtube.com/watch?v=Oh5oC98ztvI)\r\n\r\n#### DATABASES - GRAPHQL - IMPLEMENTATIONS\r\n\r\n* [graphql-elixir: Elixir implementation](https://github.com/joshprice/graphql-elixir) & [website](http://graphql-elixir.org/)\r\n* [graphql-js](https://github.com/graphql/graphql-js)\r\n* [Python implementation](https://github.com/graphql-python/graphene)\r\n* [Ruby implementation](https://github.com/rmosolgo/graphql-ruby)\r\n* [Sangria: Scala implementation](http://sangria-graphql.org/)\r\n* [Graph for Scala](http://scala-graph.org/)\r\n\r\n### DATABASES - HOW THEY WORK\r\n\r\n* [How does a relational database work - Christophe Kalenzaga](http://coding-geek.com/how-databases-work/)\r\n* [Transactions: myths, surprises and opportunities\" - Martin Kleppmann (StrangeLoop 2015)](https://www.youtube.com/watch?v=5ZjhNTM8XU8)\r\n\r\n### DATABASES - SQL\r\n\r\n* [Learn SQL: 50+ of the Best Online Educational Resources to Learn SQL and Relational Database Management - HackerLists.com](https://hackerlists.com/learn-sql-online/)\r\n* [SQLTeaching.com](https://www.sqlteaching.com/)\r\n* [SQL Tutorial - 1KeyData.com](http://www.1keydata.com/sql/sql.html)\r\n* [PostgreSQL documentation: The SQL Language](http://www.postgresql.org/docs/9.4/interactive/sql.html)\r\n* [TutorialsPoint.com](http://www.tutorialspoint.com/sql/index.htm)\r\n\r\n## DEVOPS\r\n\r\n* [BOSH](https://github.com/cloudfoundry/bosh)\r\n* [Capistrano](https://github.com/capistrano/capistrano)\r\n* [Heroku](http://www.heroku.com/) | [Tddium](https://devcenter.heroku.com/articles/tddium)\r\n* [Puppet](http://puppetlabs.com/)\r\n* [Ruby-Toolbox - Deployment Automation](https://www.ruby-toolbox.com/categories/deployment_automation)\r\n* [Ruby-Toolbox - Systems Integration](https://www.ruby-toolbox.com/categories/systems_integration)\r\n* [Acquiring DevOps Skills - Pavel Suchman (DevCon TLV 2014)](http://confreaks.tv/videos/3293-devcontlvjan2014-acquiring-devops-skills)\r\n* [Configuration Management ROI - Evgeny Zislis (DevCon TLV 2014)](http://confreaks.tv/videos/3294-devcontlvjan2014-configuration-management-roi)\r\n* [Continuous Deployment - Matt White (MountainWest RubyConf 2012)](http://confreaks.tv/videos/967-mwrc2012-continuous-deployment)\r\n* [Enabling Microservices @ Orbitz by Steve Hoffman (DevOpsDays Chicago 2015)](https://www.youtube.com/watch?t=342&v=-hrleJ2TVAI)\r\n* FutureStack conference videos: [14](https://www.youtube.com/playlist?list=PLmhYj7Jl81JGhEQnFGbWVLkGWEzFXzdzr) | [13](https://www.youtube.com/playlist?list=PLmhYj7Jl81JEMKm0LFHjn25GV6gUUU9IR)\r\n\r\n### DEVOPS - ANSIBLE\r\n\r\n* [Ansible - Your First Step Into Server Provisioning - Ben Turner (Ruby Australia 2014)](http://vimeo.com/90171333)\r\n\r\n### DEVOPS - BLOGS & PODCASTS\r\n\r\n* [The New Stack](http://thenewstack.io/)\r\n\r\n### DEVOPS - CHAOS MONKEY, ETC\r\n\r\n* [Simian Army](https://github.com/Netflix/SimianArmy/wiki) & [Quick start guide](https://github.com/Netflix/SimianArmy/wiki/Quick-Start-Guide):\r\n* [Chaos Monkey](https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey)\r\n* [Conformity Monkey](https://github.com/Netflix/SimianArmy/wiki/Conformity-Home)\r\n* [Janitor Monkey](https://github.com/Netflix/SimianArmy/wiki/Janitor-Home)\r\n* [AWS outage: How Netflix weathered the storm by preparing for the worst - Nick Heath](http://www.techrepublic.com/article/aws-outage-how-netflix-weathered-the-storm-by-preparing-for-the-worst/)\r\n\r\n### DEVOPS - CHEF\r\n\r\n* [Chef](http://www.opscode.com/chef/)\r\n* [Chef Community](http://community.opscode.com/)\r\n* [Chef Docs](http://docs.opscode.com/) & [Chef docs organized differently](http://docs.opscode.com/chef/)\r\n* [Chef - Cookbooks, Opscode](https://github.com/opscode-cookbooks)\r\n* [Chef - Cookbooks, Community](http://community.opscode.com/cookbooks)\r\n* [UsingChef.com - Weekly Newsletter](http://usingchef.com/)\r\n* [Chef - Recipe DSL](http://docs.opscode.com/chef/dsl_recipe.html)\r\n* [Chef - Resources and Providers Reference](http://docs.opscode.com/chef/resources.html)\r\n* [Chef videos from Opscode](http://www.youtube.com/user/Opscode)\r\n* [Learn Chef](http://learnchef.com/)\r\n* [Using Ruby to Automate Your Life - Seth Vargo (Ruby Australia 2014)](http://vimeo.com/90182570)\r\n* [Testing Your Automation: TTD for Chef Cookbooks - Nathen Harvey (BigRuby 2013)](http://confreaks.tv/videos/2309-bigruby2013-testing-your-automation-ttd-for-chef-cookbooks)\r\n* [Five Things You Didn't Know About Chef](http://confreaks.tv/videos/2301-bigruby2013-5-things-you-didn-t-know-about-chef)\r\n\r\n#### DEVOPS - CHEF - BERKSHELF\r\n\r\n* [Berkshelf](http://berkshelf.com/)\r\n\r\n#### DEVOPS - CHEF - CHEF-DK\r\n\r\n* [Chef-dk (Chef Development Kit)](https://github.com/opscode/chef-dk)\r\n\r\n#### DEVOPS - CHEF - CHEF_SOLO\r\n\r\n* [The Eight-fingered Chef by Jason Garber - MadisonRuby 2013](https://www.youtube.com/watch?v=eaI3OrSFdlM)\r\n\r\n#### DEVOPS - CHEF - COOKBOOKS\r\n\r\n* [chef-jenkins](https://github.com/fnichol/chef-jenkins)\r\n* [chef-rbenv](https://github.com/fnichol/chef-rbenv)\r\n* [chef-rvm](https://github.com/fnichol/chef-rvm)\r\n* [chef-user](https://github.com/fnichol/chef-user)\r\n\r\n#### DEVOPS - CHEF - KNIFE\r\n\r\n* [Knife docs](http://docs.opscode.com/chef/knife.html)\r\n* [knife-server](https://github.com/fnichol/knife-server)\r\n\r\n#### DEVOPS - CHEF - LIBRARIAN\r\n\r\n* [librarian-chef](https://github.com/applicationsonline/librarian-chef)\r\n* [\"What do I do with my own cookbooks (when using Librarian)?\"](https://github.com/applicationsonline/librarian/wiki/FAQ)\r\n\r\n#### DEVOPS - CHEF - TEST-KITCHEN\r\n\r\n* [test-kitchen](https://github.com/test-kitchen/test-kitchen)\r\n\r\n### DEVOPS - COREOS\r\n\r\n* [CoreOS](https://coreos.com/)\r\n* [Getting Started With With CoreOS](https://www.digitalocean.com/community/tutorial_series/getting-started-with-coreos-2)\r\n* [CoreOS Fleet](https://coreos.com/using-coreos/clustering/)\r\n* [CoreOS rkt](https://github.com/coreos/rkt)\r\n\r\n### DEVOPS - DOCKER\r\n\r\n* Docker docs:\r\n    * [User Guide](https://docs.docker.com/engine/userguide/)\r\n    * [Documentation & Installation](https://docs.docker.com)\r\n    * [Docker Container Networks](https://docs.docker.com/engine/userguide/networking/)\r\n    * [Docker Engine](https://docs.docker.com/engine/understanding-docker/)\r\n    * [Docker Swarm](https://docs.docker.com/swarm/)\r\n    * [Docker Compose](https://docs.docker.com/compose/overview/)\r\n    * [Docker Hub](https://docs.docker.com/docker-hub/)\r\n    * [Docker Machine](https://docs.docker.com/machine/)\r\n    * [Docker Cloud](https://docs.docker.com/docker-cloud/)\r\n* [Docker Self-Paced Training videos](https://training.docker.com/self-paced-training)\r\n* [Docker tutorial videos - Scott Turnbull](https://www.youtube.com/playlist?list=PLLOtMDswK0Iu0m0wseAXTzavCWji7qso7)\r\n* Docker Tutorials: [1: Installing Docker](https://www.youtube.com/watch?v=bV5vbNK3Uhw) | [2: Docker Run Basics](https://www.youtube.com/watch?v=uTe08FxoKrU) | [3: Fun With Volumes](https://www.youtube.com/watch?v=rlK1JYsM6Aw) | [4: More Run With Extra Goodies](https://www.youtube.com/watch?v=ZgjHM1XmAKI) | [5: Basic Networking](https://www.youtube.com/watch?v=3uvqEC8fWV0) | [6: Dockerfiles (Part 1)](https://www.youtube.com/watch?v=gG_x28rDxus) | [7: Dockerfiles (Part 2)](https://www.youtube.com/watch?v=L6bjTlVdc6U) | [8: Troubleshooting with Sysdig](https://www.youtube.com/watch?v=S-fYCOMnsbY) | [9: Docker Machine](https://www.youtube.com/watch?v=3zXe3uXQnSY) | [10: Docker Compose](https://www.youtube.com/watch?v=gtoT0By8yh4) | [11: Docker Swarm](ihttps://www.youtube.com/watch?v=zTKGfPfhg78) | [12: Kitematic](https://www.youtube.com/watch?v=50IZ-AHPKo0) | [13: Getting Started with experimental Docker Networking](https://www.youtube.com/watch?v=gZ6UKym9ZIs) | [Full List](https://www.youtube.com/playlist?list=PLkA60AVN3hh_6cAz8TUGtkYbJSL2bdZ4h)\r\n* Docker videos: [Youtube](https://www.youtube.com/user/dockerrun) | [Confreaks](http://confreaks.tv/search?utf8=%E2%9C%93&query=Docker&commit=go)\r\n* [Docker for Data Scientists - Michelangelo D'Agostino (Strata 2016)](https://www.youtube.com/watch?v=GOW6yQpxOIg)\r\n* [DockerCon 2015](https://www.youtube.com/watch?v=DfHcN3ZvjjU&list=PLenh213llmcbpJ78mZdh5pnJ_feVT9bez)\r\n* [Docker 101: Introduction to Docker - Andrew T. Baker (PyCon 2015)](https://www.youtube.com/watch?v=YiZkHUbE6N0) & [Demystifying Docker - Andrew T. Baker (PyCon 2015)](https://www.youtube.com/watch?v=GVVtR_hrdKI)\r\n* [The Docker Book - James Turnbull](http://dockerbook.com/)\r\n* [Docker Cheat Sheet](https://github.com/wsargent/docker-cheat-sheet)\r\n* [Docs.Docker.com](https://docs.docker.com/)\r\n* [Docker Tutorials - DarkZebra](https://www.youtube.com/playlist?list=PLfpPfDziPdMIbc7p-_siXYwqsRnd3jrLM)\r\n* Docker Overview - Rimantas Mocevicius: [Part 1](https://deis.com/blog/2016/docker-overview-pt-1/) | [Part 2](https://deis.com/blog/2016/docker-overview-pt-2/)\r\n* [Intro to Docker - Amjith Ramanujam (PyCon 2014)](https://www.youtube.com/watch?v=9bvdc55xYdo)\r\n* [Docker and the Future of Modern Software - Solomon Hyke (FutureStack14)](http://blog.newrelic.com/2014/11/24/fs14-video-docker-modern-software/)\r\n* [Container Hacks and Fun Images - Jess Frazelle (DockerConf 2015)](https://www.youtube.com/watch?v=1qlLUf7KtAw) | [Jess Frazelle's .dockerfunc](https://github.com/jfrazelle/dotfiles/blob/master/.dockerfunc)\r\n* [Containerized Ruby Applications with Docker - Laura Frank (RubyConf 2014)](http://confreaks.tv/videos/4964-RubyConf2014-containerized-ruby-applications-with-docker)\r\n* [Shipping Ruby Apps with Docker - Bryan Helmkamp (RedDot Ruby 2014](http://confreaks.tv/videos/3853-rdrc2014-shipping-ruby-apps-with-docker)\r\n* [Build Your Own Shipyard - Andreas Tiefenthaler (Kod.io 2014)](http://confreaks.tv/videos/3252-kodio_2014-build-your-own-shipyard)\r\n* [Dockerising a Rails App - Graeme Mathieson](http://woss.name/articles/dockerising-a-rails-app/)\r\n* [Docker's Youtube channel](https://www.youtube.com/channel/UC76AVf2JkrwjxNKMuPpscHQ)\r\n* [Developing Ruby Applications With Docker - Laura Frank (ArrrrCamp 2015)](https://www.youtube.com/watch?v=hiiPMgZbzcA)\r\n* [Immutable Infrastructure with Docker and EC2 - Michael Bryzek (Gilt) (DockerCon 2014)](https://www.youtube.com/watch?v=GaHzdqFithc)\r\n* [3 hours to Docker fundamentals: Jumpstart your Docker knowledge](https://www.youtube.com/watch?v=ddhU3NMrhX4)\r\n* [Be a happier developer with Docker: Tricks of the trade - Nicola Paolucci](https://www.youtube.com/watch?v=XCVOxht34Hs)\r\n* [Pachyderm.io (MapReduce without Hadoop using a git-like distributed file system and Dockerized MapReduce)](http://www.pachyderm.io/) & [Github](https://github.com/pachyderm/pfs)\r\n* [Docker isn’t just for deployment - Ben Dixon (RailsConf 2015)](https://www.youtube.com/watch?v=NGcT0dGivoM)\r\n\r\n#### DEVOPS - DOCKER - CONFIGURATION\r\n\r\n* [The Challenges of Container Configuration - Gareth Rushgrove (Craft Conference 2016)](http://www.ustream.tv/recorded/86186490) & [slides](https://speakerdeck.com/garethr/the-challenges-of-container-configuration)\r\n\r\n#### DEVOPS - DOCKER - MICROCONTAINERS\r\n\r\n* [Microcontainers – Tiny, Portable Docker Containers - Iron.io](http://www.iron.io/blog/2016/01/microcontainers-tiny-portable-containers.html)\r\n* [Uber tiny Docker images for all the things (Ruby, Elixir, Python, etc.) - Iron.io](https://github.com/iron-io/dockers)\r\n\r\n#### DEVOPS - DOCKER - MULTIHOST ORCHESTRATION\r\n\r\n* [Compose](http://docs.docker.com/compose/)\r\n* Sebastien Goasguen: [Intro to Docker Compose Tool for Multi-Container Applications](https://www.linux.com/learn/introduction-docker-compose-tool-multi-container-applications) | [Docker Volumes and Networks with Compose](https://www.linux.com/learn/docker-volumes-and-networks-compose) | [How to Use Docker Machine to Create a Swarm Cluster](https://www.linux.com/learn/how-use-docker-machine-create-swarm-cluster) | [Using Docker Swarm to Create an Overlay Network](https://www.linux.com/learn/using-docker-swarm-create-overlay-network)\r\n* [Dacker Ruby gem](https://github.com/talkingquickly/dacker)\r\n* [Tools Built on Top of The Docker API - Vassili Van Der Mersch](http://nordicapis.com/tools-built-on-top-of-the-docker-api/)\r\n\r\n##### DEVOPS - DOCKER - MULTIHOST ORCHESTRATION - CENTURION\r\n\r\n* [Centurion - NewRelic](https://github.com/newrelic/centurion)\r\n\r\n##### DEVOPS - DOCKER - MULTIHOST ORCHESTRATION - COMPOSE & SWARM\r\n\r\n* [Docker 1.12 Release Candidate 2](https://www.youtube.com/watch?v=F7hoq0KwHD4)\r\n* [Introducing the Docker for AWS and Azure Beta - Michael Friis](https://blog.docker.com/2016/06/azure-aws-beta/)\r\n* [Compose - Docker](http://docs.docker.com/compose/)\r\n* Sebastien Goasguen: [Intro to Docker Compose Tool for Multi-Container Applications](https://www.linux.com/learn/introduction-docker-compose-tool-multi-container-applications) | [Docker Volumes and Networks with Compose](https://www.linux.com/learn/docker-volumes-and-networks-compose)\r\n* [Webinar Recording: Docker Compose: Simplifying Container Automation - Shawn Powers & Nathan Bank](https://www.youtube.com/watch?v=11jfxkuI0l4)\r\n* [How To Install Wordpress and PhpMyAdmin with Docker Compose on Ubuntu 14.04 - DigitalOcean](https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04)\r\n* [Use Docker Swarm with a data persistence layer - Jonas Rosland](https://blog.emccode.com/2015/11/03/use-docker-swarm-with-a-data-persistence-layer/)\r\n* [How To Configure a Continuous Integration Testing Environment with Docker and Docker Compose on Ubuntu 14.04 - Pablo Chico de Guzmán](https://www.digitalocean.com/community/tutorials/how-to-configure-a-continuous-integration-testing-environment-with-docker-and-docker-compose-on-ubuntu-14-04)\r\n* [Docker Compose & Networking - Mano Marks](https://www.youtube.com/watch?v=rFQqiuFIjms)\r\n* [Docker Compose Files Version 2](https://www.youtube.com/watch?v=EReEOMS7gsk)\r\n* [Docker Swarm Part 1: Overview](https://www.youtube.com/watch?v=sg9wNcdMhbU) | [Part 2: Discovery](https://www.youtube.com/watch?v=4t7nej89dk4) | [Part 3: Scheduling](https://www.youtube.com/watch?v=7B_bX3czq-Y) | [Part 4: High Availability](https://www.youtube.com/watch?v=YjlH8ypkXOM) | [Part 5: Networking](https://www.youtube.com/watch?v=XemATdk8mY4) | [Part 6: Volumes](https://www.youtube.com/watch?v=Zxe0WAzPcjY)\r\n* Docker Swarm: [Create and Join Node](https://www.youtube.com/watch?v=x843GyFRIIY) | [Setting up HA](https://www.youtube.com/watch?v=rCWki35Qk2M) | [Set up TLS](https://www.youtube.com/watch?v=PFw1GTx1XOQ) | [Container Rescheduling](https://www.youtube.com/watch?v=Bf7N6won3Eg)\r\n* [Docker swarm cluster in AWS - Rafael Benevides](https://www.youtube.com/watch?v=JgUyI-MIKZ0)\r\n* [From Local Docker Development to Production Deployments - Jérôme Petazzoni (AWS re:Invent 2015)](https://www.youtube.com/watch?v=7CZFpHUPqXw)\r\n\r\n##### DEVOPS - DOCKER - MULTIHOST ORCHESTRATION - MESOS\r\n\r\n* [Mesos - Apache](http://mesos.apache.org/)\r\n\r\n#### DEVOPS - DOCKER - OSX\r\n\r\n* [Installation](https://docs.docker.com/engine/installation/mac/)\r\n* [Docker Machine](https://docs.docker.com/machine/)\r\n\r\n#### DEVOPS - DOCKER - POSTGRESQL\r\n\r\n* [Official Postgres Docker repo](https://hub.docker.com/_/postgres/)\r\n\r\n#### DEVOPS - DOCKER - REMOTE API\r\n\r\n* [Docker Remote API](https://docs.docker.com/reference/api/docker_remote_api/)\r\n* [Docker-api Ruby gem](https://github.com/swipely/docker-api)\r\n\r\n#### DEVOPS - DOCKER - VIDEOS\r\n\r\n* ContainerSummit.io: [2016 New York](http://containersummit.io/events/nyc-2016/videos) | [San Francisco 2015](http://containersummit.io/events/sf-2015/videos)\r\n* [DockerCon Online Meetup 2015](http://confreaks.tv/events/dockeronlinemeetup2015)\r\n* [DockerCon EU 2015](http://confreaks.tv/events/dockerconeu2015)\r\n* [DockerCon & Co](http://confreaks.tv/events/docker&co2015)\r\n\r\n### DEVOPS - DOCKER - VOLUMES\r\n\r\n* [Understanding Volumes in Docker - Adrian Mouat](http://container-solutions.com/understanding-volumes-docker/)\r\n* [Manage Data in Containers](https://docs.docker.com/engine/userguide/dockervolumes/)\r\n\r\n### DEVOPS - DOKKU\r\n\r\n* Dokku: [Github](https://github.com/dokku/dokku) | [website](http://dokku.viewdocs.io/dokku/) | [documentation](http://dokku.viewdocs.io/dokku/installation/)\r\n* [One-click install-and-deploy Dokku on DigitalOcean](https://www.digitalocean.com/features/one-click-apps/dokku/)\r\n* [Make Your Own Heroku with Dokku and DigitalOcean - Roger Stringer](http://rogerstringer.com/2015/05/13/make-your-own-heroku/)\r\n* [Create Your Own Heroku Using Dokku-alt on DigitalOcean - Samudra Harapan Bekti](http://bekti.io/create-your-own-heroku-using-dokku-alt-on-digitalocean/)\r\n* [Deploying Dokku to DigitalOcean for excellent deploying goodness - Pam Selle](http://thewebivore.com/tutorial-deploying-dokku-to-digitalocean-for-excellent-deploying-goodness/)\r\n* [Running Dokku on Digital Ocean - Henrik Nyh](https://gist.github.com/henrik/26bb73091712aa42abf2)\r\n\r\n### DEVOPS - LOGGING\r\n\r\n#### DEVOPS - LOGGING - ELK (Elasticsearch + Logstash + Kibana)\r\n\r\n* [My Elasticsearch resources](#elasticsearch)\r\n* [My Logstash resources](#devops---logging---logstash)\r\n* [Elasticsearch, Logstash & Kibana - Kevin Kluge](http://www.socallinuxexpo.org/scale12x-supporting/default/files/presentations/Scale12x%20-%20Intro%20to%20Elasticsearch%20%28Kluge%29.pdf)\r\n* [Using ElasticSearch, Logstash and Kibana to Create Realtime Dashboards - Alexander Reelsen](http://gotocon.com/dl/goto-berlin-2014/GOTO_Night/logstash-kibana-intro.pdf)\r\n* [Query Log Analysis – Using Logstash, ElasticSearch and Kibana - Niels Henrik Hagen](http://nhhagen.wordpress.com/2013/11/28/query-log-analysis-using-logstash-elasticsearch-and-kibana/)\r\n* [Visualizing Logs Using ElasticSearch, Logstash and Kibana - Jeff Sogolov](https://www.youtube.com/watch?v=Kqs7UcCJquM)\r\n* [Setting up Elasticsearch, Kibana, and Logstash - Daniel Dreier](https://www.ddreier.com/setting-up-elasticsearch-kibana-and-logstash/) & [Logstash Cnfiguration Dissection](https://www.ddreier.com/logstash-configuration-dissection/)\r\n\r\n##### DEVOPS - LOGGING - ELK (Elasticsearch + Logstash + Kibana) - SHIELD (Non-free)\r\n\r\n* [Shield (non-free ELK security product)](https://www.elastic.co/products/shield)\r\n* [Shield documentation](http://www.elastic.co/guide/en/shield/current/index.html)\r\n\r\n#### DEVOPS - LOGGING - ELSA\r\n\r\n* [ELSA: Enterprise Log Search and Archive](https://code.google.com/p/enterprise-log-search-and-archive/)\r\n\r\n#### DEVOPS - LOGGING - GRAYLOG2\r\n\r\n* [GrayLog2](http://graylog2.org/)\r\n\r\n#### DEVOPS - LOGGING - KIBANA\r\n\r\n* Kibana documentation: [Current](http://www.elastic.co/guide/en/kibana/current/index.html) | [Older versions](http://www.elastic.co/guide/en/kibana/index.html)\r\n\r\n#### DEVOPS - LOGGING - LOGSTASH\r\n\r\n* Documentation: [Current](http://www.elastic.co/guide/en/logstash/current/index.html) | [1.4.2](http://logstash.net/docs/1.4.2/)\r\n* [Getting Started](http://logstash.net/docs/1.4.2/tutorials/getting-started-with-logstash)\r\n* [Logstash and Other Things - Jordan Sissel (PuppetConf 2012)](https://www.youtube.com/watch?v=RuUFnog29M4)\r\n* [More Logstash Awesome - Jordan Sissel (PuppetConf 2013)](https://www.youtube.com/watch?v=fwMnb4-t8vo)\r\n* [Logstash Presentation - Matthew Smith](https://www.youtube.com/watch?v=U3m0jKygAqU)\r\n* [A Bit of Logstash Cooking](https://home.regit.org/2014/01/a-bit-of-logstash-cooking/)\r\n* [Chef-logstash](https://github.com/lusis/chef-logstash)\r\n* [Logstash Google Forum](https://groups.google.com/forum/?fromgroups#%21forum/logstash-users)\r\n* [Logstash Freenode IRC](http://irc.lc/freenode/logstash/t4nk@@@)\r\n\r\n### DEVOPS - NEWS\r\n\r\n* [The Register](http://www.theregister.co.uk/infrastructure/)\r\n\r\n### DEVOPS - OPENSTACK\r\n\r\n* [OpenStack.org](https://www.openstack.org/): [Overview](https://www.openstack.org/software/)\r\n* [What is OpenStack?](http://opensource.com/resources/what-is-openstack)\r\n* [OpenStack on Youtube](https://www.youtube.com/results?search_query=openstack) & [OpenStack Channel](https://www.youtube.com/user/OpenStackFoundation)\r\n* [Paris Summit 2014: Videos](https://www.openstack.org/summit/openstack-paris-summit-2014/session-videos/)\r\n* [OpenStack Superuser magazine](http://superuser.openstack.org/articles)\r\n* [@OpenStack (Twitter)](https://twitter.com/openstack)\r\n* [OpenStack blog](https://www.openstack.org/blog/)\r\n* [Ubuntu on OpenStack](http://www.ubuntu.com/cloud/openstack)\r\n\r\n### DEVOPS - VAGRANT\r\n\r\n* [Vagrant, Packer, Serf: Maximum Potency DevOps - Mitchell Hashimoto (Kod.io 2014)](http://confreaks.tv/videos/3251-kodio_2014-vagrant-packer-serf-maximum-potency-devops)\r\n\r\n### DEVOPS - VIDEOS\r\n\r\n* [DevOpsDays (Boston 2016)](http://confreaks.tv/events/devopsdaysboston2016)\r\n* [DevOpsDays Rockies 2016](http://confreaks.tv/events/devopsdaysrox2016)\r\n\r\n## DOCUMENTATION\r\n\r\n* [DevDocs.io - \"combines multiple API documentations in a fast, organized, and searchable interface\"](http://devdocs.io/)\r\n* [ZealDocs - open-soure offline documentation browser](http://zealdocs.org/)\r\n\r\n## DOWNTIME\r\n\r\n* [Ruby-Toolbox - Maintenance Mode](https://www.ruby-toolbox.com/categories/Maintenance_Mode)\r\n* [Zero Downtime Deploys Made Easy - Matt Duncan (RubyConf 2012)](http://confreaks.tv/videos/1279-rubyconf2012-zero-downtime-deploys-made-easy)\r\n* [Zero downtime deploys for Rails apps - Pedro Belo (RailsConf 2012)](http://confreaks.tv/videos/896-railsconf2012-zero-downtime-deploys-for-rails-apps) using Heroku, Unicorn and HAProxy\r\n\r\n## ELASTICSEARCH\r\n\r\n* Elasticsearch documentation:\r\n    * Reference: [Current](http://www.elastic.co/guide/en/elasticsearch/reference/current/index.html) | [Previous versions](http://www.elastic.co/guide/en/elasticsearch/reference/index.html)\r\n        * [CRUD APIs](http://www.elastic.co/guide/en/elasticsearch/reference/current/docs.html)\r\n        * [Search](http://www.elastic.co/guide/en/elasticsearch/reference/current/search.html)\r\n        * [Indices](http://www.elastic.co/guide/en/elasticsearch/reference/current/indices.html)\r\n        * [cat APIs](http://www.elastic.co/guide/en/elasticsearch/reference/current/cat.html)\r\n        * [Cluster APIs](http://www.elastic.co/guide/en/elasticsearch/reference/current/cluster.html)\r\n        * [Queries](http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-queries.html)\r\n        * [Filters](http://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-filters.html)\r\n        * [Mapping](http://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html)\r\n        * [Analyzers](http://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html)\r\n    * [Videos](https://www.elastic.co/videos/) & [Elastic{ON} videos](https://www.elastic.co/elasticon/2015/sf/videos)\r\n* [_Exploring Elasticsearch_ (online tutorial/book) - Andrew Cholakian](http://exploringelasticsearch.com)\r\n* _Elasticsearch: The Definitive Guide_: [Online](http://www.elastic.co/guide/en/elasticsearch/guide/master/) | [Github repo](https://github.com/elastic/elasticsearch-definitive-guide) & [instructions for generating a PDF](http://asciidoctor.org/docs/convert-asciidoc-to-pdf/)\r\n* [Your Data, Your Search, Elasticsearch - Costin Leau (SpringOne2GX 2013)](https://www.youtube.com/watch?v=G56aE1kiOZw)\r\n* [Elasticsearch: The Definitive Guide](http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/index.html)\r\n* [Make sense of your (big) data using Elasticsearch - Honza Král (PyData Berlin 2014)](https://www.youtube.com/watch?v=sCktucuv5Yo)\r\n* [Explore Your Data With Elasticsearch - Honza Král (SF Python talk)](https://www.youtube.com/watch?v=UNsDUNWRWzg)\r\n* [Getting Down and Dirty with ElasticSearch - Clinton Gormley (NoSQL Matters Barcelona 2013)](https://www.youtube.com/watch?v=7FLXjgB0PQI)\r\n* [Elasticsearch from the bottom up - Alex Brasetvik (EuroPython 2014)](https://www.youtube.com/watch?v=PpX7J-G2PEo) & [article](https://www.found.no/foundation/elasticsearch-from-the-bottom-up/)\r\n* [Elasticsearch from the top down: Tracing a request down to the bits - Alex Brasetvik](https://www.found.no/foundation/elasticsearch-top-down/)\r\n* [How To Interact with Data in ElasticSearch Using CRUD Operations - Justin Ellingwood](https://www.digitalocean.com/community/tutorials/how-to-interact-with-data-in-elasticsearch-using-crud-operations)\r\n\r\n### ELASTICSEARCH - BLOGS\r\n\r\n* [Elastic.co blog](https://www.elastic.co/blog)\r\n* [Foundation (Found.no)](https://found.no/foundation/)\r\n\r\n### ELASTICSEARCH - ELASTICAT\r\n\r\n* [elasticat (Ruby script for prettifying JSON returned from Elasticsearch)](https://gist.githubusercontent.com/karmi/5670573/raw/elasticat)\r\n\r\n### ELASTICSEARCH - HELP\r\n\r\n* [Elasticsearch Freenode IRC](http://irc.lc/freenode/elasticsearch/t4nk@@@)\r\n* [Elasticsearch Google Forum](https://groups.google.com/forum/?fromgroups#%21forum/elasticsearch)\r\n\r\n### ELASTICSEARCH - INFORMATION RETRIEVAL\r\n\r\n* [Intro to Information Retrieval - Christopher D. Manning, Prabhakar Raghavan and Hinrich Schütze, 2008](http://www-nlp.stanford.edu/IR-book/)\r\n\r\n### ELASTICSEARCH - LUCENE\r\n\r\n* [Lucene Core](http://lucene.apache.org/core/) & [docs](http://lucene.apache.org/core/4_10_1/index.html)\r\n\r\n### ELASTICSEARCH - MAPPING\r\n\r\n* [Intro to Elasticsearch Mapping - Njal Karevoll](https://www.found.no/foundation/elasticsearch-mapping-introduction/)\r\n* [All about analyzers, Part One - Andrew Cholakian](https://www.found.no/foundation/text-analysis-part-1/) & [Part Two](https://www.found.no/foundation/text-analysis-part-2/)\r\n* [A data exploration workflow for mappings - Njal Karevoll](https://www.found.no/foundation/mapping-workflow/)\r\n* [Nested type](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-nested-type.html)\r\n* [ElasticSearch – nested mappings and filters - Joel Abrahamsson](http://joelabrahamsson.com/elasticsearch-nested-mapping-and-filter/)\r\n* [Elasticsearch: Advanced search and nested objects - Gregquat](http://obtao.com/blog/2014/04/elasticsearch-advanced-search-and-nested-objects/)\r\n\r\n### ELASTICSEARCH - PERFORMANCE & CONFIGURATION\r\n\r\n* [Six ways to crash Elasticsearch - Konrad G. Beiske](https://www.found.no/foundation/crash-elasticsearch/)\r\n* [Elasticsearch in Production - Alex Brasetvik (Berlin Buzzwords 2013)](https://www.youtube.com/watch?v=gkdfNl0WL-A)\r\n* [Optimizing Elasticsearch searches - Alex Brasetvik](https://www.found.no/foundation/optimizing-elasticsearch-searches/)\r\n* [Troubleshooting Elasticsearch searches, for beginners - Alex Brasetvik](https://www.found.no/foundation/beginner-troubleshooting/)\r\n\r\n### ELASTICSEARCH - PYTHON\r\n\r\n* [Elasticsearch-py (low level)](https://github.com/elasticsearch/elasticsearch-py)\r\n* [Elasticsearch-dsl-py (higher level)](https://github.com/elasticsearch/elasticsearch-dsl-py)\r\n* [Elasticsearch DSL - Honza Král](http://www.confreaks.tv/videos/4501-DjangoCon2014-elasticsearch-dsl)\r\n\r\n### ELASTICSEARCH - QUERYING & FILTERING\r\n\r\n* [Combining filters](http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/combining-filters.html)\r\n\r\n### ELASTICSEARCH - RAILS\r\n\r\n* Elasticsearch-Ruby APIs: [Ruby/Rails APIs](http://www.elastic.co/guide/en/elasticsearch/client/ruby-api/current/index.html)\r\n* Ruby gems' documentation:\r\n    * [elasticsearch-rails](https://github.com/elasticsearch/elasticsearch-rails/blob/master/elasticsearch-rails/README.md)\r\n    * [elasticsearch-model](https://github.com/elasticsearch/elasticsearch-rails/blob/master/elasticsearch-model/README.md)\r\n    * [elasticsearch-ruby](https://github.com/elasticsearch/elasticsearch-ruby)\r\n    * [elasticsearch-transport](https://github.com/elasticsearch/elasticsearch-ruby/tree/master/elasticsearch-transport)\r\n    * [elasticsearch-api](https://github.com/elasticsearch/elasticsearch-ruby/tree/master/elasticsearch-api)\r\n* [Full-Text Search in Rails with ElasticSearch - Mostafa Abdulhamid](http://www.sitepoint.com/full-text-search-rails-elasticsearch/)\r\n* [Using Elasticsearch With Rails Apps - Brian Gugliemetti (RailsConf 2013)](https://www.youtube.com/watch?v=U-LrUN6jal8)\r\n* [Getting Started with Elasticsearch on Rails - Ian Ehlert](http://www.codinginthecrease.com/news_article/show/409843?referrer_id=930667)\r\n\r\n## ELECTRON\r\n\r\n* [Electron: \"Build cross platform desktop apps with web technologies\"](http://electron.atom.io/)\r\n\r\n## ELIXIR\r\n\r\n* Elixir: [Docs](http://elixir-lang.org/docs.html) & [Getting Started (tutorial)](http://elixir-lang.org/getting-started/introduction.html) & [Erlang/Elixir Syntax Crash Course](http://elixir-lang.org/crash-course.html) & [Elixir-lang-talk group](https://groups.google.com/forum/?fromgroups#!forum/elixir-lang-talk) & [Elixir Core mailing list](https://groups.google.com/forum/#!forum/elixir-lang-core) & [ElixirForum.com](http://elixirforum.com/)\r\n* [Awesome Elixir - Curated list of Elixir/Erlang libraries, resources & shiny things](https://github.com/h4cc/awesome-elixir)\r\n* [Cheatsheet](https://www.dropbox.com/s/lr1t87rw4wfnyb3/elixir-cheat-sheet-v2.pdf?dl=0)\r\n* [Explicit Elixir - Paul Lamb (ElixirDaze 2016)](https://www.youtube.com/watch?v=sr5I5ncg0kU)\r\n* [What Elixir is About - José Valim (Erlang Factory SF 2015)](https://www.youtube.com/watch?v=Lqo9-pQuRKE)\r\n* [Elixir with José Valim](http://howistart.org/posts/elixir/1)\r\n* [Building a web framework from scratch in Elixir - Robert Lord](https://codewords.recurse.com/issues/five/building-a-web-framework-from-scratch-in-elixir)\r\n* [Elixir School](https://elixirschool.com/)\r\n* [Sweet Elixir! - Ryan Cromwell](http://www.infoq.com/presentations/elixir) & [full notes](https://github.com/cromwellryan/sweetelixir)\r\n* [Exercism.io Elixir](http://exercism.io/languages/elixir)\r\n* [Elixir talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=elixir&commit=go)\r\n* [ElixirConf 2014 videos](http://www.confreaks.tv/events/elixirconf2014)\r\n* [Elixir Koans - Nicolas Deverge](https://github.com/dojo-toulouse/elixir-koans)\r\n* [Introducing reducees - José Valim](http://blog.plataformatec.com.br/2015/05/introducing-reducees/)\r\n* Elixir Express: [Workshop - Chris McCord (RailsConf 2014)](http://www.youtube.com/watch?v=5kYmOyJjGDM) & [Basic documentation](https://github.com/chrismccord/elixir_express/tree/master/basics) & [Advanced documentation](https://github.com/chrismccord/elixir_express/tree/master/advanced)\r\n* [Elixir for the Rubyist - Hal Fulton (RubyDay 2015)](https://www.youtube.com/watch?v=UNWPp5YSDXQ)\r\n* [Elixir With José Valim - HowIStart.org](https://howistart.org/posts/elixir/1)\r\n* [What's Ahead for Elixir? - José Valim (ElixirConf EU 2015)](https://www.youtube.com/watch?v=EaP0y4pdKD0)\r\n* [Elixir: Power of Erlang, Joy of Ruby - Dave Thomas (LoneStarRuby 2013)](https://www.youtube.com/watch?v=KQwEmdOH-GM)\r\n* [Introduction to Elixir: a New Language on the VM - José Valim](https://www.youtube.com/watch?v=41PvAPSX0wg)\r\n* [Foray into Functional Programming with Elixir - Trevor Brown (Suncoast Java Users Group Dec 2014)](https://www.youtube.com/watch?v=NsBQdZwpz-4)\r\n* [Functional and concurrent programming with Elixir - Gabriele Lana](https://www.youtube.com/watch?v=7GGxJbBk-oU)\r\n* [Rubyists, have a sip of Elixir! - Benjamin Tan (RubyConf 2014)](http://confreaks.tv/videos/5078-RubyConf2014-rubyists-have-a-sip-of-elixir)\r\n* [Intro to Elixir for Rubyists - Josh Adams & Robby Clements (ExlirConf 2014)](http://confreaks.tv/videos/4121-elixirconf2014-introduction-to-elixir-for-rubyists)\r\n* [Intro to Elixir - SolutionStreet.com](https://www.youtube.com/watch?v=lly-1UYmnFI)\r\n* [Where I Got Stuck Using IEx.pry in Elixir - Jesse Trimble](http://www.jessetrimble.net/iex-pry-elixir/)\r\n* [Programming Elixir: The magic of today's tonic - Katie Miller (Linux.conf.au Jan 2014)](https://www.youtube.com/watch?v=uWSGBpW3xEQ)\r\n* [Ohai, Elixir! - Benjamin Tan (GeekCampsG 2014)](https://www.youtube.com/watch?v=vS47DS3tn0k)\r\n* [Elixir - A modern approach to programming for the Erlang VM - Jose Valim (RuPy 2012)](https://www.youtube.com/watch?v=q2Hxt0tOR0k)\r\n* ElixirConf: [ElixirConf 2015 videos](https://www.youtube.com/playlist?list=PLWbHc_FXPo2jBXpr1IjyUgJ7hNS1eTf7H) | [ElixirConf 2014 videos](http://confreaks.tv/events/elixirconf2014)\r\n* [Keynote - José Valim (ElixirConf 2014)](http://confreaks.tv/videos/4134-elixirconf2014-keynote-elixir)\r\n* [Elixir Tooling - Eric Meadows-Jönsson (Berlin Erlang Factory Lite)](https://www.youtube.com/watch?v=7_0iOlJCL9E)\r\n* [Idioms for building distributed fault-tolerant applications with Elixir - José Valim (GOTO Conferences 2015)](https://www.youtube.com/watch?v=B4rOG9Bc65Q)\r\n* [Keynote: \"Think Different\" - Dave Thomas (ElixirConf 2014)](http://confreaks.tv/videos/4119-elixirconf2014-opening-keynote-think-different)\r\n* [Ruby and Elixir - Casey Rosenthal (Portland Ruby Brigade Jan 2015)](http://confreaks.tv/videos/pdxrbjan2015-ruby-and-elixir)\r\n* [Hex: How it was built - Eric Meadows–Jönsson (ElixirConf 2014](https://www.youtube.com/watch?v=VAa7YnZo0hU)\r\n* [Elixir Sips (non-free)](http://elixirsips.com) & [Sipper (downloader) - Henrik Nyh](https://github.com/henrik/sipper)\r\n* [Elixir Starters](http://elixirstarters.github.io/)\r\n* [Elixir Freenode IRC](http://irc.lc/freenode/elixir)\r\n* [Writing Command Line Applications with Elixir - James Smith (ElixirConf 2014)](https://www.youtube.com/watch?v=7l_fDU86pr4)\r\n* [Elixir Code Reading: Blacksmith](https://www.zweitag.de/en/blog/technology/elixir-code-reading-blacksmith)\r\n* [Elixir Fountain - bi-weekly podcast](https://soundcloud.com/elixirfountain)\r\n* [Elixir in times of microservices - José Valim](http://blog.plataformatec.com.br/2015/06/elixir-in-times-of-microservices/)\r\n* [Closures: Elixir vs. Ruby vs. JavaScript - Hubert Łępicki](https://www.amberbit.com/blog/2015/6/14/closures-elixir-vs-ruby-vs-javascript/)\r\n* [ExMachina for Elixir: Factories with a Functional Twist - Josh Steiner & Paul Smith](https://robots.thoughtbot.com/announcing-ex-machina)\r\n* [RED:4 - Learn Elixir The Fun Way (NOT FREE: $40) - Rob Conery](http://www.redfour.io/)\r\n\r\n### ELIXIR - 1.2\r\n\r\n* [Elixir v1.2 released](http://elixir-lang.org/blog/2016/01/03/elixir-v1-2-0-released/)\r\n* [Elixir 1.2 and Elixir in Action](http://theerlangelist.com/article/eia_elixir_12)\r\n\r\n### ELIXIR - ATLAS\r\n\r\n* [Atlas (ORM)](https://github.com/chrismccord/atlas)\r\n\r\n### ELIXIR - BLOGS\r\n\r\n* [Elixir Radar](http://plataformatec.com.br/elixir-radar)\r\n* [ElixirStatus.com](http://elixirstatus.com/)\r\n* [Elixir Weekly](https://elixirweekly.net/)\r\n* [The Erlang eList](http://theerlangelist.com/)\r\n* [Plataformatec](http://blog.plataformatec.com.br/tag/elixir/)\r\n* [The Pug Automatic - Henrik Nyh](http://thepugautomatic.com/)\r\n* [Red Shift](https://shift.infinite.red/tagged/elixir)\r\n\r\n### ELIXIR - BOOKS\r\n\r\n* [Elixir Documentation (PDF)](https://media.readthedocs.org/pdf/elixir-lang/latest/elixir-lang.pdf)\r\n* [Études for Elixir](http://chimera.labs.oreilly.com/books/1234000001642/index.html) & [Github](https://github.com/oreillymedia/etudes-for-elixir)\r\n\r\n### ELIXIR - CODE EXAMPLES\r\n\r\n* [Simulations - James Edward Gray II](https://github.com/JEG2/simulations)\r\n* [a-little-elixir-goes-a-long-way (Elixir version of code examples from The Little Schemer)](https://github.com/jwhiteman/a-little-elixir-goes-a-long-way/tree/master/lib/schemer)\r\n\r\n### ELIXIR - COWBOY\r\n\r\n* Cowboy: [Github](https://github.com/ninenines/cowboy) | [User Guide](http://ninenines.eu/docs/en/cowboy/HEAD/guide/)\r\n\r\n### ELIXIR - COURSES (NON-FREE)\r\n\r\n* [DailyDrip.com - Elixir](https://www.dailydrip.com/topics/elixir)\r\n\r\n### ELIXIR - DEBUGGING\r\n\r\n* [Debugging techniques in Elixir - Erich Kist](http://blog.plataformatec.com.br/2016/04/debugging-techniques-in-elixir-lang/)\r\n\r\n### ELIXIR - DEPLOYMENT\r\n\r\n* Distillery: [Github](https://github.com/bitwalker/distillery) | [Documentation](https://hexdocs.pm/distillery/getting-started.html)\r\n* [Elixir in the times of microservices - José Valim](http://blog.plataformatec.com.br/2015/06/elixir-in-times-of-microservices/)\r\n* [Elixir Deployment Tools - General Discussion, Blog Posts, Wiki - ElixirForum.com](https://elixirforum.com/t/elixir-deployment-tools-general-discussion-blog-posts-wiki/827)\r\n* [Understanding deps and applications in your Mixfile - João Britto](http://blog.plataformatec.com.br/2016/07/understanding-deps-and-applications-in-your-mixfile/)\r\n* exrm: [source](https://github.com/bitwalker/exrm) | [docs](https://github.com/bitwalker/exrm/tree/master/docs) | [package docs (hexdocs.pm)](https://hexdocs.pm/exrm/extra-getting-started.html)\r\n* Edeliver: [Github](https://github.com/boldpoker/edeliver) | [Deploying Elixir applications with Edeliver - Igor Florian](http://blog.plataformatec.com.br/2016/06/deploying-elixir-applications-with-edeliver/)\r\n* [Easy Elixir auto scaling deployment with AWS and Travis CI - Nicklas Ramhöj](https://www.varvet.com/blog/easy-auto-scaling-elixir-deployment-with-aws-and-travis-ci/)\r\n* conform: [source](https://github.com/bitwalker/conform)\r\n* [Deploying Phoenix Applications with Exrm [and Conform] - Brandon Richey](https://medium.com/@diamondgfx/deploying-phoenix-applications-with-exrm-97a3867ebd04#.ke7uldpb4)\r\n* [How to config environment variables with Elixir and Exrm - Igor Florian](http://blog.plataformatec.com.br/2016/05/how-to-config-environment-variables-with-elixir-and-exrm/)\r\n* [Fast Continuous Deployment of an Elixir Gameserver - Martin Kavalar & Martin Schurrer](https://www.youtube.com/watch?v=RoT8RnQHvgo)\r\n\r\n#### ELIXIR - DEPLOYMENT - AWS\r\n\r\n* [Elixir on AWS Lambda - ElixirForum.com](https://elixirforum.com/t/elixir-on-aws-lambda/553)\r\n* [Deploying Elixir to AWS Elastic Beanstalk with Docker - James Robert Somers](https://robots.thoughtbot.com/deploying-elixir-to-aws-elastic-beanstalk-with-docker)\r\n* [Easy Elixir auto scaling deployment with AWS and Travis CI - Nicklas Ramhöj](https://www.varvet.com/blog/easy-auto-scaling-elixir-deployment-with-aws-and-travis-ci/)\r\n* [Deploy Elixir Application To AWS Elastic Beanstalk - Michal Kalbarczyk](https://medium.com/@fazibear/deploy-elixir-application-74e1bce100c6#.hkmdp7i75)\r\n\r\n### ELIXIR - DISTRIBUTION\r\n\r\n* [pg2 and You: Getting Distributed with Elixir - Eric Entin (ElixirConf 2016)](https://www.youtube.com/watch?v=_O-bLuVhcCA) | [Slides](https://speakerdeck.com/antipax/pg2-and-you-getting-distributed-with-elixir)\r\n\r\n### ELIXIR - EARMARK\r\n\r\n* [Earmark—A Pure Elixir Markdown Processor](https://github.com/pragdave/earmark)\r\n\r\n### ELIXIR - ECTO\r\n\r\n* Ecto: [documentation](https://hexdocs.pm/ecto/Ecto.html) | [Github](https://github.com/elixir-lang/ecto) | [discussion forum](https://groups.google.com/forum/#!forum/elixir-ecto)\r\n* [An Intro to Ecto: Using Ecto in Non-Phoenix Elixir Projects - Geoffrey Lessel (Full Stack Talks Aug 2016)](https://www.youtube.com/watch?v=8j3DLfNI6Jw)\r\n* [Leveling Up With Ecto - Darin Wilson (ElixirConf 2016)](https://www.youtube.com/watch?v=QE7bpqpDoKo) | [code](https://github.com/darinwilson/music_db)\r\n* Lew Parker: [Diving into Ecto - 1](http://www.glydergun.com/diving-into-ecto/) | [Diving into Ecto - 2](http://www.glydergun.com/diving-into-ecto-part-2/) | [Ecto Query Library](http://www.glydergun.com/the-ecto-query-library/)\r\n* Understanding Elixir’s Ecto Querying DSL - Thomas Punt: [The Basics](https://www.sitepoint.com/understanding-elixirs-ecto-querying-dsl-the-basics/) | [Beyond the Basics](https://www.sitepoint.com/elixirs-ecto-querying-dsl-beyond-the-basics/)\r\n* [Connecting to Multiple Databases with Ecto - Geoffrey Lessel](http://geoffreylessel.com/2016/connecting-to-multiple-databases-with-ecto/)\r\n* [Ecto’s insert_all and schemaless queries - José Valim](http://blog.plataformatec.com.br/2016/05/ectos-insert_all-and-schemaless-queries/?utm_source=elixir-status&utm_medium=social&utm_campaign=blog-post-promotion)\r\n* [Replace Callbacks with Ecto.Multi - Daniel Berkompas](http://blog.danielberkompas.com/2016/09/27/ecto-multi-services.html)\r\n* [Abandoning models and embracing data - exploring Ecto - Michal Muskala (Elixir Warsaw)](https://www.youtube.com/watch?v=dejHBBW9qXI)\r\n* [Ecto: A language integrated query for Elixir - José Valim (CodeMesh Londong 2013)](https://www.youtube.com/watch?v=SJRfujy9vLA)\r\n* [Ecto - the Past, the Present, the Future - Michał Muskała (ElixirConfEU 2016](https://www.youtube.com/watch?v=msdYuidWYQA) | [slides](http://s3.amazonaws.com/erlang-conferences-production/media/files/000/000/087/original/Ecto_-_the_past__the_present__the_future%281%29.pdf?1463063539)\r\n* [Ecto - Eric Meadows-Jönsson (ElixirConf EU 2015)](https://www.youtube.com/watch?v=snka1bAtZS0)\r\n* [Making Sense of Ecto 2 SQL.Sandbox and Connection Ownership Modes - Piotr Włodarek](https://medium.com/@qertoip/making-sense-of-ecto-2-sql-sandbox-and-connection-ownership-modes-b45c5337c6b7#.7ene51y3q)\r\n* [PostgreSQL indexing with Ecto - Richard Nyström](http://rny.io/elixir/ecto/postgresql/2015/08/31/postgresql-indexing-with-ecto.html)\r\n* [Composable Queries with Ecto - Drew Olson (ElixirConf 2015)](https://www.youtube.com/watch?v=g84TDHt9MDc)\r\n* [Embedding Elixir Structs in Ecto Models - Josh Steiner](https://robots.thoughtbot.com/embedding-elixir-structs-in-ecto-models)\r\n\r\n### ELIXIR - ELASTICSEARCH\r\n\r\n* [Tirexs - Elixir DSL for Elasticsearch](https://github.com/roundscope/tirexs)\r\n* [erlastic_search (Erlang client for Elasticsearch)](https://github.com/tsloughter/erlastic_search)\r\n* [Elasticsearch from Elixir and Docker - Zohaib Rauf](http://zohaib.me/elasticsearch-from-elixir-and-docker/)\r\n\r\n### ELIXIR - EVENT SOURCING/CQRS\r\n\r\n* [CQRS with Elixir and Phoenix - Jean-François Cloutier](http://jfcloutier.github.io/jekyll/update/2015/11/04/cqrs_elixir_phoenix.html)\r\n* [Event Sourcing and CQRS in Elixir - ElixirForum.com](http://elixirforum.com/t/ddd-cqrs-es-nosql-and-functional-programming/519/4)\r\n* [DDD/CQRS/ES/NoSQL and functional programming](https://elixirforum.com/t/ddd-cqrs-es-nosql-and-functional-programming/519)\r\n* [CQRS with Erlang - Bryan Hunter (NDC Conference 2014)](https://vimeo.com/97318824)\r\n\r\n### ELIXIR - EXDOC\r\n\r\n* [ExDoc](https://github.com/elixir-lang/ex_doc)\r\n\r\n### ELIXIR - GENSTAGE\r\n\r\n* [Announcing GenStage - José Valim](http://elixir-lang.org/blog/2016/07/14/announcing-genstage/)\r\n* [GenStage in the Kitchen - Claudio Ortolina (Elixir.LDN 2016)](https://www.youtube.com/watch?v=M78r_PDlw2c)\r\n* [GenStage - José Valim (Elixir London June 2016))](https://www.youtube.com/watch?v=aZuY5-2lwW4)\r\n* [How Do I GenStage? - Adrian Dunston](http://engineering.spreedly.com/blog/how-do-i-genstage.html)\r\n* [Reactive Tweets with Elixir GenStage - Mario Flach](https://almightycouch.org/blog/reactive-tweets-elixir-genstage/)\r\n\r\n### ELIXIR - HEX\r\n\r\n* [Writing and Publishing an Elixir Library - Nithin Bekal](http://nithinbekal.com/posts/elixir-publish-package/)\r\n* [Publishing a package - Hex.pm](https://hex.pm/docs/publish)\r\n\r\n### ELIXIR - MACROS\r\n\r\n* [Using Functions in Elixir Guard Clauses - Chris Keathley](http://keathley.io/2016/04/09/elixir-guard-clauses.html)\r\n* [Understanding Elixir Macros, Part 1 - Basics - Saša Jurić](http://www.theerlangelist.com/2014/06/understanding-elixir-macros-part-1.html), [Part 2 - Micro theory](http://www.theerlangelist.com/2014/06/understanding-elixir-macros-part-2.html), [Part 3 - Getting into the AST](http://www.theerlangelist.com/2014/06/understanding-elixir-macros-part-3.html), [Part 4 - Diving Deeper](http://www.theerlangelist.com/2014/06/understanding-elixir-macros-part-4.html), [Part 5 - Reshaping the AST](http://www.theerlangelist.com/2014/06/understanding-elixir-macros-part-5.html), [Part 6 - In-place code generation](http://www.theerlangelist.com/2014/07/understanding-elixir-macros-part-6.html)\r\n* [Writing a simple macro in Elixir - Dave Thomas](https://www.youtube.com/watch?v=LsLWezjV9Fo)\r\n\r\n### ELIXIR - METAPROGRAMMING\r\n\r\n* [Metaprogramming Elixir - Chris McCord (NDC Oslo 2015)](https://vimeo.com/131643017)\r\n\r\n### ELIXIR - MIX\r\n\r\n* [Intro to Mix](http://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html)\r\n\r\n### ELIXIR - NEURAL NETWORKS\r\n\r\n* [AutomatingTheFuture.com - Quentin Thomas](http://www.automatingthefuture.com/)\r\n  * [Artificial Neural Networks, Elixir, and You - Quentin Thomas](http://www.automatingthefuture.com/blog/2016/9/7/artificial-neural-networks-elixir-and-you?utm_content=buffer9dea0&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer)\r\n\r\n### ELIXIR - OTP\r\n\r\n* [Intro to OTP in Elixir - Jesse J. Anderson (Full Stack Talks Aug 2016)](https://www.youtube.com/watch?v=CJT8wPnmjTM) | [slides](https://speakerdeck.com/jessejanderson/intro-to-otp-in-elixir)\r\n* [High availability with Elixir and Erlang - Saša Jurić (Full Stack Fest 2016)](https://www.youtube.com/watch?v=Ba3aCm3A0o8) & [High Availability - Saša Jurić](https://www.youtube.com/watch?v=wYttHG3S76Y)\r\n* [The Mix and OTP Guide](http://elixir-lang.org/getting-started/mix-otp/agent.html)\r\n* [Creating Elixir libraries as OTP applications - Hubert Łępicki](https://www.amberbit.com/blog/2016/5/10/creating-elixir-libraries-as-otp-applications/)\r\n* [OTP in Elixir - Part 1 - Christian Di Lorenzo (Triangle Elixir 2016)](https://www.youtube.com/watch?v=_WgrfEaAM4Y)\r\n* [Chat Bot: A Practical Walkthrough of the powerful Features Elixir/Erlang/OTP - Jeff Weiss](https://www.youtube.com/watch?v=NrrUyRt_B1w)\r\n* [Finding the needle in the Haystack: Breadth First Search... The Elixir Way - Quentin Thomas](http://www.automatingthefuture.com/blog/2016/4/8/finding-the-needle-in-the-haystack-breadth-first-search)\r\n* [Re-architecting with Elixir/OTP and Pattern Matching - Mustafa Turan](https://medium.com/@mustafaturan/re-architecting-with-elixir-otp-and-pattern-matching-b452213c7947#.igjky3yv7)\r\n\r\n### ELIXIR - PACKAGES\r\n\r\n* [Hex.pm (Erlang & Elixir package manager)](https://hex.pm/)\r\n* [Apex: Awesome Print for Elixir](https://github.com/BjRo/apex)\r\n* [BEAM Toolbox: categorized catalog of Hex packages for Elixir and Erlang - Henrik Nyh](http://toolbox.elixir.pm/)\r\n* [Jolt: REST JSON API with zero coding (Mike Clark)](https://github.com/clarkware/jolt)\r\n* [Quantum: Cron-like job scheduler](https://github.com/c-rack/quantum-elixir)\r\n* [Scrivener: Paginate your Ecto queries (Drew Olson)](https://github.com/drewolson/scrivener)\r\n\r\n### ELIXIR - PERFORMANCE\r\n\r\n* [Measuring your Elixir Application - Renan Ranelli (ElixirConf 2016)](https://www.youtube.com/watch?v=3KhzyDDju0Q) | [Blog post: \"A guide to measuring your Elixir app](http://milhouseonsoftware.com/2016/05/08/measuring-your-elixir-application/)\r\n* [vmstats: gathers metrics on the Erlang VM and sends them to a configurable sink - Fred Hebert](https://github.com/ferd/vmstats)\r\n* [Gathering metrics in Elixir applications - Andrea Leopardi](http://tech.footballaddicts.com/blog/gathering-metrics-in-elixir-applications)\r\n\r\n### ELIXIR - PHOENIX\r\n\r\n* [API Docs](http://hexdocs.pm/phoenix/) | [Github](https://github.com/phoenixframework/phoenix)\r\n* [ElixirConf 2016 Keynote on Phoenix 1.3- Chris McCord](https://www.youtube.com/watch?v=qPiZTxUAaVM)\r\n* [Rails to Phoenix - Brian Cardarella (RailsConf 2016)](https://www.youtube.com/watch?v=OxhTQdcieQE)\r\n* [Phoenix: The Firehose Project: Hands-On Intro to Building Modern Web Applications With Elixir and Phoenix](http://phoenix.thefirehoseproject.com/)\r\n* Photo Album: A Phoenix/Elixir web app - Khaja Minhajuddin: [Part 1](https://www.youtube.com/watch?v=uHQ3tJqiEho) | [Part 2](https://www.youtube.com/watch?v=DOmTHaA8jyI)\r\n* [Elixir on the Web: Phoenix Rising - Artem Chernyak](https://www.youtube.com/watch?v=h4z7WnMLXKI)\r\n* [How We Replaced React With Phoenix - Blake Williams (Thoughtbot)](https://robots.thoughtbot.com/how-we-replaced-react-with-phoenix)\r\n* [Taking Off With Phoenix - Sonny Scroggin (Erlang Factory SF 2016)](https://www.youtube.com/watch?v=eSWNi5vRxU8) & [(NDC London 2016](https://vimeo.com/162047653)\r\n* [New Heights - Chris McCord (ElixirDaze 2016)](https://www.youtube.com/watch?v=E6RTBlO9TZQ)\r\n* Building Phoenix Battleships - Ricardo García Vega: [1: Designing the game mechanics](http://codeloveandboards.com/blog/2016/04/29/building-phoenix-battleship-pt-1/) | [2: Lobby Channel & Game Supervision](http://codeloveandboards.com/blog/2016/05/03/building-phoenix-battleship-pt-2/) | [3: Game setup](http://codeloveandboards.com/blog/2016/05/21/building-phoenix-battleship-pt-3/)\r\n* [Phoenix a web framework for the new web - José Valim (Lambda Days 2016)](https://www.youtube.com/watch?v=MD3P7Qan3pw) | [#pivorak Lviv Ruby MeetUp](https://www.youtube.com/watch?v=Toluc5MCQWs)\r\n* [Phoenix is not Rails - Chris McCord](https://dockyard.com/blog/2015/11/18/phoenix-is-not-rails)\r\n* [Intro to Phoenix - José Valim (Elixir Warsaw Meetup)](https://www.youtube.com/watch?v=3LiLjVCDEpU)\r\n* [Phoenix: A web framework for the new web - José Valim (PolyConf 2015)](https://www.youtube.com/watch?v=WIyXz2wxnJQ)\r\n* [Phoenix - a framework for the modern web - Chris McCord (NDC Conference Norway 2015)](https://vimeo.com/131633172)\r\n* [ExCasts](https://excasts.com/episodes) (requires free registration)\r\n* Brandon Richey: [Writing a Blog in Phoenix and Elixir, Part 1](https://medium.com/@diamondgfx/introduction-fe138ac6079d) | [Part 2: Authorization](https://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-part-2-authorization-814c06fa7c0) | [Debugging Phoenix with IEx.pry](https://medium.com/@diamondgfx/debugging-phoenix-with-iex-pry-5417256e1d11) | [Testing Validations in Elixir and Ecto](https://medium.com/@diamondgfx/testing-validations-in-elixir-and-ecto-677bd8a071a1) | [Writing a Blog Engine in Phoenix and Elixir: Part 4, Adding Roles to our Controllers](https://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-and-elixir-part-4-adding-roles-to-our-controllers-9f4678b48468#.ngm5g5vnt) | [Errata 1](https://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-and-elixir-errata-1-b370269b66c7) | [Part 5, Adding ExMachina](https://medium.com/@diamondgfx/mixology-exmachina-92a08dc3e954#.lnae8ygzq) | [Part 6, Markdown Support](https://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-and-elixir-part-5-markdown-support-fde72badd8e1#.3bwzvyrnq) | [Part 7, Adding Comments Support](https://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-and-elixir-part-7-adding-comments-support-7dfc17dd474e#.phe0zit5://medium.com/@diamondgfx/writing-a-blog-engine-in-phoenix-and-elixir-part-7-adding-comments-support-7dfc17dd474e#.phe0zit5x) | [Part 8, Finishing Comments](https://medium.com/elixir-magic/writing-a-blog-engine-in-phoenix-and-elixir-part-8-finishing-comments-30ff95d44cea) | [Part 9, Live Comments](https://medium.com/elixir-magic/writing-a-blog-engine-in-phoenix-and-elixir-part-9-live-comments-9269669a6941) | [Part 10, Testing Channels](https://medium.com/elixir-magic/writing-a-blog-engine-in-phoenix-and-elixir-part-10-testing-channels-e6371ce4cfbe) | [Part 11, Better UI](https://medium.com/elixir-magic/writing-a-blog-engine-in-phoenix-and-elixir-part-11-better-ui-f17f3d7efa85#.gbwhihmus)\r\n* [Trello clone with Phoenix and React - Ricardo García Vega](https://blog.diacode.com/trello-clone-with-phoenix-and-react-pt-1)\r\n* Elixirdose.com Phoenix tutorial: [Part 1](http://www.elixirdose.com/post/elixirdose_intro_to_phoenix) | [Part 2](http://www.elixirdose.com/post/elixirdose_intro_to_phoenix_2) | [Part 3](http://www.elixirdose.com/post/Phoenix%20Part%203) | [Part 4](http://www.elixirdose.com/post/Phoenix%20Part%204) | [Part 5](http://www.elixirdose.com/post/phoenix_part_5_deploying_phoenix_the_final_part)\r\n* [Elixir Cocktails (blog)](https://www.amberbit.com/elixir-cocktails)\r\n* [PhoenixFramework.org](http://www.phoenixframework.org)\r\n* [Build and test a blazing fast JSON API with Phoenix, an Elixir framework - Paul Smith](https://robots.thoughtbot.com/testing-a-phoenix-elixir-json-api)\r\n* [The Changelog: \"Elixir and Phoenix with Chris McCord\"](http://5by5.tv/changelog/147)\r\n* [Basic web app with Phoenix - Michael Eatherly](http://meatherly.github.io/2015/05/04/phoenixlivelikeawarrior/) & [Phoenix app with authentication - Michael Eatherly](http://meatherly.github.io/2015/05/11/phoenixauthentication/)\r\n* [Elixir Style Guide](https://github.com/niftyn8/elixir_style_guide)\r\n\r\n* [Authentication in Phoenix/Elixir app with Ueberauth and Guardian - Ulan Abdurazakov](https://www.youtube.com/watch?v=X6Z-sDSJ3sE)\r\n\r\n#### ELIXIR - PHOENIX - DEPLOYMENT\r\n\r\n* [Distillery: Phoenix Walkthrough](https://hexdocs.pm/distillery/phoenix-walkthrough.html)\r\n* [Deploying Phoenix Applications with Exrm - Brandon Richey](https://medium.com/@diamondgfx/deploying-phoenix-applications-with-exrm-97a3867ebd04?source=tw-5dbe5bfa021a-1446130465757)\r\n* [Setting Up Phoenix/Elixir With Nginx and LetsEncrypt - Andrew Forward](https://medium.com/@a4word/setting-up-phoenix-elixir-with-nginx-and-letsencrypt-ada9398a9b2c#.fnrxau4z0)\r\n* [Phoenix Flying High: Deploying Phoenix The Final Part](http://www.elixirdose.com/post/phoenix_part_5_deploying_phoenix_the_final_part)\r\n* [Using Phoenix With Docker, Part 3: Containerization - Florian Kraft](https://floriank.github.io/post/using-phoenix-with-docker-part-3-containerization/)\r\n* [One-Click Install Elixir on Ubuntu 14.04 with DigitalOcean](https://www.digitalocean.com/community/tutorials/one-click-install-elixir-on-ubuntu-14-04-with-digitalocean)\r\n* [Deploying Phoenix on Dokku - Henrik Nyh](https://gist.github.com/henrik/c70e32544e09c1a79841)\r\n* [Deploying a Phoenix application using ansible-elixir-stack - Johan Wärlander](http://blog.johanwarlander.com/2015/07/30/deploying-a-phoenix-application-using-ansible-elixir-stack.html)\r\n* [Ansible-elixir-stack](https://github.com/HashNuke/ansible-elixir-stack)\r\n\r\n#### ELIXIR - PHOENIX - JSON\r\n\r\n* [Building and testing a Phoenix JSON API - Paul Smith (Thoughtbot)](https://robots.thoughtbot.com/building-a-phoenix-json-api)\r\n\r\n#### ELIXIR - PHOENIX - PERFORMANCE\r\n\r\n* [Elixir vs Ruby Showdown - Phoenix vs Rails - Chris McCord](http://www.littlelines.com/blog/2014/07/08/elixir-vs-ruby-showdown-phoenix-vs-rails/)\r\n* [Benchmarking Phoenix vs Rails vs Sinatra vs Express vs Martini - Matthew Rothenberg](https://github.com/mroth/phoenix-showdown)\r\n\r\n#### ELIXIR - PHOENIX - PLUGS\r\n\r\n* [Phoenix: Plug.Conn](http://ricostacruz.com/cheatsheets/phoenix-conn.html)\r\n* [Überauth - Elixir Authentication System for Plug-based Web Applications](https://github.com/ueberauth/ueberauth)\r\n* Simple Guardian: [Github](https://github.com/ueberauth/guardian) | [Browser login](http://blog.overstuffedgorilla.com/simple-guardian/) | [API authentication](http://blog.overstuffedgorilla.com/simple-guardian-api-authentication/) | [User permissions](http://blog.overstuffedgorilla.com/simple-guardian-permissions/) | [Multiple sessions](http://blog.overstuffedgorilla.com/simple-guardian-multiple-sessions/)\r\n\r\n#### ELIXIR - PHOENIX - SOCKETS\r\n\r\n* [Driving Phoenix sockets - Saša Jurić](http://theerlangelist.com/article/driving_phoenix_sockets)\r\n\r\n#### ELIXIR - PHOENIX - TESTING\r\n\r\n* [Running Your Phoenix Tests Using Docker - Jason Kriss](https://blog.codeship.com/running-your-phoenix-tests-using-docker/)\r\n\r\n#### ELIXIR - PHOENIX - VIDEOS\r\n\r\n* [Phoenix 1.2 and Beyond - Chris McCord (ElixirConfEU 2016)](https://www.youtube.com/watch?v=n338leKvqnA)\r\n* [Arisen from the Ashes: Phoenix.js and Websockets - Max Beizer](https://www.youtube.com/watch?v=AvKnYO7yo_g)\r\n* [Phoenix Takes Flight - Chris McCord (ElixirConf EU 2015)](https://www.youtube.com/watch?v=fLlItGWiVFc)\r\n* [What's Next for Phoenix - Chris McCord (ElixirConf 2015)](http://confreaks.tv/videos/elixirconf2015-what-s-next-for-phoenix)\r\n* [Phoenix: Productive. Reliable. Fast. - Chris McCord (LoneStarRuby 2015)](https://www.youtube.com/watch?v=STO-uN0xHDQ)\r\n* [Real time web applications with Elixir and Phoenix - Eoin Shanaghy (CorkDev 2015)](https://www.youtube.com/watch?v=DKGqJpT5pvU)\r\n* [Phoenix: A web framework for the new web - José Valim (PolyConf 2015)](https://www.youtube.com/watch?v=WIyXz2wxnJQ)\r\n* [Elixir, Phoenix and the PEEP Stack - Chris Nelson (Cincy Web Tech Summit)](https://www.youtube.com/watch?v=ynPdqqoHNuk)\r\n* [Phoenix - A Framework for the Modern Web - Chris McCord](https://vimeo.com/131633172)\r\n* [Live With Elixir & Phoenix (& React)- @mrwade](https://www.youtube.com/watch?v=quRwsJuP1uc)\r\n* Phoenix with Elm - Alan Gardner: [Video (ElixirConf 2015)](http://confreaks.tv/videos/elixirconf2015-phoenix-with-elm) & Blog: [Pt 1](http://www.cultivatehq.com/posts/phoenix-elm-1/) | [Pt 2](http://www.cultivatehq.com/posts/phoenix-elm-2/) | [Pt 3](http://www.cultivatehq.com/posts/phoenix-elm-3/) | [Pt 4](http://www.cultivatehq.com/posts/phoenix-elm-4/) | [Pt 5](http://www.cultivatehq.com/posts/phoenix-elm-5/) | [Pt 6](http://www.cultivatehq.com/posts/phoenix-elm-6/) | [Pt 7](http://www.cultivatehq.com/posts/phoenix-elm-7/) | [Pt 8](http://www.cultivatehq.com/posts/phoenix-elm-8/) | [Pt 9](http://www.cultivatehq.com/posts/phoenix-elm-9/) | [Pt 10](http://www.cultivatehq.com/posts/phoenix-elm-10/) | [Pt 11](http://www.cultivatehq.com/posts/phoenix-elm-11/)\r\n* [Phoenix asset handling with brunch - Chris McCord](https://www.youtube.com/watch?v=CgSjuCRHKvg)\r\n* [Individualized Content at Web-Scale - Michael Schaefermeyer (ElixirConf EU 2015)](https://www.youtube.com/watch?v=xT8vDHIvurs)\r\n* [Creating a chat application in 15 minutes with Phoenix - Darko Fabijan (PolyConf 14)](https://www.youtube.com/watch?v=tdLJvuQkTNE)\r\n* [Rise of The Phoenix: Building an Elixir Web Framework - Chris McCord (ElixirConf 2014)](https://www.youtube.com/watch?v=3jMbzGv_6tA)\r\n* [Phoenix Book Club - Michael Ries](https://www.youtube.com/playlist?list=PLItFDtW5mcKonA-3LD5UY0gYiMRZUj20V)\r\n\r\n#### ELIXIR - PODCASTS\r\n\r\n* [Elixir Fountain](https://soundcloud.com/elixirfountain)\r\n\r\n#### ELIXIR - PROJECTS\r\n\r\n* [Learn Elixir: Building a Neural Network from Scratch - Karmen Blake (ElixirDaze 2016)](https://www.youtube.com/watch?v=YE0h9DURSOo)\r\n* [Adventures in Robotics with Elixir by Jean-François Cloutier (ElixirDaze 2016)](https://www.youtube.com/watch?v=N_PXas9LtzU)\r\n* [Building a non-trivial robotic brain in Elixir - Jean F. Cloutier (Boston Elixir - January 2016)](https://www.youtube.com/watch?v=K4od_XhuMrk) & [Robot.ex blog](http://jfcloutier.github.io/robotex/)\r\n* [ExSamples: Initializes lists of maps, structs or keyword lists using tabular data in Elixir - Marlus Saraiva](https://github.com/msaraiva/exsamples)\r\n\r\n### ELIXIR - SECURITY\r\n\r\n* [Awesome Cryptography](https://github.com/sobolevn/awesome-cryptography#elixir)\r\n* [Securing Elixir Applications - Bram Verburg (ElixirConfEU 2016)](https://www.youtube.com/watch?v=r0DuAse9tK8) | [slides](http://s3.amazonaws.com/erlang-conferences-production/media/files/000/000/078/original/Bram_Verburg_-_Securing_Elixir_Applications.pdf?1462946275)\r\n\r\n### ELIXIR - STREAMS\r\n\r\n* [How to build Streams in Elixir easily with Stream.resource/3 Awesomeness - Benjamin Tan](http://benjamintan.io/blog/2015/02/05/how-to-build-streams-in-elixir-easily-with-stream-resource-awesomeness/)\r\n\r\n### ELIXIR - STRINGS\r\n\r\n* [Elixir string interpolation for the Rubyist (and others) - Henrik Nyh](http://thepugautomatic.com/2016/01/elixir-string-interpolation-for-the-rubyist/)\r\n\r\n### ELIXIR - TESTING\r\n\r\n#### ELIXIR - TESTING - HOUND\r\n\r\n* [Concurrent Feature Tests with Phoenix and Hound - Kevin Rockwood](http://rockwood.me/2016/concurrent-feature-tests-with-phoenix/)\r\n\r\n#### ELIXIR - TESTING - WALLABY\r\n\r\n* Wallaby: [Docs](https://hexdocs.pm/wallaby/readme.html) | [Github](https://github.com/keathley/wallaby)\r\n* [Concurrent Feature Testing with Wallaby by Chris Keathley (ElixirConf 2016)](https://www.youtube.com/watch?v=TjOXbDJ-yw8) | [slides](https://speakerdeck.com/keathley/concurrent-feature-tests-with-wallaby)\r\n* [Introducing Wallaby – Concurrent Feature Tests for Elixir and Phoenix - Chris Keathley](http://blog.carbonfive.com/2016/04/16/introducing-wallaby-concurrent-feature-tests-for-elixir-and-phoenix/)\r\n\r\n#### ELIXIR - TESTING - QUICKCHECK\r\n\r\n* [QuickCheck for Elixir - Generate Tests Automatically - Thomas Arts (ElixirConf 2015)](https://www.youtube.com/watch?v=nbpZRm9gl50)\r\n\r\n#### ELIXIR - UMBRELLA PROJECTS\r\n\r\n* [Building Umbrella Projects - Wojtek Mach (ElixirConf 2016)](https://www.youtube.com/watch?v=6NTmUQClHrU) & [Acme Bank is an example project to explore and experiment with building modular and maintainable Elixir/Phoenix applications](https://github.com/wojtekmach/acme_bank)\r\n\r\n### ELIXIR - VIDEOS\r\n\r\n* [ElixirConf 2016](https://www.youtube.com/playlist?list=PLE7tQUdRKcyYoiEKWny0Jj72iu564bVFD)\r\n* [Elixir.LDN 2016](https://www.youtube.com/playlist?list=PLWbHc_FXPo2ivlIjzcaHS9N_Swe_0hWj0)\r\n* [Empire City Elixir Conf (EmpEx 2016)](https://www.youtube.com/watch?v=0SRBqHUGe28&list=PLyO-58-sOapw984fSPNyzCyX7SADFn0w0)\r\n* [Elixir videos (Vimeo)](https://vimeo.com/search?q=Elixir)\r\n* ElixirDaze 2016: [On Youtube](https://www.youtube.com/watch?v=rbCb1KEkOSY&list=PLE7tQUdRKcya6djUzNtQQYiMdP4_juhHH) & [On Confreaks](http://confreaks.tv/events/elixirdaze2016)\r\n* [ElixirConf 2015 videos](http://confreaks.tv/events/elixirconf2015)\r\n    * [Keynote: The Pendulum - Bruce Tate](https://www.youtube.com/watch?v=X8rWK-g8kCQ)\r\n    * [Confident Elixir - Lance Halvorsen](https://www.youtube.com/watch?v=9YCg9xaG47s)\r\n* [ElixirConf EU 2015 videos](https://www.youtube.com/watch?v=fLlItGWiVFc&list=PLWbHc_FXPo2jBXpr1IjyUgJ7hNS1eTf7H)\r\n* [Discovering Processes - Saša Jurić (ElixirConfEU 2016)](https://www.youtube.com/watch?v=y_b6RTes83c)\r\n* [Elixir Remote Meetup - DailyDrip.com](https://www.dailydrip.com/topics/elixir-remote-meetup)\r\n* [Three and a Half Ways Elixir Changed Me (and Other Hyperbole) - Rob Conery (NDC London 2016)](https://vimeo.com/161001513)\r\n* [Elixir Is Neat But What Can You Actually Do With It? - Rob Conery (NDC Oslo 2016)](https://vimeo.com/171317253)\r\n* [Elixir Should Take Over the World - Jessica Kerr (ElixirConf 2015)](https://www.youtube.com/watch?v=X25xOhntr6s)\r\n* [What's Ahead for Elixir? - José Valim (ElixirConfEU 2016)](https://www.youtube.com/watch?v=A60nxws_iVs) | [slides](http://s3.amazonaws.com/erlang-conferences-production/media/files/000/000/160/original/Jose_Valim-_What's_ahead_of_Elixir.pdf?1463594498)\r\n* [Explore Elixir Using Board Game Logic - Torben Hoffmann](https://www.youtube.com/watch?v=xEfTyfBf9SE) | [source code (Github)](https://github.com/lehoff/acquirex)\r\n* [Building Multiplayer Games with Phoenix and Phaser - Keith Salisbury (ElixirConfEU 2016](https://www.youtube.com/watch?v=I5L9_cXwBcU)\r\n* [Indy Elixir First (Virtual) Meetup!](https://www.youtube.com/watch?v=U-bZpPehiRk)\r\n* [Concurrent and Resilient Connections to Outside the BEAM - Andrea Leopardi (ElixirConfEU 2016)](https://www.youtube.com/watch?v=U1Ry7STEFiY) | [slides](http://s3.amazonaws.com/erlang-conferences-production/media/files/000/000/149/original/Andrea_Leopardi_Concurrent-and-resilient-connections-to-outside-the-beam.pdf?1463389064)\r\n* [What Elixir Is About - José Valim (Erlang User Conference 2015)](https://www.youtube.com/watch?v=QXcedVc2LQM)\r\n* [Rewriting a Ruby application in Elixir - Claudio Ortolina (ElixirConf 2015)](https://www.youtube.com/watch?v=lho1e04Gzzs)\r\n* [Erlang Factory SF 2015 videos](https://www.youtube.com/playlist?list=PLWbHc_FXPo2h0sJW6X2RZDtT1ndw6KKpQ)\r\n* [Idioms for Building Distributed Fault-tolerant Applications with Elixir - José Valim (goto; conference)](https://www.youtube.com/watch?v=B4rOG9Bc65Q)\r\n* [\"Elixir and the Internet of Things\" - Doug Rohrer (Strangeloop 2014)](https://www.youtube.com/watch?v=a-OCorBXX7M)\r\n* [The Climb Experiencing the Rise of Elixir from the Inside - Bruce Tate & Dave Thomas (Erlang Factory SF 2016)](https://www.youtube.com/watch?v=fklep3sUSWo)\r\n* [Elixir - A modern approach to programming for the Erlang VM - José Valim](https://vimeo.com/53221562) (old but still informative)\r\n\r\n### ELIXIR - WEBRTC\r\n\r\n* [WebRTC and Phoenix, when μ Seconds aren't Fast Enough - Jason Stiebs (ElixirConf 2016)](https://www.youtube.com/watch?v=yI5J2P9kcBQ) | [phoenix_webrtc code](https://github.com/jeregrine/phoenix_webrtc)\r\n* [simple-peer: Simple WebRTC video/voice and data channels](https://github.com/feross/simple-peer)\r\n\r\n## ELM\r\n\r\n* An Introduction to Elm - Evan Czaplicki: [downloadable ePub/PDF/Mobi](https://www.gitbook.com/book/evancz/an-introduction-to-elm/details) | [website](http://guide.elm-lang.org/architecture/index.html)\r\n* Elm Tutorial - Sebastian Porto: [downloadable ePub/PDF/Mobi](https://www.gitbook.com/book/sporto/elm-tutorial/details) | [website](http://www.elm-tutorial.org/)\r\n* [Start Using Elm to Build Web Applications - Murphy Randle](https://egghead.io/courses/start-using-elm-to-build-web-applications)\r\n* Elmbridge Curriculum: [PDF](https://www.gitbook.com/download/pdf/book/raorao/elmbridge-curriculum) | [website](https://raorao.gitbooks.io/elmbridge-curriculum/content/)\r\n* Andy Balaam: [Elm Basics](https://www.youtube.com/watch?v=g48K6ABfRzA) & [Elm makes me happy](https://www.youtube.com/watch?v=8pPO9kM2N5I)\r\n* [Elm, putting the fun in functional - Philip Poots (LondonJS 2016)](https://www.youtube.com/watch?v=oejptx252W8)\r\n* [Awesome Elm](https://github.com/isRuslan/awesome-elm)\r\n* [Elm-Live (development server)](https://github.com/tomekwi/elm-live)\r\n* Elm: [Try Elm (online editor)](http://elm-lang.org/try) | [Online Elm repl](http://elmrepl.cuberoot.in/) | [overview](http://elm-lang.org/) | [docs](http://elm-lang.org/docs) | [examples](http://elm-lang.org/examples) | [architecture tutorial](https://github.com/evancz/elm-architecture-tutorial) | [blog](http://elm-lang.org/blog) | [packages](http://package.elm-lang.org/) | [platform](https://github.com/elm-lang/elm-platform) | [slack](http://elmlang.herokuapp.com/) | [debugger](http://debug.elm-lang.org/try)\r\n* [Intro to Elm - Richard Feldman (2016)](https://www.youtube.com/watch?v=3_M2G9U51GA)\r\n* [Elm for Javascript Developers - Jack Franklin (PolyConf 16)](https://www.youtube.com/watch?v=tOkOmWgDLOM)\r\n* [Confident Frontend with Elm - Jack Franklin (Full Stack Fest)](https://www.youtube.com/watch?v=rDQ22Yg3Fms)\r\n* [Intro to Elm - Alan Gardner (2016)](https://vimeo.com/167092863)\r\n* [Understanding the Elm type system - Adam Waselnuk](http://www.adamwaselnuk.com/elm/2016/05/27/understanding-the-elm-type-system.html)\r\n* [Elm Cheat Sheet - Sergey Keller](https://github.com/izdi/elm-cheat-sheet)\r\n* [Elm Style Guide - NoRedInk](https://github.com/NoRedInk/elm-style-guide)\r\n* [Elm FAQ](http://faq.elm-community.org/)\r\n* [elm-by-example.org - Grzegorz Balcerek](http://elm-by-example.org/) | [code examples](https://github.com/grzegorzbalcerek/ElmByExample)\r\n* [jsbin-style Glot.io](https://glot.io/new/elm)\r\n* [Elm by Example: Soup to Nuts - Part 1 - Dorian Karter (Hashrocket)](https://hashrocket.com/blog/posts/elm-by-example-soup-to-nuts-part-1)\r\n* [London Elm Meetup at Plumbee Games](https://www.youtube.com/watch?v=OphstSQhyRM)\r\n* [Elm or how I learned to love front end development - Marco Perone](https://www.youtube.com/watch?v=DX28Hyn8gQw)\r\n* [awesome-elm - Ruslan Ismagilov](https://github.com/isRuslan/awesome-elm)\r\n* [Elmseeds - Erik Person](https://elmseeds.thaterikperson.com)\r\n* [Elm in the real world - Ossi Hanhinen](http://futurice.com/blog/elm-in-the-real-world)\r\n* Elm Friday - Bastian Krol: [What Is Elm?](https://blog.codecentric.de/en/2015/11/elm-friday-part-01-what-is-elm/) | [Installing Elm](https://blog.codecentric.de/en/2015/11/elm-friday-part-02-installing-elm/) | [Hello World](https://blog.codecentric.de/en/2015/11/elm-friday-part-03-hello-world/) | [Hello World 2.0](https://blog.codecentric.de/en/2015/11/elm-friday-part-04-hello-world-2-0/) | [Functions](https://blog.codecentric.de/en/2015/11/elm-friday-part-05-functions/) | [Type Annotations](https://blog.codecentric.de/en/2015/11/elm-friday-part-06-type-annotations/) | [Lists](https://blog.codecentric.de/en/2015/12/elm-friday-part-07-lists/) | [Imports](https://blog.codecentric.de/en/2015/12/elm-friday-part-08-imports/) | [Type System Basics: Tuples, Type Aliases and Records](https://blog.codecentric.de/en/2016/01/elm-friday-part-09-type-system-basics/) | [Type System Basics: Union Types and Tagged Unions](https://blog.codecentric.de/en/2016/03/elm-friday-part-10-union-types/)\r\n* Typed up CRUD SPA with Haskell and Elm - Magnus Rundberget: [Part 1: Spike time](http://rundis.github.io/blog/2015/haskell_elm_spa_part1.html) | [Part 2: Persistence up and running](http://rundis.github.io/blog/2016/haskel_elm_spa_part2.html) | [ Part 3: Routing](http://rundis.github.io/blog/2016/haskel_elm_spa_part3.html)\r\n* Real World Elm - Michael Rijnders: [Part 1](http://engineering.truqu.com/2015/08/19/real-world-elm-part-1.html) | [Part 2](http://engineering.truqu.com/2015/09/25/real-world-elm-part-2.html)\r\n* [Elm Explained - Nik Silver](https://github.com/niksilver/elm-explained)\r\n* [Built With Elm](http://builtwithelm.co/)\r\n* [Elmcast.io](http://elmcast.io): [Elm Toolbox #1: Platform](http://www.ajhager.com/elm-toolings/) | [Elm Toolbox #2: Utilities](http://www.ajhager.com/elm-toolbox-part-2-utilities/)\r\n\r\n### ELM - 0.18\r\n\r\n* [The Perfect Bug Report: Debugging With Elm 0.18 - Evan Czaplicki](http://elm-lang.org/blog/the-perfect-bug-report)\r\n\r\n### ELM - 0.17\r\n\r\n* [Upgrading to 0.17](https://github.com/elm-lang/elm-platform/blob/master/upgrade-docs/0.17.md)\r\n\r\n### ELM - ABOUT\r\n\r\n* [6 Months of Elm in Production - Richard Feldman (Forward University)](http://forwardjs.com/university/elm-in-production)\r\n* [Growing the Oasis: Elm in Production - Richard Feldman (June 2015)](http://www.ustream.tv/recorded/64112108)\r\n* [Why I think Elm is the Future of Front End Development - Rishi Goomar](https://medium.com/@rgoomar/why-i-think-elm-is-the-future-of-front-end-development-21e9b091fa05#.g3rivrvzs)\r\n* [Elm: The Game-Changer - Bastian Krol (RuhrJS 2016)](https://www.youtube.com/watch?v=BQ3fMqwC0zE)\r\n* [Elm: Awesomesauce or just yet another language for the Front-end? - Magnus Rundberget](https://vimeo.com/181814362)\r\n* [Elm Programming Language - Jesse Williamson (FullStack Talks)](https://www.youtube.com/watch?v=jrkLrm4Oh2s)\r\n* [Elm Revisited - Web Platform Podcast](https://www.youtube.com/watch?v=UMMxAcqgwos)\r\n* [Move fast and don’t break things. Running a startup on Elm - Nils Eriksson](https://medium.com/the-ahead-story/move-fast-and-dont-break-things-running-a-startup-on-elm-b5491082fe8b#.r1324tptn)\r\n* [Making the Web Functional - Chris McCord & Evan Czaplicki (Erlang Factory 2016)](https://www.youtube.com/watch?v=XJ9ckqCMiKk&feature=youtu.be)\r\n* [Using Elm in the newsroom - Elliot Davies](https://medium.com/digital-times/using-elm-in-the-newsroom-d16fbf636a8e#.ul0o5a4kq)\r\n* NewMountain: [A fun first app with Elm](https://medium.com/@NewMountain/a-fun-first-app-with-elm-c68019b50822#.pkz0b8ace) | [Some thoughts on Elm Development - NewMountain](https://medium.com/@NewMountain/some-thoughts-on-elm-development-39a0f8a9002a#.gjw0gkjz9) | [Let's Build a Productivity Timer App With Elm](https://medium.com/@NewMountain/lets-build-a-productivity-timer-app-with-elm-81718a1b4329#.lzg9nas07)\r\n* [Make the Back-End Team Jealous: Elm in Production - Richard Feldman (StrangeLoop 2015)](https://www.youtube.com/watch?v=FV0DXNB94NE) & [Building a Live-Validated Signup Form in Elm](http://noredinktech.tumblr.com/post/129641182738/building-a-live-validated-signup-form-in-elm)\r\n* Shipping a Production Web App in Elm - Richard Feldman: [Lambda Jam 2015](https://www.youtube.com/watch?v=W9HDueiaIJ4) & [LambdaConf 2015](https://www.youtube.com/watch?v=B7Iwreo1ReU)\r\n* [Let's be mainstream! User focused design in Elm - Evan Czaplicki (Curry On Prague 2015)](https://www.youtube.com/watch?v=oYk8CKH7OhE)\r\n* [Accidentally Concurrent - Evan Czaplicki (CodeMesh London 2015)](https://www.youtube.com/watch?v=DfLvDFxcAIA)\r\n\r\n### ELM - BLOGS\r\n\r\n* [Brian Hicks](https://www.brianthicks.com/)\r\n* [Elm Weekly](http://www.elmweekly.nl/archive)\r\n* [elm-lang.org/blog](http://elm-lang.org/blog)\r\n* [Gizra](http://www.gizra.com/tags.html#Elm-ref)\r\n* [LambdaCat](http://www.lambdacat.com/)\r\n* [NoRedInk](http://tech.noredink.com/)\r\n* [Magnus Rundberget](http://rundis.github.io/blog/)\r\n* [Simon Hampton](http://simonh1000.github.io/blog/)\r\n* [Twitter - elmlang](https://twitter.com/elmlang?lang=en)\r\n\r\n### ELM - CODE EXAMPLES\r\n\r\n* [elm-autocomplete - Greg Ziegan](https://github.com/thebritican/elm-autocomplete)\r\n* [Creating a Fun Game with Elm - Andrey Kuzmin & Kolja Wilcke (Curry On 2016)](https://www.youtube.com/watch?v=En2BKs8unnQ)\r\n* [Start app - Evan Czaplicki](https://github.com/evancz/start-app)\r\n* [How to Create Tetris in Elm - Captain Coder](https://www.youtube.com/playlist?list=PL7C8fMD-89DKhlerIE3BrYNd0PlhA6Zch)\r\n* [API Design Session: elm-autocomplete - Evan Czaplicki](https://www.youtube.com/watch?v=KSuCYUqY058)\r\n* [elm-tutorial-app: example Elm single page application - Sebastian Porto](https://github.com/sporto/elm-tutorial-app)\r\n* Composing Features and Behaviours in the Elm Architecture - Fred Daoud: [0: Intro](https://github.com/foxdonut/adventures-reactive-web-dev/tree/master/client-elm#composing-features-and-behaviours-in-the-elm-architecture) | [1: Creating a Feature](https://github.com/foxdonut/adventures-reactive-web-dev/tree/elm-010-todolist-feature/client-elm#creating-a-feature) | [2: Connecting Features Together](https://github.com/foxdonut/adventures-reactive-web-dev/tree/elm-020-todoform-feature/client-elm#connecting-features-together) | [3: Multiple Listeners](https://github.com/foxdonut/adventures-reactive-web-dev/tree/elm-030-todosummary-feature/client-elm#multiple-listeners) | [4: Composing Features](https://github.com/foxdonut/adventures-reactive-web-dev/tree/elm-040-todominmax-feature/client-elm#composing-features) & [Summary of Daoud's ideas - LambdaCat](http://www.lambdacat.com/road-to-elm-structuring-your-application/)\r\n* [svgbob: Converts ascii scribbles to svg - Ivan Ceras](https://github.com/ivanceras/svgbob)\r\n* [recall-elm - Will Mruzek](https://github.com/mruzekw/recall-elm)\r\n* [haskell-elm-todo-app - Jens Krause](https://github.com/sectore/haskell-elm-todo-app)\r\n* [elm-slice-show - Andrey Kuzmin](https://github.com/w0rm/elm-slice-show)\r\n* [orbital-game - Joakim Kolsjö](https://github.com/joakimk/orbital-game)\r\n* [rocket-elm - Jamon Holmgren](https://github.com/jamonholmgren/rocket-elm)\r\n* [Exploring Elm with a Typeahead - Aristides Staffieri](https://medium.com/denver-devs/exploring-elm-with-a-typeahead-5a846511e810#.71h40ys9y)\r\n* [Investments calculator](https://github.com/joshuaclayton/investments-elm) | [live example](http://joshuaclayton.me/investments-elm/)\r\n* [Landscape: architecture diagramming - Jessica Kerr](https://github.com/satellite-of-love/landscape)\r\n* elm-goban: [Play](http://mclauia.github.io/elm-goban/) | [Github](https://github.com/mclauia/elm-goban)\r\n* [capodicis-notes: Chrome extension that allows you to make notes on webpages & mark them as \"done\" and summarize pages - mcapodici](https://github.com/mcapodici/capodicis-notes)\r\n* [sketch-n-sketch - Ravi Chugh et al.](http://ravichugh.github.io/sketch-n-sketch/)\r\n* [take-home: open-source project with every server-side and client-side component written in Elm - NoRedInk](https://github.com/NoRedInk/take-home) | [Wiki (with good notes about Elm Native](https://github.com/NoRedInk/take-home/wiki)\r\n* [elm-flatris - Andrey Kuzmin](https://github.com/w0rm/elm-flatris)\r\n* [Highcharts.js integration in Elm - San Gillis](http://sgillis.github.io/posts/2016-03-25-highcharts-integration-in-elm.html)\r\n* [Celestia - John P. Mayer](https://github.com/johnpmayer/celestia)\r\n* [Chess - Grzegorz Balcerek](https://github.com/grzegorzbalcerek/chess-elm/tree/master/Chess)\r\n* Connect Four: [Jack Franklin](https://github.com/jackfranklin/elm-connect-four) | [Brad Urani](https://github.com/bradurani/connect-four-elm)\r\n* [Dreamwriter - Richard Feldman](https://github.com/rtfeldman/dreamwriter)\r\n* [Using Elm to Create a Fun Game in Just Five Days - Kolja Wilcke & Andrey Kuzmin](https://tech.zalando.com/blog/using-elm-to-create-a-fun-game-in-just-five-days/) & [Progress recap: Elm Street 404 - ](https://tech.zalando.com/blog/progress-recap-elm-street-404/)\r\n* [Elm Checkerboard Tutorial - Hassan Hayat](https://github.com/TheSeamau5/elm-checkerboardgrid-tutorial)\r\n* Elm-Hedley: [Thinking (And Choosing) Elm](http://www.gizra.com/content/thinking-choosing-elm/) | [App Overview](http://www.gizra.com/content/elm-hedley-overview/)\r\n* [Elmtris - Joseph Collard](https://github.com/jcollard/elmtris)\r\n* [Game of Life - Juan Lulkin](https://github.com/joaomilho/game-of-life-elm)\r\n* [Gravity](https://github.com/stephenbalaban/Gravity)\r\n* [Elm Workshop (LambdaConf 2015) - Richard Feldman](https://github.com/rtfeldman/lambdaconf-2015-elm-workshop)\r\n* [Minesweeper - a brief journey from JavaScript/React to Elm - Magnus Rundberget](http://rundis.github.io/blog/2015/elm_sweeper.html)\r\n* [Elm-missile-command](https://github.com/theburningmonk/elm-missile-command)\r\n* [Elm-snake (game) - Yan Cui](https://github.com/theburningmonk/elm-snake) & [Snake in Elm - Joel Chelliah](https://github.com/joelchelliah/snake_in_elm)\r\n* [Preselm - Grzegorz Balcerek](https://github.com/grzegorzbalcerek/Preselm)\r\n* [Rolling Random Romans - Joël Quenneville](https://robots.thoughtbot.com/rolling-random-romans)\r\n* [Vessel](https://github.com/slawrence/vessel)\r\n* [Zombie Dice Score Card in Elm - James Hughes](https://yobriefca.se/blog/2015/07/29/zombie-dice-score-card-in-elm/) | [source code](https://github.com/kouphax/zombie-dice-elm)\r\n* [Sydron: github events visualized - Jessica Kerr](https://github.com/jessitron/elm-sydron)\r\n\r\n### ELM - CODE STRUCTURE\r\n\r\n* [How I Structure Elm Apps - Kris Jenkins](http://blog.jenkster.com/2016/04/how-i-structure-elm-apps.html)\r\n\r\n### ELM - COURSES (FREE)\r\n\r\n* [Elm for Beginners - KnowThen.com (James Moore)](http://courses.knowthen.com/p/elm-for-beginners)\r\n* [Elm Koans - Robert J. Looby](https://github.com/robertjlooby/elm-koans)\r\n* [Elm - Ronn Ross & Murphy Randle (EggHead.io)](https://egghead.io/technologies/elm)\r\n* [Elm Meetup (DailyDrip.com)](https://www.dailydrip.com/topics/elm-remote-meetup)\r\n\r\n### ELM - COURSES (NON-FREE)\r\n\r\n* (Excellent! I highly recommend!): Mike Clark - Pragmatic Studio: [Elm: Building Reactive Web Apps](https://pragmaticstudio.com/elm) & [Elm: Signals, Mailboxes & Ports](https://pragmaticstudio.com/elm-signals)\r\n* [DailyDrip.com - Elm](https://www.dailydrip.com/topics/elm)\r\n* [Functional Programming in Elm - John Kelly (CodeHS.com)](https://codehs.com/info/curriculum/elm)\r\n\r\n### ELM - CSS & UI\r\n\r\n* [Elm UI - opinionated UI library and application framework for the web in Elm, following the Elm Architecture](https://github.com/gdotdesign/elm-ui)\r\n\r\n### ELM - DATA STRUCTURES\r\n\r\n* [HTML-to-Elm: Interactively generates Elm code from your HTML](https://mbylstra.github.io/html-to-elm/)\r\n* [Data Structures in Elm - NoRedInk.com](http://tech.noredink.com/post/140646140878/data-structures-in-elm)\r\n* [Writing Friendly Elm Code - NoRedInk.com](http://tech.noredink.com/post/146963432518/writing-friendly-elm-code)\r\n* [Maybe Thinking - Josh Clayton](https://robots.thoughtbot.com/maybe-thinking)\r\n\r\n#### ELM - DATA STRUCTURES - JSON\r\n\r\n* [json-to-elm](https://github.com/eeue56/json-to-elm) & [JSON2Elm.com](http://noredink.github.io/json-to-elm/)\r\n* [json-to-elm - Noah Hall](https://github.com/eeue56/json-to-elm)\r\n* [JSON-to-Elm generator - NoRedInk.com](http://noredink.github.io/json-to-elm/)\r\n* [Decoding JSON Structures With Elm - Josh Clayton](https://robots.thoughtbot.com/decoding-json-structures-with-elm)\r\n* [Debugging JSON - Brian Hicks](https://www.brianthicks.com/post/2016/10/10/debugging-json)\r\n* [Composing Decoders Like LEGO - Brian Hicks](https://www.brianthicks.com/post/2016/10/17/composing-decoders-like-lego/)\r\n* [Decoding Large JSON Objects: A Summary - Brian Hicks](https://www.brianthicks.com/post/2016/08/22/decoding-large-json-objects-a-summary/)\r\n* [Json.Decode cheatsheet - Yang Wei](https://gist.github.com/yang-wei/0a1cea1194a244aa9be6)\r\n\r\n### ELM - EDITORS\r\n\r\n* [HTML to Elm (webpage for inputting HTML and outputting Elm)](http://mbylstra.github.io/html-to-elm/)\r\n* [lambdatoast/elm.vim](https://github.com/lambdatoast/elm.vim) & [ElmCast/elm-vim](https://github.com/ElmCast/elm-vim) for [vim](http://www.vim.org/docs.php)\r\n* [jcollard/elm-mode](https://github.com/jcollard/elm-mode) for [Emacs](https://www.gnu.org/software/emacs/tour/) (if you're into that kind of kinky stuff)\r\n* [elm-format formats Elm source code according to a standard set of rules based on the official Elm Style Guide](https://github.com/avh4/elm-format)\r\n\r\n#### ELM - EDITORS - LIGHTTABLE\r\n\r\n* [elm-light - Elm language plugin for Light Table- Magnus Rundberget](https://github.com/rundis/elm-light) & [docs](https://libraries.io/github/rundis/elm-light)\r\n* [elm-light demo](http://rundis.github.io/blog/2015/elm_light.html)\r\n* Elm Light Guide: [download PDF](https://www.gitbook.com/book/rundis/elm-light-guide/details) | [online](https://rundis.gitbooks.io/elm-light-guide/content/)\r\n* [LightTable](http://lighttable.com/) & [demo video](http://rundis.github.io/blog/2015/elm_light.html)\r\n\r\n### ELM - ELM-NATIVE-UI\r\n\r\n* [Elm Native UI: Writing a React Native app in Elm - Ossi Hanhinen](http://ohanhi.github.io/elm-native-ui.html)\r\n* [elm-native-ui: Building mobile apps with Elm powered by React Native](https://github.com/elm-native-ui/elm-native-ui)\r\n\r\n### ELM - HELP\r\n\r\n* [elm-discuss Google group](https://groups.google.com/forum/#!forum/elm-discuss)\r\n* [Elm Slack](http://elmlang.herokuapp.com/) & [Freenode](http://webchat.freenode.net/?channels=elm)\r\n* [elm-dev Google group](https://groups.google.com/forum/#!forum/elm-dev)\r\n* [Reddit Elm](https://www.reddit.com/r/elm)\r\n\r\n### ELM - INTERACTING WITH JAVASCRIPT, JSON & HTML\r\n\r\n* [Example of how to integrate Elm with HTML and JS - Evan Czaplicki](https://github.com/evancz/elm-html-and-js)\r\n* [Interop(erability)](http://elm-lang.org/guide/interop) & [code example](https://gist.github.com/evancz/8521339)\r\n* [Decoding JSON With Dynamic Keys - Brian Hicks](https://www.brianthicks.com/post/2016/10/03/decoding-json-with-dynamic-keys/)\r\n* [json-server (Get a full fake REST API with zero coding in less than 30 seconds (useful for development)](https://github.com/typicode/json-server)\r\n\r\n### ELM - PACKAGES\r\n\r\n* [Trending packages on Github](https://github.com/trending/elm?since=daily)\r\n* [Elm search (by function name or approximate type signature)](http://klaftertief.github.io/elm-search/)\r\n* [Elm package repository](http://package.elm-lang.org/)\r\n* [elm-audio](https://github.com/jcollard/elm-audio)\r\n* [elm-core](https://github.com/elm-lang/core)\r\n* [elm-graphql](https://github.com/jahewson/elm-graphql)\r\n* [elm-html](https://github.com/evancz/elm-html)\r\n* [elm-http](https://github.com/evancz/elm-http)\r\n* [elm-make](https://github.com/elm-lang/elm-make)\r\n* [elm-new: Generates a project scaffolding for rapid prototyping of Elm apps - Simone Vittori](https://github.com/simonewebdesign/elm-new)\r\n* [elm-lang/navigation - SPA routing / managing browser navigation](https://github.com/elm-lang/navigation)\r\n* [elm-plot](https://github.com/terezka/elm-plot)\r\n* [elm-router - Hassan Hayat](https://github.com/TheSeamau5/elm-router)\r\n* [elm-route-hash - Ryan Rempel](https://github.com/rgrempel/elm-route-hash)\r\n* [elm-tutorial-app - Sebastian Porto](https://github.com/sporto/elm-tutorial-app)\r\n* [elm-undo-redo - Hassan Hayat](https://github.com/TheSeamau5/elm-undo-redo)\r\n* [elm-web-api - Ryan Rempel](https://github.com/rgrempel/elm-web-api)\r\n* [generator-elmlang (for Yeoman) - Gizra](https://github.com/Gizra/generator-elmlang)\r\n* [react-elm-components: Write React components in Elm - Evan Czaplicki](https://github.com/evancz/react-elm-components)\r\n\r\n### ELM - PHOENIX & ELM\r\n\r\n* [Creating a Chatroom Using Phoenix, Elm, and Websockets - Jeremy Bellows](http://www.jeremybellows.com/blog/Creating-a-Chatroom-Using-Phoenix-Elm-And-Websockets)\r\n* [Connecting Elm with Phoenix using Channels - Simon Hampton](http://simonh1000.github.io/2016/05/elm-phoenix-channels/)\r\n\r\n### ELM - PODCASTS\r\n\r\n* [Elm Town Podcasts](https://elmtown.github.io/)\r\n* [Elm and Functional Programming with Richard Feldman - Changelog](https://overcast.fm/+I_roOY_I)\r\n* [Elm with Richard Feldman and Evan Czaplicki (Ruby Rogues)](https://devchat.tv/ruby-rogues/212-rr-elm-with-richard-feldman-and-evan-czaplicki)\r\n* [Elm with Evan Czaplicki and Richard Feldman (Javascript Jabber)](https://devchat.tv/js-jabber/175-jsj-elm-with-evan-czaplicki-and-richard-feldman)\r\n* [Elm with Evan Czaplicki (MostlyErlang)](http://mostlyerlang.com/2014/03/24/032-elm-with-evan-czaplicki/)\r\n\r\n### ELM - PORTS\r\n\r\n* [Ports in Elm - Daniel Bachler](http://danielbachler.de/2016/02/26/ports-in-elm.html)\r\n* [elm-colors: Phoenix + Elm + Webpack + Heroku Example App - Joshua Clayton](https://github.com/joshuaclayton/elm-colors) & [live code example](http://colors.joshuaclayton.me/)\r\n\r\n### ELM - SERVER-SIDE\r\n\r\n* [servelm](https://github.com/eeue56/servelm)\r\n\r\n### ELM - SIGNALS (REMOVED IN 0.17)\r\n\r\n* [Elm Flux: Visualization of Elm Signals - Yang Wei](https://yang-wei.github.io/elmflux/)\r\n* [A Step-to-step Guide to Elm Signals - Yang Wei](https://yang-wei.github.io/blog/2016/02/04/a-step-to-step-guide-to-elm-signal/)\r\n* [Signals in Elm - Daniel Bachler](http://danielbachler.de/2016/02/12/signals-in-elm.html)\r\n\r\n### ELM - SPA\r\n\r\n* [Building a Single-Page App with Elm - Dave Thomas](http://7sharpnine.com/2016/10/03/building-an-spa-with-elm/)\r\n\r\n### ELM - TASKS & EFFECTS\r\n\r\n* [Tasks and Effects in Elm - Daniel Bachler](http://danielbachler.de/2016/02/19/tasks-and-effects-in-elm.html)\r\n\r\n### ELM - VIDEOS\r\n\r\n* [Elm Conf 2016 videos](https://www.youtube.com/playlist?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd)\r\n    * [Making Impossible States Impossible - Richard Feldman](https://www.youtube.com/watch?v=IcgmSRJHu_8)\r\n    * [Beyond Hello World and Todo Lists - Ossi Hanhinen](https://www.youtube.com/watch?v=vpc80c5iC6k)\r\n    * [Code Is the Easy Part - Evan Czaplicki](https://www.youtube.com/watch?v=DSjbTC-hvqQ)\r\n    * [Rolling Random Romans - Joël Quenneville](https://www.youtube.com/watch?v=YxGWQdFo2Yc)\r\n    * [Building an Interactive Storytelling Framework in Elm - Jeff Schomay](https://www.youtube.com/watch?v=t8RSxzpw1Yw) & [API Design Session - Elm Narrative Engine with Jeff Schomay & Evan Czaplicki](https://www.youtube.com/watch?v=De1c85B4Zxs)\r\n    * [The Clockwork Gardener: Growing an Elm App With Templates - Jessica Kerr](https://www.youtube.com/watch?v=jJ4e6cIBgYM)\r\n    * [0-60 in 15 Minutes: Building a Real-time App with Elm and Horizon - Abadi Kurniawaan](https://www.youtube.com/watch?v=fTHHn7NhU3w)\r\n    * [Q&A Panel](https://www.youtube.com/watch?v=LCNs92YQjhw)\r\n* [Elm Meetup Videos (recorded/hosted by Josh Adams' DailyDrip.com)](https://www.dailydrip.com/topics/elm-remote-meetup)\r\n* [Exploring Elm Lang - Jack Franklin (JSCamp Romania 2016)](https://www.youtube.com/watch?v=0LTjVSXvKX4)\r\n* [Building a Graphical IDE in Elm - Claudia Doppioslash](https://www.youtube.com/watch?v=Cfeneg48POY)\r\n* [Adventures in Elm - Jessica Kerr (GOTO 2016)](https://www.youtube.com/watch?v=cgXhMc8M4X4)\r\n* [Intro to Elm - Claudia Doppioslash](https://www.youtube.com/watch?v=gJ9DSVnZKhk)\r\n* [Code Therapy - Danny O'Brien](https://www.youtube.com/playlist?list=PL7RY3c_PbOzGbrUb8w97LX085PSl0c8lU)\r\n* [Elm in Purescript - Ryan Rempel](https://www.youtube.com/watch?v=O_kWwaghZ9U)\r\n* [ElmLive (video tutorial series) - Aaron VonderHaar](https://www.youtube.com/playlist?list=PLDA4wlOlLJvWSYo3KiEa4q4ETkXpTaKlw): [Lights Out, Pt 1](https://www.youtube.com/watch?v=R6vuO547DC8) | [Lights Out, Pt 2](https://www.youtube.com/watch?v=OAgF2uUnKcg) | [Lights Out (Code)](https://gist.github.com/avh4/dda1523ed8fc7bc3790b20150c1f0f22) | [Drag'N'Drop, Pt 1](https://www.youtube.com/watch?v=Rzz78cR0hPw) | [Drag'N'Drop, Pt 2](https://www.youtube.com/watch?v=DkOS0QqDUIY) | [Drag'N'Drop, Pt 3](https://www.youtube.com/watch?v=HgCMdjoSWnQ) | [Drag'N'Drop, Pt 4](https://www.youtube.com/watch?v=eFJiwPW3dwI) | [#BlackLivesMatter, Pt 1](https://www.youtube.com/watch?v=t9pOVSmNeR0) | [#BlackLivesMatter, Pt 2](https://www.youtube.com/watch?v=DgeIOk7JoqE) | [AWS Cognito - Pt 1](https://www.youtube.com/watch?v=seLD59KsHJk) | [AWS Cognito - Pt 2](https://www.youtube.com/watch?v=X6e8KpPWHg0) | [Mandelbrot Magic, Pt 1](https://www.youtube.com/watch?v=kObuBHIeYBE) | [Mandelbrot Magic, Pt 2](https://www.youtube.com/watch?v=8gQBiMxIJEQ)\r\n* [ElmLive: Building an RPG Framework - Greg Ziegan](https://www.twitch.tv/gregziegan/videos/all) & [code](https://github.com/thebritican/rpg-framework)\r\n* [Elm Solitaire game #1 - Martin Janiczek](https://www.youtube.com/watch?v=dDZb46sN3yM)\r\n* [Elm: Frontend with Guarantees - Amitai Burstein](https://www.youtube.com/watch?v=FgaoOgJ5CAU)\r\n* Writing A Full Site in Phoenix and Elm - Brandon Richey: [Part 1](https://medium.com/@diamondgfx/writing-a-full-site-in-phoenix-and-elm-a100804c9499#.3tzhbd8nt) | [Part 2: Making HTTP Calls From Elm](https://medium.com/@diamondgfx/writing-a-full-site-in-phoenix-and-elm-a4622c5130f5#.rezd1mhxi) | [Part 3: Navigation From the Ground Up](https://medium.com/@diamondgfx/writing-a-full-site-in-phoenix-and-elm-8f50ba4382a3#.ffhrag5da)\r\n* [Climbing into Elm - Murphy Randle (Utah Javascript Meetup 2014)](https://www.youtube.com/watch?v=-JlC2Q89yg4)\r\n* [How to Think Elm - Amitai Burstein (Gizra)](http://www.gizra.com/content/how-think-elm/)\r\n* [Elm Remote Meetup #2 - Luke Westby & Josh Adams](https://www.youtube.com/watch?v=qmQo9jtXMSo) | [slides](https://slides.com/lukewestby/elm-stuff) | [code](https://github.com/lukewestby/elm-remote-meetup-july-2016)\r\n* [What to do with your new Elm install - Claudia Doppioslash](http://www.lambdacat.com/what-to-do-with-your-new-elm-install/)\r\n* [My adventure with Elm - Yan Cui (New Developers Conference 2015)](https://www.youtube.com/watch?v=cBVXyxt-9_Q)\r\n* [Elm on the Functional Frontier - Richard Feldman](https://presentate.com/rtfeldman/talks/the-functional-frontier-elm)\r\n* [Elm Is Coming - Kris Jenkins](https://www.youtube.com/watch?v=xN1-mtw1Fns)\r\n* [Composing Styles in Elm (Beginners) - Devan Stormont](https://voyageintech.wordpress.com/2015/10/25/composing-styles-in-elm/)\r\n* Building a Game in Elm - Brad Urani: [1a](https://www.livecoding.tv/video/building-a-game-in-elm-pt-1a/) | [1b](https://www.livecoding.tv/video/building-a-game-in-elm-pt-1b/) | [2](https://www.livecoding.tv/video/building-a-game-in-elm-2/) | [3](https://www.livecoding.tv/video/building-a-game-in-elm-3/)\r\n* Developing Games in Elm - Laurence Roberts: [Functional Programming](http://gelatindesign.co.uk/developing-games-in-elm/functional-programming/) | [Signals](http://gelatindesign.co.uk/developing-games-in-elm/signals/)\r\n* [Learning FP the hard way: Experiences on the Elm language - Ossi Hanhinen](https://gist.github.com/ohanhi/0d3d83cf3f0d7bbea9db)\r\n* [Elm: Functional, Reactive, for the Web - Grzegorz Balcerek (LambdaDays 2015)](https://www.youtube.com/watch?v=Ftl_qajbMYE)\r\n* [Elm Tutorial (5 talks) - Goran Milovanovic](https://www.youtube.com/playlist?list=PLtdCJGSpculbDT_p4ED9oLTJQrzoM1QEL)\r\n* [N Languages in N Months: Functional Fall: Elm - John Mayer (Hakka Labs)](https://www.youtube.com/watch?v=e_pw9YMzCMM)\r\n* [Functional programming for the Web: Elm (Kris Jenkins), Haskell (Christian Takle), Clojurescript (Sonny To)](https://www.youtube.com/watch?v=de-bbvzsr6U)\r\n* Road to Elm - LamdaCat: [Index](http://www.lambdacat.com/road-to-elm-index/) | [Currying, The Unknown](http://www.lambdacat.com/road-to-elm-currying-the-unknown/) | [Lists, Arrays, Sets, and Dictionaries](https://dennisreimann.de/articles/elm-data-structures-list-array-set-dict.html) | [Records & Tuples](https://dennisreimann.de/articles/elm-data-structures-record-tuple.html) | [Destructuring](http://www.lambdacat.com/road-to-elm-destructuring/)\r\n* [Richard Feldman - Twitch.TV](https://www.twitch.tv/rtfeldman)\r\n* [Functional reactive programming in Elm - Sergei Winitzki](https://www.youtube.com/watch?v=DiZ1CfLQvIU) & [slides (PDF)](https://github.com/winitzki/talks/blob/master/elm-talk/elm_talk.pdf)\r\n* [Elm - Evan Czaplicki](https://www.youtube.com/watch?v=ZTliDiWDV0k)\r\n* Phoenix with Elm - Alan Gardner: [Video (ElixirConf 2015)](http://confreaks.tv/videos/elixirconf2015-phoenix-with-elm) | [Blog Pt 1](http://www.cultivatehq.com/posts/phoenix-elm-1/) | [Blog Pt 2](http://www.cultivatehq.com/posts/phoenix-elm-2/) | [Blog Pt 3](http://www.cultivatehq.com/posts/phoenix-elm-3/) | [Blog Pt 4](http://www.cultivatehq.com/posts/phoenix-elm-4/) | [Blog Pt 5](http://www.cultivatehq.com/posts/phoenix-elm-5/) | [Blog Pt 6](http://www.cultivatehq.com/posts/phoenix-elm-6/) | [Blog Pt 7](http://www.cultivatehq.com/posts/phoenix-elm-7/) | [Blog Pt 8](http://www.cultivatehq.com/posts/phoenix-elm-8/) | [Blog Pt 9](http://www.cultivatehq.com/posts/phoenix-elm-9/) | [Blog Pt 10](http://www.cultivatehq.com/posts/phoenix-elm-10/) | [Blog Pt 11](http://www.cultivatehq.com/posts/phoenix-elm-11/) | [Blog Pt 12](http://www.cultivatehq.com/posts/phoenix-elm-12/) | [Blog Pt 13](http://www.cultivatehq.com/posts/phoenix-elm-13/)\r\n* [Effects As Data - Richard Feldman (Reactive 2015)](https://www.youtube.com/watch?v=6EdXaWfoslc)\r\n* [Introduction to Functional Reactive Programming with Elm - Isaac Shapira](https://www.youtube.com/watch?v=bx3mOTGRvs4)\r\n* [Elm architecture tutorial - Evan Czaplicki](https://github.com/evancz/elm-architecture-tutorial)\r\n* Geocoding With Elm and ArcGIS - Kris Jenkins: [Part 1](http://blog.jenkster.com/2015/09/geocoding-with-elm-and-arcgis-part-1.html) | [Part 2](http://blog.jenkster.com/2015/09/geocoding-with-elm-and-arcgis-part-2.html) | [Part 3](http://blog.jenkster.com/2015/10/geocoding-with-elm-and-arcgis-part-3.html)\r\n* Brandon Richey: [Getting Started with Elm](https://medium.com/@diamondgfx/getting-started-with-elm-11d7a53b1a78#.fxuq1zojk) | [Understanding Elm: Signals, Mailboxes, Addresses, and Actions](https://medium.com/@diamondgfx/understanding-elm-signals-mailboxes-addresses-and-actions-7932781396ef#.soi3267gk) | [Applying Signals and Actions to our App](https://medium.com/@diamondgfx/e1c649bd0d96#.7542im727) | [Setting Up Elm With Phoenix](https://medium.com/@diamondgfx/setting-up-elm-with-phoenix-be3a9f55bac2#.pzwf70emn)\r\n* Dennis Reimann: [Elm Modules and Imports](https://dennisreimann.de/articles/elm-modules-import.html) | [Functions](https://dennisreimann.de/articles/elm-functions.html)\r\n* [elm-d3: Front-end Development Without Frameworks (C◦mp◦se :: Conference 2015)](https://www.youtube.com/watch?v=pTlOLO7Qhls)\r\n* [Building Web Apps in Elm - Jivago Alves (PolyConf 2015)](https://www.youtube.com/watch?v=fq4l6C935Bg)\r\n* How to Create Tetris in Elm - Captain Coder: [All videos](https://www.youtube.com/playlist?list=PL7C8fMD-89DKhlerIE3BrYNd0PlhA6Zch) | [1: Basics](https://www.youtube.com/watch?v=GMSXYnMH1gg) | [2: Block](https://www.youtube.com/watch?v=KkZji-xY3kw) | [3: Tetromino](https://www.youtube.com/watch?v=iJL1YKCicMc) | [4: Rotate](https://www.youtube.com/watch?v=OBrFYiRGz1Q) | [5: Shift](https://www.youtube.com/watch?v=xk2j9D-wd-A) | [6: Input & Signals](https://www.youtube.com/watch?v=JMkPqS2mcsw) | [7: State & foldp](https://www.youtube.com/watch?v=KLMY79rtk0M) | [8: Tick and merge](https://www.youtube.com/watch?v=jiJQvo-O4RQ) | [9: More Ticking](https://www.youtube.com/watch?v=gXKx7A4ct1Y) | [10: Board](https://www.youtube.com/watch?v=d6QqhgGYgNE&spfreload=1) | [11: Clearing Lines](https://www.youtube.com/watch?v=sbL7X8jnnhc) | [12: Board Rules](https://www.youtube.com/watch?v=C5p5ESGWkJs) | [13: Kick It!](https://www.youtube.com/watch?v=oKbFIpgT5O8) | [14: Random Values](https://www.youtube.com/watch?v=WINCSMZl8E0) | [15: Stateful Bag](https://www.youtube.com/watch?v=929zOW95Y0k)\r\n* [Intro to the Elm Programming Language - Ryan Levick (Strange Group Meetup 2014)](https://www.youtube.com/watch?v=iseogSMdQYI)\r\n* [Functional Reactive UIs with Elm - Shashi Gowda (Agile India 2014)](https://www.youtube.com/watch?v=EPIczPVnx3s) & [Slides](https://docs.google.com/presentation/d/16Xfqd-xU8y2JEN0TIcacDoYnp0b5-W7ESDB5v1SmcXs/edit) & [FunctionalConf 2014](https://confengine.com/functional-conf-2014/proposal/329/functional-reactive-uis-with-elm)\r\n* [Elm Style Guide - NoRedInk](https://github.com/NoRedInk/elm-rails/wiki/NoRedInk's-Elm-Style-Guide)\r\n* [Functional Reactive Programming in Elm - Evan Czaplicki (Philly ETE 2014)](https://www.youtube.com/watch?v=F-nTU3Wy26I)\r\n* Martin Janiczek: [Programming Projector in Elm - Routing, history 1/2](https://www.youtube.com/watch?v=D9hW8G31Dy0)\r\n\r\n## ERLANG\r\n\r\n* [Learn You Some Erlang for Great Good! - Fred Hebert](http://learnyousomeerlang.com/)\r\n* [Erlang in Anger - Fred Hebert](http://www.erlang-in-anger.com/)\r\n* [Spawned Shelter: Collection of articles, videos & books for learning Erlang](http://spawnedshelter.com/)\r\n* [Awesome Erlang - Curated list of libraries, resources & more - David Robakowski](https://github.com/drobakowski/awesome-erlang)\r\n* [Erlang Koans - Patrick Gombert](https://github.com/patrickgombert/erlang-koans)\r\n* [Solving the Stable Marriage problem with Erlang](https://www.airpair.com/erlang/posts/solving-the-stable-marriage-problem-with-erlang)\r\n* [Thinking in a Highly Concurrent, Mostly-functional Language - Francesco Cesarini (ElixirConf 2014)](https://www.youtube.com/watch?v=d5G3P2iosmA)\r\n* [Advanced-Erlang.com](http://advanced-erlang.com/videos/)\r\n* [ErlangCentral Wiki](http://erlangcentral.org/wiki/index.php/)\r\n* [MostlyErlang.com](http://mostlyerlang.com/)\r\n\r\n### ERLANG - BEAM\r\n\r\n* [BEAM Wisdoms: collection of easy to read (ELI5) articles as well as in-depth knowledge such as VM internals, memory layout, opcodes](http://beam-wisdoms.clau.se/en/latest/)\r\n\r\n### ERLANG - DOCUMENTATION\r\n\r\n* [User's Guide](http://www.erlang.org/doc/apps/stdlib/users_guide.html) | [Reference Manual](http://www.erlang.org/doc/apps/stdlib/index.html) | [OTP Modules](http://erlang.org/doc/man_index.html)\r\n* [An Erlang Course](http://www.erlang.org/course)\r\n* [Erlang.org docs](http://erlang.org/doc/) | [erlang-questions (Google group)](https://groups.google.com/forum/#!forum/erlang-questions)\r\n* [ErlDocs.com](http://erldocs.com/)\r\n* [Getting Started with Erlang User's Guide - Ericsson](http://erlang.org/doc/getting_started/users_guide.html)\r\n* [System Principles User's Guide - Ericsson](http://erlang.org/doc/system_principles/system_principles.html)\r\n* [Erlang Reference Manual User's Guide - Ericsson ](http://erlang.org/doc/reference_manual/users_guide.html)\r\n* [Erlang/OTP System Documentation - Ericsson (PDF)](http://erlang.org/doc/pdf/otp-system-documentation.pdf)\r\n* [Programming Rules and Conventions](http://www.erlang.se/doc/programming_rules.shtml)\r\n* [Time in Elixir](http://learnyousomeerlang.com/time)\r\n\r\n### ERLANG - EXAMPLES\r\n\r\n* [Vegur: HTTP Proxy Library - Heroku](https://github.com/heroku/vegur) & [Heroku Proxying becomes Free Software](https://engineering.heroku.com/blogs/2015-10-21-vegur-free-software/)\r\n\r\n### ERLANG - HISTORY\r\n\r\n* [Erlang: The Movie](https://www.youtube.com/watch?t=113&v=xrIjfIjssLE)\r\n* [Erlang: The Movie II: The Sequel](https://www.youtube.com/watch?v=rRbY3TMUcgQ)\r\n\r\n### ERLANG - OTP\r\n\r\n* [Essential Erlang/OTP - Garrett Smith](https://www.youtube.com/watch?v=0ZGHzI9F5YE)\r\n* [OTP Has Done It - Nick DeMonner (ElixirConf 2015)](https://www.youtube.com/watch?v=yBReonQlfL4)\r\n* [Intro to OTP in Elixir - Jesse J. Anderson (Full Stack Talks 2016)](https://www.youtube.com/watch?v=CJT8wPnmjTM)\r\n* [OTP in Elixir: Part 1 - Christian Di Lorenzo (Triangle |> Elixir)](https://www.youtube.com/watch?v=_WgrfEaAM4Y)\r\n* [Erlang Design Principles](http://erlang.org/doc/design_principles/users_guide.html)\r\n\r\n### ERLANG - PERFORMANCE\r\n\r\n* [Comparison of Erlang Runtime System and Java Virtual Machine - Tõnis Pool](http://ds.cs.ut.ee/courses/course-files/To303nis%20Pool%20.pdf)\r\n* [Faults, Scaling, and Erlang concurrency - Joe Armstrong (Stanford University seminar 2014)](https://www.youtube.com/watch?v=YaUPdgtUYko)\r\n\r\n### ERLANG - VIDEOS\r\n\r\n* [Intro to Erlang - Philip Clarke](https://www.youtube.com/watch?v=1QQSTayocdA)\r\n* [Writing Quality Code in Erlang - Garrett Smith (2014)](https://www.youtube.com/watch?v=CQyt9Vlkbis)\r\n* [Erlang User Conf 2016](https://www.youtube.com/playlist?list=PLWbHc_FXPo2ijLaWEw-L2xtTVMQ5chWcp)\r\n* [Functional Programming with Erlang](https://www.youtube.com/playlist?list=PLlML6SMLMRgAooeL26mW502jCgWikqx_n)\r\n* Erlang Master Class (University of Kent): [Class 1: Functional Programming](https://www.youtube.com/watch?v=gKRyAb7d8lo&list=PLR812eVbehlwEArT3Bv3UfcM9wR3AEZb5) | [Class 2: Concurrent Programming](https://www.youtube.com/watch?v=nYgEny1goCY&list=PLR812eVbehlwq4qbqswOWH7NLKjodnTIn) | [Class 3: OTP Behaviours & Releases](https://www.youtube.com/watch?v=9HVvzSsdW9k&list=PLR812eVbehlx6vgWGf2FLHjkksAEDmFjc)\r\n* [Erlang videos (InfoQ)](http://www.infoq.com/erlang/presentations/)\r\n* [ErlangSolutions Youtube videos](https://www.youtube.com/user/ErlangSolutions)\r\n* [Erlang videos (Vimeo)](https://vimeo.com/search?q=Erlang)\r\n* [Concurrency + Distribution = Scalability + Availability, a Journey architecting Erlang Systems - Francesco Cesarini (NDC London 2016)](https://vimeo.com/162206436)\r\n* [Introduction to Erlang - Steven Proctor (LambdaConf 2015)](https://www.youtube.com/watch?v=0YpCBRJJtPg)\r\n* [Faults, Scaling, and Erlang Concurrency - Joe Armstrong (Stanford Seminar)](https://www.youtube.com/watch?v=YaUPdgtUYko)\r\n* [That's \"Billion\" With a \"B\": Scaling to the Next Level at WhatsApp - Rick Reed (Erlang Factory SF 2014)](https://www.youtube.com/watch?v=c12cYAUTXXs)\r\n* [Scaling Distributed Erlang - Zandra Norman (ElixirConfEU 2016)](https://www.youtube.com/watch?v=usEs3GPnZDg) | [slides](http://s3.amazonaws.com/erlang-conferences-production/media/files/000/000/074/original/Zandra_Norman_ScalingDistributedErlang.pdf?1462891793)\r\n* [Rackspace interviews Erlang creators Joe Armstrong and Robert Virding](https://www.youtube.com/watch?v=u41GEwIq2mE)\r\n* [Erlang Master Classes](https://www.youtube.com/watch?v=gKRyAb7d8lo&list=PLR812eVbehlwEArT3Bv3UfcM9wR3AEZb5&index=1)\r\n* [Erlang Factory SF 2015 videos](https://www.youtube.com/playlist?list=PLWbHc_FXPo2h0sJW6X2RZDtT1ndw6KKpQ)\r\n* [An Introduction to Erlang (for Python programmers) - Paul Barry](https://www.youtube.com/watch?v=yRJZxV8uPhg)\r\n* [Intro to Distributed Erlang - Bryan Hunter](https://vimeo.com/39257971)\r\n\r\n## EMERGING TECHNOLOGIES\r\n\r\n* [ThoughtWorks Technology Radar](http://www.thoughtworks.com/radar/#/)\r\n\r\n## EVENT SOURCING/STREAMS/SIGNALS/REACTIVE PROGRAMMING\r\n\r\n* [Events Are Not Just for Notifications - Greg Young (QCon 2011)](https://www.infoq.com/presentations/Events-Are-Not-Just-for-Notifications)\r\n* [Building microservices with event sourcing and CQRS - Michael Ploed](https://www.youtube.com/watch?v=A0goyZ9F4bg)\r\n* [Event Store and Web Applications - Greg Young](https://www.infoq.com/presentations/event-store-web-apps)\r\n* [Event Sourcing and Stream Processing at Scale - Martin Kleppmann](https://www.youtube.com/watch?v=avi-TZI9t2I)\r\n* [CQRS/DDD by Greg Young (Professional.NET 2011)](https://www.youtube.com/watch?v=KXqrBySgX-s)\r\n* [RXMarbles.com - Interactive diagrams of Rx Observables](http://rxmarbles.com/)\r\n* [Stream processing, Event sourcing, Reactive, CEP… and making sense of it all - Martin Kleppmann](http://www.confluent.io/blog/making-sense-of-stream-processing/)\r\n* [Event Sourcing - Martin Fowler](http://martinfowler.com/eaaDev/EventSourcing.html)\r\n* [Event Sourcing - Bryan Reinero (GoRuCo 2015)](http://confreaks.tv/videos/goruco2015-event-sourcing)\r\n* [An Event-driven and Reactive Future - Jonathan Worthington (FooCafe 2014)](https://www.youtube.com/watch?v=_VdIQTtRkb8)\r\n* [How To Be More Productive (With Streams) - Graham Hutton (C9 Lectures)](https://channel9.msdn.com/Shows/Going+Deep/C9-Lectures-Graham-Hutton-How-To-Be-More-Productive) | [PDF](http://www.cs.nott.ac.uk/~gmh/contractive.pdf) | [PPT](http://www.cs.nott.ac.uk/~gmh/contractive.ppt)\r\n* [Polyglot Data - Greg Young (GOTO Conference 2014)](https://www.youtube.com/watch?v=hv2dKtPq0ME)\r\n* [CQRS and Event Sourcing - Greg Young (Code on the Beach 2014)](https://www.youtube.com/watch?v=JHGkaShoyNs)\r\n* [Querying Event Streams - Greg Young (React 2014)](https://www.youtube.com/watch?v=DWhQggR13u8)\r\n* [CQRS Class - Greg Young](https://www.youtube.com/watch?v=whCk1Q87_ZI)\r\n* [Building and deploying microservices with event sourcing, CQRS and Docker - Chris Richardson](https://www.youtube.com/watch?v=I4A5ntHeoxU)\r\n* [Immutability Changes Everything - Pat Helland](http://www.cidrdb.org/cidr2015/Papers/CIDR15_Paper16.pdf)\r\n* [CQRS with Elixir and Phoenix - Jean-François Cloutier](http://jfcloutier.github.io/jekyll/update/2015/11/04/cqrs_elixir_phoenix.html)\r\n* Konrad Garus: [Intro to Event Sourcing and Command-Query Responsibility Segregation](http://squirrel.pl/blog/2015/08/31/introduction-to-event-sourcing-and-command-query-responsibility-segregation/) | [Achieving Consistency in CQRS with Linear Event Store](http://squirrel.pl/blog/2015/09/14/achieving-consistency-in-cqrs-with-linear-event-store/) | [Writing an Event-Sourced CQRS Read Model](http://squirrel.pl/blog/2015/09/22/writing-an-event-sourced-cqrs-read-model/) | [Persistence in CQRS Read Models](http://squirrel.pl/blog/2015/09/28/persistence-in-cqrs-read-models/)\r\n\r\n## EXERCISE\r\n\r\n* [50 Bodyweight Exercises You Can Do Anywhere - Laura Schwecherl](http://greatist.com/fitness/50-bodyweight-exercises-you-can-do-anywhere)\r\n* [10-minute home toning workout - NHS.uk](http://www.nhs.uk/Livewell/fitness/Pages/home-toning-workout.aspx)\r\n* [Slide show: Exercises to improve your core strength - Mayo Clinic](http://www.mayoclinic.org/healthy-lifestyle/fitness/multimedia/core-strength/sls-20076575)\r\n* [Top 25 At-Home Exercises - AceFitness.org](http://www.acefitness.org/acefit/fitness-programs-article/2863/Top-25-At-Home-Exercises/)\r\n\r\n## FINANCE\r\n\r\n* [Intro to Computational Finance and Financial Econometrics - Eric Zivot (University of Washington)](https://www.coursera.org/course/compfinance)\r\n* [Topics in Mathematics With Applications in Finance (MIT)](http://ocw.mit.edu/courses/mathematics/18-s096-topics-in-mathematics-with-applications-in-finance-fall-2013/video-lectures/)\r\n\r\n## FONTS & TYPOGRAPHY\r\n\r\n* [Awesome Font and Typography Resources for Web Designers - Steven Snell](http://www.vandelaydesign.com/font-resources/)\r\n\r\n## FUNCTIONAL PROGRAMMING\r\n\r\n* [An introduction to functional programming - Mary Rose Cook](https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming)\r\n* [What Is Functional Programming? - Kris Jenkins](https://www.youtube.com/watch?v=xN1-mtw1Fns)\r\n* [How to Get Started With Functional Programming - Julia Gao (StrangeLoop 2016)](https://www.youtube.com/watch?v=fbrG3hvWA3E)\r\n* [What does it mean when code is “easy to reason about”? - Preethi Kasireddy](https://medium.freecodecamp.com/what-does-it-mean-when-code-is-easy-to-reason-about-4e6f63eb386f#.f900iegve)\r\n* [Why Programmers Need Limits - Charles Scalfani](https://medium.com/@cscalfani/why-programmers-need-limits-3d96e1a0a6db#.im759kdjs)\r\n* So You Want to be a Functional Programmer - Charles Scalfani: [Part 1](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536#.bksmmhgtj) | [Part 2](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a) | [Part 3](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a) | [Part 4](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49) | [Part 5](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a) | [Part 6](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-6-db502830403)\r\n* [Awesome Functional Programming [Links]- Denis Stoyanov](https://github.com/xgrommx/awesome-functional-programming)\r\n* [Functional Programming and Functional Thinking - Tony Morris](https://channel9.msdn.com/Blogs/Charles/YOW-2011-Tony-Morris-Functional-Programming-and-Functional-Thinking?ocid=relatedentry)\r\n* [Point-Free or Die - Tacit Programming in Haskell and Beyond - Amar Shah](https://www.youtube.com/watch?v=seVSlKazsNk)\r\n* [Selfish Purity: How Functional Programming Makes Every-Day Jobs Easier - Daniel Spiewak (Jfokus 2015)](https://www.youtube.com/watch?v=WupzbiMZrl8)\r\n* [What is functional programming? - Kris Jenkins](http://blog.jenkster.com/2015/12/what-is-functional-programming.html)\r\n* [Why Bother With FP? - Tomek Borek (Lambda Days 2015)](https://www.youtube.com/watch?v=_bYkRXcf9sA)\r\n* [Currying vs Partial Application - Dave Atchley](http://www.datchley.name/currying-vs-partial-application/)\r\n* [An Invitation to Functional Programming - Rúnar Bjarnason (Lambda Days 2015)](https://www.youtube.com/watch?v=aa7jh1J4xNs)\r\n* [Functional Programming from First Principles - Erik Meijer (goto; conference)](https://www.youtube.com/watch?v=a-RAltgH8tw)\r\n* [Why I Like Functional Programming - Adelbert Chang (LambdaConf 2015)](https://www.youtube.com/watch?v=tsHQEB_ftxc)\r\n* [Modeling your domain - Norbert Wojtowicz (Lambda Days 2016)](https://www.youtube.com/watch?v=UrGJHfB21Ok)\r\n* [Functional programming design patterns - Scott Wlaschin (New Developers Conference London 2014](https://www.youtube.com/watch?v=E8I19uA-wGY)\r\n* [Changing the Unchangeable: The Hows and Whys of Immutable Data Structures - Brad Urani (RubyConf 2015)](https://www.youtube.com/watch?v=gTClDj9Zl1g)\r\n* [Carefully Composing Logic: Functional JavaScript - Brad Urani (JS.la 2015)](http://fractalbanana.com/blog/2015/09/16/carefully-composing-logic-functional-javascript-video/)\r\n* Professor Frisby's Mostly Adequate Guide to Functional Programming: [Webpage](https://www.gitbook.com/download/pdf/book/drboolean/mostly-adequate-guide) | [Online](http://drboolean.gitbooks.io/mostly-adequate-guide/content/ch1.html) | [PDF](https://www.gitbook.com/download/pdf/book/drboolean/mostly-adequate-guide) | [ePUB](https://www.gitbook.com/download/epub/book/drboolean/mostly-adequate-guide) | [MOBI](https://www.gitbook.com/download/mobi/book/drboolean/mostly-adequate-guide) | [Videos](https://www.youtube.com/playlist?list=PLK_hdtAJ4KqX0JOs_KMAmUNTNMRYhWEaC)\r\n* [A purely functional approach to building large applications - Noel Markham (Lambda Days 2015)](https://www.youtube.com/watch?v=V1d3OYYez7s)\r\n* [Functional programming patterns for the non-mathematician - Brian Lonsdorf (FluentConf 2014)](https://www.youtube.com/watch?v=AvgwKjTPMmM)\r\n* [A Million Ways to Fold in JS - Brian Lonsdorf (Forward Summit 2015)](http://forwardjs.com/university/a-million-ways-to-fold-in-js)\r\n* [An Introduction to Functional Programming - Andrew Smith & Noah Sluss (Code School)](https://www.youtube.com/watch?v=FueU3sehY_://www.youtube.com/watch?v=FueU3sehY_4)\r\n* [Functional Programming: The Failure of State - Robert C. Martin (NDC 2014)](https://www.youtube.com/watch?v=7Zlp9rKHGD4)\r\n* [Don't fear the monad - Brian Beckman](https://www.youtube.com/watch?v=ZhuHCtR3xq8)\r\n* [Improving your Web App with Functional Object-Oriented Design - Brad Urani](https://medium.com/@bradurani/improving-your-web-app-with-functional-object-oriented-design-5218f9732b74)\r\n* [Things That Matter - Bruce Tate (Lambda Days 2016)](https://www.youtube.com/watch?v=YjoVc5KFjaQ)\r\n* Lambda Days: [2016](ihttps://www.youtube.com/watch?v=1aEEGyJxz3A&list=PLWbHc_FXPo2izLmnqYbI5DZ4ArUe3vp1d) | [2015](https://www.youtube.com/results?search_query=lambda+days+2015)\r\n* (Updated) Functional Principles for OO Devs (Ordina 2015): [Part 1](https://www.youtube.com/watch?v=cpyrTkzXeL8) & [Part 2: Property-Based Testing for Better Code](https://www.youtube.com/watch?v=z4WyLZIdi08)\r\n* [Functional Principles for OO Development - Jessica Kerr (GOTO Conference 2014)](https://www.youtube.com/watch?v=GpXsQ-NIKXY) & [(Ruby MidWest 2013)](http://confreaks.tv/videos/2382-rmw2013-functional-principles-for-oo-development)\r\n* [Functional Programming and Ruby - Pat Shaughnessy (GoRuCo 2013)](http://confreaks.tv/videos/2557-goruco2013-functional-programming-and-ruby)\r\n* [Immutable Ruby - Michael Fairley (MountainWest RubyConf 2013)](http://confreaks.tv/videos/2337-mwrc2013-immutable-ruby)\r\n* The Database as a Value - Rich Hickey: [GOTO Chicago talk](https://channel9.msdn.com/posts/Rich-Hickey-The-Database-as-a-Value) | [Out of the Tar Pit - Ben Moseley & Peter Marks](http://shaffner.us/cs/papers/tarpit.pdf) | [QConn NY talk](http://www.infoq.com/presentations/Datomic-Database-Value)\r\n* Why Functional Programming Matters - John Hughes: [Video (Erlang Factory 2016)](https://www.infoq.com/presentations/functional-history-highlights) | [PDF](http://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf) | [Postscript](http://www.cse.chalmers.se/~rjmh/Papers/whyfp.ps) | [Chinese](http://www.nirvanastudio.org/functional-programming/why-functional-programming-matters.html)\r\n* [Functional Programming and Ruby - Pat Shaughnessy (BostonRB.org)](http://bostonrb.org/presentations/functional-programming-and-ruby)\r\n* [Y Not? - Adventures in Functional Programming - Jim Weirich (ScotlandJS 2012)](https://vimeo.com/45140590) [RubyConf 2012](http://confreaks.tv/videos/1287-rubyconf2012-y-not-adventures-in-functional-programming)\r\n* [Functional Thinking - Neal Ford](http://www.youtube.com/watch?v=JeK979aqqqc) & [OSCON 2013](https://www.youtube.com/watch?v=7aYS9PcAITQ)\r\n* [Simple and Elegant Rails Code with Functional Style - Attila Domokos (RailsConf 2013)](http://confreaks.tv/videos/2431-railsconf2013-simple-and-elegant-rails-code-with-functional-style)\r\n* Brian Lonsdorf: [Functors](http://forwardjs.com/university/functors) | [F-Algebras, Pt 1](http://forwardjs.com/university/f-algebras-part-1) | [F-Algebras, Pt 2](http://forwardjs.com/university/f-algebras-part-2) | [F-Algebras, Pt 3](http://forwardjs.com/university/f-algebras-part-3)\r\n* [Truth About Types - Bartosz Milewski (Lambda Days 2016)](https://www.youtube.com/watch?v=dgrucfgv2Tw)\r\n* [Propositions as Types - Philip Wadler (Lambda Days 2016)](https://www.youtube.com/watch?v=aeRVdYN6fE8)\r\n* [C9 functional programming lectures - Dr. Ralf Lämmel](https://channel9.msdn.com/Tags/ralf-laemmel)\r\n* [Functional Programming From First Principles - Erik Meijer (GOTO Chicago 2012)](https://channel9.msdn.com/posts/Erik-Meijer-Functional-Programming-From-First-Principles)\r\n\r\n### FUNCTIONAL PROGRAMMING - BOOKS\r\n\r\n* [The Implementation of Functional Programming Languages - Simon Peyton Jones (1987)](http://research.microsoft.com/en-us/um/people/simonpj/papers/slpj-book-1987/)\r\n* [Implementing Lazy Functional Languages on Stock Hardware: The Spineless Tagless G-machine - Simon Peyton Jones (1992)](https://www.microsoft.com/en-us/research/publication/implementing-lazy-functional-languages-on-stock-hardware-the-spineless-tagless-g-machine/)\r\n\r\n### FUNCTIONAL PROGRAMMING - CONFERENCE VIDEOS\r\n\r\n* [LambdaConf 2016 (λC 2016)](https://www.youtube.com/channel/UCEtohQeDqMSebi2yvLMUItg/videos)\r\n* [All the FP Talks at NDC Oslo 2016](http://theburningmonk.com/2016/06/all-the-fp-talks-at-ndc-oslo-2016/)\r\n* [Curry On 2016](http://www.curry-on.org/2016/)\r\n* [LambdaConf 2015](https://www.youtube.com/playlist?list=PLE7tQUdRKcybh21_zOg8_y4f2oMKDHpUS)\r\n* Lambda Days (Erlang Solutions): [2016](https://www.youtube.com/playlist?list=PLWbHc_FXPo2izLmnqYbI5DZ4ArUe3vp1d) | [2015](https://www.youtube.com/results?search_query=lambda+days+2015)\r\n* [Compose Conference 2015](http://www.composeconference.org/2015/summary/)\r\n* [Functional Works](https://www.youtube.com/channel/UCE6NivlVPGUn3TMtDAeL2vQ)\r\n\r\n### FUNCTIONAL PROGRAMMING - DATA PIPELINES\r\n\r\n* [Data pipelines from zero to solid - Lars Albertsson (Jfokus 2016)](https://www.youtube.com/watch?v=IVEl0bsTbdg)\r\n* [Scalable real-time processing techniques - Lars Albertsson (SICS)](https://www.youtube.com/watch?v=ayUqumHNBWY)\r\n* [Data pipelines - Lars Albertsson (NightHacking)](https://www.youtube.com/watch?v=888ApSPzuxo)\r\n\r\n### FUNCTIONAL PROGRAMMING - EXAMPLES\r\n\r\n* [Dissecting the Rabbit: RabbitMQ Internal Architecture - Alvaro Videla (Lambda Days 2015)](https://www.youtube.com/watch?v=WPischLIe8Q)\r\n\r\n### FUNCTIONAL PROGRAMMING - FUNCTIONAL REACTIVE PROGRAMMING (FRP)\r\n\r\n* [Functional Reactive Programming - Riccardo Terrell (Lambda Days 2016)](https://www.youtube.com/watch?v=UJH8sAnpBL4)\r\n* [Controlling Time and Space: Understanding the Many Formulations of FRP - Evan Czaplicki (StrangeLoop 2014)](https://www.youtube.com/watch?v=Agu6jipKfYw)\r\n* [Observables Everywhere - Jeremy Foster (2016)](https://channel9.msdn.com/Blogs/seattlejs/2016-01-14-01)\r\n* [Incremental computations and the web (OCaml) - Yaron Minsky (Jane Street)](http://blog.functionalworks.com/building-web-applications-without-really-trying)\r\n\r\n### FUNCTIONAL PROGRAMMING - LAMBDA CALCULUS & CATEGORY THEORY\r\n\r\n* [Category Theory for the Working Hacker - Philip Wadler](https://www.infoq.com/presentations/category-theory-propositions-principle)\r\n* [The Lambda Calculus, General Term Rewriting and Food Nutrition - Brian Beckman and Erik Meijer](https://channel9.msdn.com/Series/Beckman-Meijer-Overdrive/Beckman-Meijer-Overdrive-The-Lambda-Calculus-and-Food-Nutrition)\r\n* [Category Theory: The essence of interface-based design - Erik Meijer (Foo Cafe 2015)](https://www.youtube.com/watch?v=JMP6gI5mLHc)\r\n* [Introduction to Lambda Calculus - Henk Barendregt & Erik Barendsen (2000)](http://www.cse.chalmers.se/research/group/logic/TypesSS05/Extra/geuvers.pdf)\r\n* [Lecture Notes on the Lambda Calculus - Peter Selinger](http://www.mscs.dal.ca/~selinger/papers/lambdanotes.pdf)\r\n* [Intro to Lambda Calculus - Cristian Giumale](http://andrei.clubcisco.ro/cursuri/2pp/01.Lambda_calculus.pdf)\r\n* [Category Theory: The essence of interface-based design - Erik Meijer (goto; conference 2012)](https://www.youtube.com/watch?v=JMP6gI5mLHc)\r\n* [Fun With the Lambda Calculus - Corey Haines (goto; conference 2015)](https://www.youtube.com/watch?v=QPqoFCHpLF4)\r\n* [Lambda Calculus - Jim Grandpre (Code Genius)](https://www.youtube.com/watch?v=peOk3W7KZ4o)\r\n* [Lambda Calculus - Dustin Mulcahey (Hakka Labs)](https://www.youtube.com/watch?v=E5DwIxGOu1E)\r\n\r\n### FUNCTIONAL PROGRAMMING - MONADS\r\n\r\n* [Functors, Applicatives, And Monads In Pictures - Aditya Y. Bhargava](http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html)\r\n* [A Fistful of Monads (Learn You a Haskell)](http://learnyouahaskell.com/a-fistful-of-monads)\r\n* [Monads, Haskell, and Elm: A Socratic Dialogue](https://medium.com/@dailydrip/monads-haskell-and-elm-a-socratic-dialogue-c0a1b4f6acb2#.has9mq6cj)\r\n* [Understand Monads with this One Weird Trick - Andy Bartholomew](https://realm.io/news/slug-andy-bartholomew-understand-monads-one-weird-trick/)\r\n* [All About Monads](https://wiki.haskell.org/All_About_Monads) | [PDF version](http://www.cs.rit.edu/~swm/cs561/All_About_Monads.pdf)\r\n* [The Monad Challenges - Doug Beardsley](http://mightybyte.github.io/monad-challenges/)\r\n* [Monads Asking the Right Question - Pawel Szulc (LambdaConf 2015)](https://www.youtube.com/watch?v=FvZ_QhcbTCc)\r\n* [Monadic Design Patterns for the Web - Greg Meredith](https://channel9.msdn.com/Series/C9-Lectures-Greg-Meredith-Monadic-Design-Patterns-for-the-Web)\r\n\r\n### FUNCTIONAL PROGRAMMING - PODCASTS\r\n\r\n* [FunctionalGeekery.com](https://www.functionalgeekery.com)\r\n\r\n### FUNCTIONAL PROGRAMMING - VIDEOS\r\n\r\n* [LDN Functionals (Functional Works)](https://www.youtube.com/channel/UCE6NivlVPGUn3TMtDAeL2vQ)\r\n\r\n## GIT\r\n\r\n* [Official documentation](http://git-scm.com/documentation)\r\n* [Git Reference](http://gitref.org/)\r\n* [Git from the inside out - Mary Rose Cook](http://maryrosecook.com/blog/post/git-from-the-inside-out)\r\n* [Pro Git](http://git-scm.com/book) [PDF](https://github.s3.amazonaws.com/media/progit.en.pdf) [mobi](https://github.s3.amazonaws.com/media/pro-git.en.mobi) [ePub](https://github.s3.amazonaws.com/media/progit.epub)\r\n* Atlassian: [Getting Git Right](https://www.atlassian.com/git/) | [Getting Started](https://www.atlassian.com/git/tutorials/what-is-version-control) | [Tutorials](https://www.atlassian.com/git/tutorials) | [Collaborating](https://www.atlassian.com/git/tutorials/syncing) | [Advanced Git](https://www.atlassian.com/git/tutorials/advanced-overview)\r\n* [Wrapping Your Head Around Git - Paolo Perrotta (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-keynote-wrapping-your-head-around-git)\r\n* [Git/Github open source training resources](http://training.github.com/kit/)\r\n* [Explain Git With D3 (interactive visual demos of Git commands)](http://www.wei-wang.com/ExplainGitWithD3/#)\r\n* [GitGuys.com](http://www.gitguys.com/topics/)\r\n* [Git talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=Git&commit=go)\r\n* [Git Immersion](http://gitimmersion.com/lab_01.html)\r\n* [Git Ready](http://gitready.com/)\r\n* [Classy Git - Scott Chacon (RubyConf 2010)](http://www.confreaks.tv/videos/471-rubyconf2010-classy-git)\r\n* [Git and GitHub Secrets - Zach Holman (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1229-aloharuby2012-git-and-github-secrets)\r\n* [Git interactive cheatsheet](http://www.ndpsoftware.com/git-cheatsheet.html)\r\n* [Git cheatsheet](http://cheat.errtheblog.com/s/git)\r\n* [Gitcasts.com](http://gitcasts.com/) [Gitcasts on Blip.tv](http://blip.tv/scott-chacon)\r\n* [Git tutorial](http://www.vogella.com/articles/Git/article.html)\r\n* [Git From the Bits Up - Tim Berglund](http://www.youtube.com/watch?v=MYP56QJpDr4&list=UUkQX1tChV7Z7l1LFF4L9j_g)\r\n* [Tig (Text-mode interface for Git)](http://jonas.nitro.dk/tig/)\r\n* [Hacker’s Guide to Git - Joseph Wynn](http://wildlyinaccurate.com/a-hackers-guide-to-git)\r\n* [Getting Git: Getting Effective Project Management - Scott Chacon (Scotland on Rails 2009)](http://scotland-on-rails.s3.amazonaws.com/1A02_Scott_Chacon.mp4)\r\n* [Git and GitHub Secrets by Zach Holman](http://www.youtube.com/watch?v=Foz9yvMkvlA)\r\n* [Introduction to Git - Scott Chacon (GitHub)](http://www.youtube.com/watch?v=ZDR433b0HJY)\r\n* [Git in One Hour - Scott Chacon](http://www.youtube.com/watch?v=OFkgSjRnay4)\r\n* [Git Happens - Jessica Kerr (@jessitron)](http://www.youtube.com/watch?v=Dv8I_kfrFWw)\r\n* [grb - Git Remote Branch ruby gem](http://gitready.com/advanced/2009/03/11/easily-manage-git-remote-branches.html)\r\n* [Git from the Bottom Up](http://ftp.newartisans.com/pub/git.from.bottom.up.pdf)\r\n* [Deliberate Git - Stephen Ball (SteelCityRuby 2013)](http://steelcityruby.confbots.com/video/72762735)\r\n* [Git Interactive Rebase, Squash, Amend and Other Ways of Rewriting History - Tute Costa](http://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history)\r\n* [Git: Checkout multiple branches at the same time](http://blog.jessitron.com/2013/10/git-checkout-multiple-branches-at-same.html)\r\n* [Tracking method history in git](http://urbanautomaton.com/blog/2014/09/22/tracking-method-history-in-git/) & [method_log Ruby gem](https://github.com/freerange/method_log)\r\n* [Git From the Bits Up - Tim Berglund (Jfokus 2016)](https://www.youtube.com/watch?v=mdvlu_R8EWE)\r\n\r\n### GIT - GITHUB\r\n\r\n* [Help](https://help.github.com/)\r\n* [Github Cheat Sheet](https://github.com/tiimgreen/github-cheat-sheet)\r\n* [Developer docs](http://developer.github.com)\r\n\r\n## HASKELL\r\n\r\n* Haskell: [main site](https://www.haskell.org/) | [wiki](https://wiki.haskell.org/Haskell) | [learning resources](https://wiki.haskell.org/Learning_Haskell) | [tryhaskell.org](http://tryhaskell.org/) | [Hoogle (Haskell API search engine)](https://www.haskell.org/hoogle/) | [Hackage (Haskell package archive)](http://hackage.haskell.org/) | [GHC user's guide](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/) | [Haskell libraries](https://downloads.haskell.org/~ghc/latest/docs/html/libraries/)\r\n* [Hackr.io Haskell resources](https://hackr.io/tutorials/haskell)\r\n* [Type introduction illustrated for casual Haskellers - Takenobu T.](http://takenobu-hs.github.io/downloads/type_introduction_illustrated.pdf)\r\n* [Write You a Haskell: Building a modern functional compiler from first principles - Stephen Diehl](http://dev.stephendiehl.com/fun/WYAH.pdf)\r\n* [Learn Haskell](https://github.com/bitemyapp/learnhaskell) | [Specific topics for Haskell users](https://github.com/bitemyapp/learnhaskell/blob/master/specific_topics.md)\r\n* [PlanetHaskell](http://planet.haskell.org/)\r\n* [Haskell Koans - Vancouver Haskell Meetup](https://github.com/HaskVan/HaskellKoans)\r\n* [Modeling Data in Haskell for Beginners - Chris Allen (LambdaConf 2015)](https://www.youtube.com/watch?v=p-NBJm0kIYU)\r\n* [Type Classes Vs the World - Edward Kmett (Boston Haskell 2015)](https://www.youtube.com/watch?v=hIZxTQP1ifo)\r\n\r\n### HASKELL - BENEFITS\r\n\r\n* [Facebook’s New Spam-Killer Hints at the Future of Coding - Cade Metz (Wired)](http://www.wired.com/2015/09/facebooks-new-anti-spam-system-hints-future-coding/)\r\n* [The Road to Running Haskell at Facebook Scale - Jon Coens (Code Mesh London 2015)](https://www.youtube.com/watch?v=sl2zo7tzrO8)\r\n* [Simon Peyton-Jones and John Hughes - It's Raining Haskell](https://channel9.msdn.com/Blogs/Charles/YOW-2011-Simon-Peyton-Jones-and-John-Hughes-Its-Raining-Haskell)\r\n\r\n### HASKELL - BLOGS\r\n\r\n* [Chris Done](http://chrisdone.com/tags/haskell)\r\n\r\n### HASKELL - BOOKS\r\n\r\n* [Learn You a Haskell for Great Good!](http://learnyouahaskell.com/chapters)\r\n* [Real World Haskell - Bryan O'Sullivan, Don Stewart, and John Goerzen](http://book.realworldhaskell.org/read/)\r\n* [Gentle Introduction to Haskell 98 - Paul Hudak, John Peterson & Joseph Fasel](https://www.haskell.org/tutorial/haskell-98-tutorial.pdf)\r\n* [Haskell Programming From First Principles - Christopher Allen & Julie Moronuki](http://haskellbook.com/) [NON-FREE but excellent] | [Exercises and notes for book \"Haskell Programming from first principles\" - Lukas Lehner](http://lukleh.github.io/haskell-book-excercises/) | [Git repo with PDFs of all follow-up resources mentioned in HaskellBook](https://github.com/pushcx/hpffp-resources)\r\n* GHC User Guide: [PDF](https://downloads.haskell.org/~ghc/latest/docs/users_guide.pdf) | [HTML](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/index.html)\r\n* [Lazy Evaluation Illustrated for Haskell Divers - Takenobu T.](https://takenobu-hs.github.io/downloads/haskell_lazy_evaluation.pdf)\r\n* [Introduction to Haskell (lecture notes & code) - Noam Zilberstein (UPenn, Spring 2015)](http://www.seas.upenn.edu/~cis194/lectures.html)\r\n* [Parallel and Concurrent Programming in Haskell - Simon Marlow](http://chimera.labs.oreilly.com/books/1230000000929/index.html)\r\n\r\n### HASKELL - CODE EXAMPLES\r\n\r\n* [Haskell Everywhere! - Todo apps in Haskell](https://github.com/jyrimatti/hseverywhere)\r\n\r\n### HASKELL - FREGE\r\n\r\n* [Github](https://github.com/Frege/frege)\r\n* [Frege: purely functional programming for the JVM - Dierk König](https://www.youtube.com/watch?v=b8-OV7wA7sw)\r\n\r\n### HASKELL - HAKYLL\r\n\r\n* [Hakyll: Haskell library for generating static sites](https://jaspervdj.be/hakyll/)\r\n\r\n### HASKELL - HAXL\r\n\r\n* [HAXL: Haskell library that simplifies access to remote data, such as databases or web-based services](https://github.com/facebook/Haxl)\r\n* [Dropbox Hack Week: GraphQL Server in Haskell - Chad Austin](https://chadaustin.me/2016/02/dropbox-hack-week-graphql-server-in-haskell/) | [Datagraph code](https://github.com/dropbox/datagraph)\r\n\r\n### HASKELL - HEDIS\r\n\r\n* Hedis: Haskell client for the Redis datastore: [Github](https://github.com/informatikr/hedis) | [Hackage](https://hackage.haskell.org/package/hedis)\r\n\r\n### HASKELL - SPOCK\r\n\r\n* Spock: lightweight Haskell web framework inspired by Ruby's Sinatra: [website](https://www.spock.li/) | [Github](https://github.com/agrafix/Spock) | [tutorial](https://www.spock.li/tutorial/)\r\n* [Spock – Powerful Elegant Web Applications using Haskell - Alexander Thiemann (f(by)15)](https://www.youtube.com/watch?v=kNqsOBrCbLo)\r\n\r\n### HASKELL - VIDEOS\r\n\r\n* [Haskell video collection (InfoQ)](http://www.infoq.com/haskell/)\r\n* [Haskell is Not For Production and Other Tales - Katie Miller (Linux.conf.au 2016)](https://www.youtube.com/watch?v=mlTO510zO78) | [slides](http://www.slideshare.net/KatieAtie/haskell-is-not-for-production-and-other-tales)\r\n* [Introduction to Functional Programming - Erik Meijer](https://www.edx.org/course/introduction-functional-programming-delftx-fp101x-0)\r\n* [Functional Programming Fundamentals - Erik Meijer](https://channel9.msdn.com/Series/C9-Lectures-Erik-Meijer-Functional-Programming-Fundamentals)\r\n* [Learn Haskell in One Video - Derek Banas](https://www.youtube.com/watch?v=02_H3LjqMr8)\r\n* [Haskell Basics - FunFunFunction #35](https://www.youtube.com/watch?v=j5a9l1Td2Lo)\r\n* [Haskell Stack Mega-Tutorial - Christopher Allen](https://www.youtube.com/watch?v=sRonIB8ZStw)\r\n* [A Practical Introduction to Haskell GADTs - Richard Eisenberg (LambdaConf 2015)](https://www.youtube.com/watch?v=6snteFntvjM)\r\n* [A History of Haskell: Being Lazy With Class - Arthur Vard](https://www.youtube.com/watch?v=3bjXGrycMhQ)\r\n* Adventure With Types in Haskell - Simon Peyton Jones: [Lecture 1](https://www.youtube.com/watch?v=6COvD8oynmI) | [Lecture 2](https://www.youtube.com/watch?v=brE_dyedGm0)\r\n* [Classes, Jim, but not as we know them - Simon Peyton Jones (Microsoft Development Center Copenhagen TechTalk)](https://channel9.msdn.com/posts/MDCC-TechTalk-Classes-Jim-but-not-as-we-know-them)\r\n* [Beginner's Guide to Exceptions in Haskell - Erin Swenson-Healey](https://www.youtube.com/watch?v=PWS0Whf6-wc)\r\n* [Fun with type functions - Simon Peyton Jones (Microsoft Development Center Copenhagen TechTalk)](https://channel9.msdn.com/posts/MDCC-TechTalk-Fun-with-type-functions)\r\n* [Haskell Amuse-Bouche - Mark Lentczner (GoogleTechTalks 2011)](https://www.youtube.com/watch?v=b9FagOVqxmI)\r\n* [Many videos on Purescript & Haskell - kritzcreek](https://www.livecoding.tv/kritzcreek/videos/)\r\n* [Writing a Game in Haskell - Elise Huard](https://www.youtube.com/watch?v=1MNTerD8IuI)\r\n* [A Year of Haskell - Justin Leitgeb (Lambda Days 2015)](https://www.youtube.com/watch?v=wZ0RQG3mFPw)\r\n* [Haskell for Everyday Programmers - Venkat Subramaniam (Functional Conf Bangalore 2014)](https://www.youtube.com/watch?v=VGCE_3fjzU4) & [code examples](http://www.agiledeveloper.com/presentations/haskell_for_java_programmers.zip)\r\n* The Haskell Cast [#2 - Don Stewart on Real World Haskell](https://www.youtube.com/watch?v=4YfkwfZ7AV4) | [#4 - Simon Marlow on Parallelism and Concurrency](https://www.youtube.com/watch?v=73B1uc3xkvo)\r\n* Haskell Talks: Erik Hinton, Programmer with New York Times: [Part 1](https://www.youtube.com/watch?v=6ciJv9Bb928) | [Part 2](https://www.youtube.com/watch?v=BBm6yfkjkPw)\r\n* [Developing Web Applications with Haskell - Alejandro Serrano (LambdaConf 2015)](https://www.youtube.com/watch?v=FnaD4xS_hHY)\r\n* [Exact Real Arithmetic in Haskell - Mitchell Riley (Brisbane Functional Programming Group, May 2015)](https://www.youtube.com/watch?v=LJQgYBQFtSE)\r\n\r\n## HIRING\r\n\r\n* [The Best Way to Hire Developers - Erik Dietrich](http://www.daedtech.com/best-way-hire-developers/)\r\n\r\n## HTTP\r\n\r\n### HTTP - AUTHENTICATION\r\n\r\n* [Token-based security in a REST API - Andy Balaam](https://www.youtube.com/watch?v=3c9KDf5p_Vc)\r\n\r\n## HTML\r\n\r\n### HTML - BASICS\r\n\r\n* [Constructing the Object Model - Ilya Grigorik](https://developers.google.com/web/fundamentals/performance/critical-rendering-path/constructing-the-object-model?hl=en)\r\n\r\n### HTML - HAML\r\n\r\n* [Tutorial](http://haml.info/tutorial.html) & [Reference](http://haml.info/docs/yardoc/file.REFERENCE.html)\r\n\r\n### HTML - SLIM\r\n\r\n* [Slim](http://slim-lang.com/): [Github code + examples](https://github.com/slim-template/slim) | [API docs](www.rubydoc.info/gems/slim/frames)\r\n\r\n## HTML5\r\n\r\n* [Learn to Code HTML & CSS](http://learn.shayhowe.com/html-css/)\r\n* [CodePen.io](http://codepen.io/)\r\n* [Smashing Magazine](http://www.smashingmagazine.com/)\r\n* [Dive into HTML 5 - Mark Pilgrim](http://diveintohtml5.info/)\r\n* [Mozilla MDN](https://developer.mozilla.org/en-US/docs/HTML/HTML5)\r\n* [HTML5 Boilerplate](http://html5boilerplate.com/)\r\n* [HTML5 Doctor](http://html5doctor.com/)\r\n* [HTML5 Developer Conference](http://www.youtube.com/playlist?list=PL2679A5F392A01722&feature=plcp)\r\n* [HTML5 Please](http://html5please.com/)\r\n* [Box shadows](http://codepen.io/bphillips201/details/JygKB)\r\n* [Can I Use?](http://caniuse.com/)\r\n* [Datalists](http://demo.agektmr.com/datalist/)\r\n* [Transition timing functions](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function)\r\n\r\n### HTML5 - CANVAS\r\n\r\n* [HTML5 Canvas Animation With Javascript - Josh Robertson (MountainWest JavaScript 2014)](http://confreaks.tv/videos/3239-mwjs-html5-canvas-animation-with-javascript)\r\n* [A Rubyist's Guide to the Canvas API - H. Dean Hudson (CascadiaRuby 2012)](http://confreaks.tv/videos/1067-cascadiaruby2012-a-rubyist-s-guide-to-the-canvas-api)\r\n* [Mozilla MDN](https://developer.mozilla.org/en-US/docs/HTML/Canvas)\r\n\r\n### HTML5 - INDEXED DB\r\n\r\n* [Working With IndexedDB - Raymond Camden - Part 1](http://net.tutsplus.com/tutorials/javascript-ajax/working-with-indexeddb/) [Part 2](http://net.tutsplus.com/tutorials/javascript-ajax/working-with-indexeddb-part-2/) [Part 3](http://net.tutsplus.com/tutorials/javascript-ajax/working-with-indexeddb-part-3/)\r\n* [db.js (wrapper for IndexedDB)](http://aaronpowell.github.io/db.js/)\r\n* [indexeddb-backbonejs-adapter](https://github.com/superfeedr/indexeddb-backbonejs-adapter)\r\n* [Deep Dive into the HTML5 IndexedDB](http://www.codeproject.com/Articles/347765/Deep-Dive-into-the-HTML5-IndexedDB)\r\n* [IndexedDB - Mozilla Developer Network](https://developer.mozilla.org/en-US/docs/IndexedDB)\r\n* [Using the HTML5 IndexedDB API - Brian Stewart](http://www.ibm.com/developerworks/web/library/wa-indexeddb/index.html)\r\n* [Quick Tip: Store Data in the Browser with IndexedDB - Martin Angelov](http://tutorialzine.com/2013/01/simple-indexeddb-dbjs-app/)\r\n* [Who Needs MySQL When There Is IndexedDB? - NewRelic](http://blog.newrelic.com/2012/11/26/who-needs-mysql-when-there-is-indexeddb/)\r\n* [How the browsers store IndexedDB data - Aaron Powell](http://www.aaron-powell.com/web/indexeddb-storage)\r\n\r\n#### HTML5 - INDEXED DB - LOVEFIELD\r\n\r\n* [Lovefield: A cross-browser, SQL-like, relational query engine for Web in pure JavaScript](https://github.com/google/lovefield)\r\n\r\n### HTML5 - PERFORMANCE\r\n\r\n* [High Performance in the Critical Rendering Path - Nicolas Bevacqua](http://forwardjs.com/university/high-performance-in-the-critical-rendering-path)\r\n\r\n### HTML5 - PROGRESSIVE WEB APPS\r\n\r\n* [A Beginner’s Guide To Progressive Web Apps - Kevin Farrugia](https://www.smashingmagazine.com/2016/08/a-beginners-guide-to-progressive-web-apps/)\r\n* [What are Progressive Web Apps? - Max Lynch](http://blog.ionic.io/what-is-a-progressive-web-app/)\r\n* [Everything You Should Know About Progressive Web Apps - Danny Markov](http://tutorialzine.com/2016/09/everything-you-should-know-about-progressive-web-apps/)\r\n* [Building Progressive Web Apps Today - Thao Tran (Chrome Dev Summit 2016)](https://www.youtube.com/watch?v=U52dD0tegsA)\r\n* [Instant Loading: Building offline-first Progressive Web Apps - Google I/O 2016 - Jake Archibald](https://www.youtube.com/watch?v=cmGr0RszHc8)\r\n* [Your First Progressive Web App - Google](https://developers.google.com/web/fundamentals/getting-started/codelabs/your-first-pwapp/(\r\n* [The Building Blocks Of Progressive Web Apps - Ada Rose Edwards](https://www.smashingmagazine.com/2016/09/the-building-blocks-of-progressive-web-apps/)\r\n\r\n### HTML5 - SERVICEWORKERS\r\n\r\n* [ServiceWorke.rs (Mozilla)](https://serviceworke.rs/)\r\n* [There is a client-side proxy (ServiceWorker) in your browser! - Ilya Grigorik (Velocity NYC 2015)](https://www.youtube.com/watch?v=etACK2qbHfc)\r\n\r\n### HTML5 - WEB SOCKETS\r\n\r\n* [Mozilla MDN](https://developer.mozilla.org/en-US/docs/WebSockets)\r\n* [Model-View-Websockets](http://confreaks.tv/videos/2235-html5tx2013-model-view-websockets)\r\n\r\n### HTML5 - WEB WORKERS\r\n\r\n* [Fundamentals of HTML5 Web Workers - Craig Shoemaker](https://www.youtube.com/playlist?list=PLTGuLY9dBAgCEpYU_qWvoHIihbZILSQ9D)\r\n* [Using Web Workers (Mozilla MDN)](https://developer.mozilla.org/en-US/docs/Web/Guide/Performance/Using_web_workers)\r\n* [JavaScript for Experienced Developers: Web Workers - Microsoft Virtual Academy](https://www.youtube.com/watch?v=LrK5HudphWY)\r\n\r\n## INFLUXDB\r\n\r\n* [InfluxDB: Open-Source Time Series Database - Paul Dix (Data Driven NYC / FirstMark Capital)](https://www.youtube.com/watch?v=GzIYRr40QO4)\r\n* [InfluxDB workshop - Paul Dix (Monitorama PDX 2014)](http://vimeo.com/95311877)\r\n* [Grafana workshop - Torkel Ödegaard (Monitorama PDX 2014)](http://vimeo.com/95316672)\r\n* [All Monitorama PDX 2014 talks](http://vimeo.com/monitorama/videos)\r\n\r\n## JAVASCRIPT\r\n\r\n* [Javascript Basics](http://autotelicum.github.io/Smooth-CoffeeScript/literate/js-intro.html)\r\n* [Eloquent Javascript](http://eloquentjavascript.net/)\r\n* [Javascript.com](https://www.javascript.com/resources)\r\n* [Learning JavaScript Design Patterns - Addy Osmani](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)\r\n* [Learn JavaScript - Codecademy](https://www.codecademy.com/learn/javascript)\r\n* [23 Free JavaScript Books - HackerLists.com](https://hackerlists.com/free-javascript-books/)\r\n* [Essential JavaScript Links - Eric Elliott](https://github.com/ericelliott/essential-javascript-links/)\r\n* [JavaScript tips](https://code.google.com/p/jslibs/wiki/JavascriptTips)\r\n* [Visualize JavaScript code execution](http://www.pythontutor.com/visualize.html)\r\n* [SuperheroJS - curated JavaScript links](http://superherojs.com/)\r\n* [JavascriptJabber.com (podcasts)](http://javascriptjabber.com/)\r\n* [The Javascript Show (podcasts)](http://javascriptshow.com/episodes)\r\n* [Codepen.io](http://codepen.io/)\r\n* [You Don't Know JS - Kyle Simpson](http://youdontknowjs.com)\r\n* [Javascript Koans - Liam McLennan](https://github.com/liammclennan/JavaScript-Koans)\r\n* [Advanced Introduction to JavaScript (Yakov Fain screencast)](http://www.youtube.com/watch?v=X1J0oMayvC0)\r\n* [Advanced Scoping & Other Puzzles (Vincenzo Tilotta)](http://www.youtube.com/watch?v=RnpPDoSzpYs)\r\n* [Nice discussion of scope chains, hoisting, self-executing anonymous functions, execution context, closures & module pattern (starting 28 minutes in)](http://www.youtube.com/watch?v=OrIFaWJ9Glo)\r\n* [Khan Academy](http://www.khanacademy.org/cs/tutorials/all-tutorials)\r\n* Crockford videos: [1](http://www.youtube.com/watch?v=JxAXlJEmNMg) [2](http://www.youtube.com/watch?v=RO1Wnu-xKoY) [3](http://www.youtube.com/watch?v=ya4UHuXNygM) [4](http://www.youtube.com/watch?v=Fv9qT9joc0M) [5](http://www.youtube.com/watch?v=47Ceot8yqeI) [6](http://www.youtube.com/watch?v=QgwSUtYSUqA) [7](http://www.youtube.com/watch?v=UTEqr0IlFKY) [8](http://www.youtube.com/watch?v=taaEzHI9xyY) [Advanced Javascript](http://www.youtube.com/watch?v=DwYPG6vreJg) [Good Parts](http://www.youtube.com/watch?v=_DKkVvOt6dk) [JS: Your New Overlord](http://www.youtube.com/watch?v=Trurfqh_6fQ)\r\n* [Mozilla MDN](https://developer.mozilla.org/en-US/docs/JavaScript)\r\n* [Programming JavaScript Applications - Eric Elliott](https://ericelliottjs.com/product/programming-javascript-applications-paper-ebook-bundle/)\r\n* The Two Pillars of JavaScript - Eric Elliott: [Part 1: How to Escape the 7th Circle of Hell](https://medium.com/javascript-scene/the-two-pillars-of-javascript-ee6f3281e7f://medium.com/javascript-scene/the-two-pillars-of-javascript-ee6f3281e7f3) & [Pt 2: Functional Programming - How to Stop Micromanaging Everything](https://medium.com/javascript-scene/the-two-pillars-of-javascript-pt-2-functional-programming-a63aa53a41a4)\r\n* JS Objects - Kyle Simpson: [Pt 1: Inherited a Mess](http://davidwalsh.name/javascript-objects), [Pt 2: Distractions](http://davidwalsh.name/javascript-objects-distractions) & [Pt 3: De\"construct\"ion](http://davidwalsh.name/javascript-objects-deconstruction)\r\n* [Javascript: Up to Speed (Tekpub)](http://vimeo.com/47483575)\r\n* [js-assessment](https://github.com/rmurphey/js-assessment)\r\n* [Javascript Weekly (email list)](http://javascriptweekly.com/)\r\n* [Javascript at 17 - Brendan Eich (Fluent 2012)](http://www.youtube.com/watch?v=Rj49rmc01Hs)\r\n* [JSConf US 2013 videos](http://www.youtube.com/watch?v=f_9nDBtSInI&list=PL37ZVnwpeshF7AHpbZt33aW0brYJyNftx)\r\n* [JSConf US 2012 videos](http://www.youtube.com/watch?v=Moy1nWM3Zmg&list=PL37ZVnwpeshHLGexQN3yT1617FekYdgN0)\r\n* [JSConf EU 2012 videos](http://www.youtube.com/watch?v=JNjnv-Gcpnw&list=PL37ZVnwpeshF-i8_6tDZU4543HrHXp8EL)\r\n* [JSConf EU 2011 videos](http://www.youtube.com/watch?v=PXfwHAfCGoc&list=PL37ZVnwpeshEVYiRemhMII6ORJmsJuqP7)\r\n* [Javascript Masterclass - Angelina Fabbro (JSConfUS 2013)](http://www.youtube.com/watch?v=v0TFmdO4ZP0)\r\n* [Douglas Crockford: Really. JavaScript. (JSConfUS 2013)](http://www.youtube.com/watch?v=lTWGoL1N-Kc)\r\n* [JavaScript Essentials - Travis Tidwell](http://www.youtube.com/watch?v=03EQu_2K2cs)\r\n* [Advanced HTML5 JavaScript: Down 'n Dirty - Kyle Simpson](http://www.youtube.com/watch?v=0ru7S0bJdko)\r\n* [Javascript Best Practices - Thinkful.com](http://www.thinkful.com/learn/javascript-best-practices-1/)\r\n* [Sitepoint - Javascript](http://www.sitepoint.com/javascript/)\r\n\r\n### JAVASCRIPT - ANGULAR.JS\r\n\r\n* [AngularJS Fundamentals in 60-ish Minutes - Dan Wahlin](http://www.youtube.com/watch?v=i9MHigUZKEM)\r\n* [A comparison of the two-way binding in AngularJS, EmberJS and KnockoutJS - Marius Gundersen (JS Conf.eu)](http://2013.jsconf.eu/speakers/marius-gundersen-a-comparison-of-the-twoway-binding-in-angularjs-emberjs-and-knockoutjs.html)\r\n\r\n### JAVASCRIPT - ASYNCHRONOUS\r\n\r\n* [Syncing Async -  Kyle Simpson](http://www.confreaks.tv/videos/4611-e4e2014-syncing-async) & [Promises: The Sync Problem, part 1](http://blog.getify.com/promises-part-1), [part 2](http://blog.getify.com/promises-part-2/), [part 3](http://blog.getify.com/promises-part-3/), [part 4](http://blog.getify.com/promises-part-4/) [part 5](http://blog.getify.com/promises-part-5/)\r\n* [Promises, Promises - Domenic Denicola](http://www.youtube.com/watch?v=MNxnHbyzhuo)\r\n* [Promises in Javascript - Paul Mooney](http://www.youtube.com/watch?v=SI325Bczx7Y)\r\n* [JavaScript Promises: There and back again - ES6](http://www.html5rocks.com/en/tutorials/es6/promises/)\r\n* [Promise Anti-Patterns](http://taoofcode.net/promise-anti-patterns/)\r\n* [Asynchronous JS: Callbacks, Listeners, Control Flow Libs and Promises](http://sporto.github.com/blog/2012/12/09/callbacks-listeners-promises/)\r\n* [Promise-Based Validation](http://net.tutsplus.com/tutorials/javascript-ajax/promise-based-validation/)\r\n* [Callbacks are imperative, promises are functional: Node’s biggest missed opportunity](http://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/)\r\n* [Digging into Deferreds - Addy Osmani](http://addyosmani.com/blog/digging-into-deferreds-1/) & [Creating Responsive Applications Using jQuery Deferred and Promises](http://msdn.microsoft.com/en-us/magazine/gg723713.aspx)\r\n* [jQuery.Deferred()](http://api.jquery.com/jQuery.Deferred/) & [deferred.promise()](http://api.jquery.com/deferred.promise/)\r\n* [jQuery.Deferred is the most important client-side tool you have](http://eng.wealthfront.com/2012/12/jquerydeferred-is-most-important-client.html)\r\n* [Promise & Deferred Objects in Javascript, Pt 1 - Theory & Semantics](http://blog.mediumequalsmessage.com/promise-deferred-objects-in-javascript-pt1-theory-and-semantics) & [Pt 2 - Practice](http://blog.mediumequalsmessage.com/promise-deferred-objects-in-javascript-pt2-practical-use)\r\n* [Understanding JQuery.Deferred and Promise](http://joseoncode.com/2011/09/26/a-walkthrough-jquery-deferred-and-promise/)\r\n* [What's The Point of Promises?](http://www.kendoui.com/blogs/teamblog/posts/13-03-28/what-is-the-point-of-promises.aspx)\r\n\r\n### JAVASCRIPT - AMPERSAND.JS\r\n\r\n* [Ampersand.js](http://ampersandjs.com/), [learn](http://ampersandjs.com/learn), [docs](http://ampersandjs.com/docs)\r\n\r\n### JAVASCRIPT - BACKBONE.JS\r\n\r\n* [Backbone.js](http://backbonejs.org/)\r\n* [Backbone Fundamentals](https://github.com/addyosmani/backbone-fundamentals)\r\n* [Backbone in Baby Steps, part 1](http://codebyexample.info/2012/03/06/backbone-baby-steps/), [part 2](http://codebyexample.info/2012/04/05/backbone-in-baby-steps-part-2/), [part 2.5](http://codebyexample.info/2012/04/29/backbone-in-baby-steps-part-2-5/) & [part 3](http://codebyexample.info/2012/04/30/backbone-in-baby-steps-part-3/)\r\n* [BackboneConf 2013 videos](http://lanyrd.com/2013/backboneconf/video/)\r\n* [TodoMVC Backbone example](http://todomvc.com/architecture-examples/backbone/) & [code](https://github.com/addyosmani/todomvc/tree/gh-pages/architecture-examples/backbone/)\r\n* [Introduction to Backbone.js - Nick Gauthier](http://www.youtube.com/watch?v=PqtYcHyyWJA)\r\n* [Put Some Backbone.js in your Apps (Sid Maestre)](http://www.youtube.com/watch?v=jM8KE_Fa6JI)\r\n* [Three Client-side Web Apps (2 Backbone, 1 Ember) - Brian Kaney](http://bostonrb.org/presentations/three-client-side-web-apps)\r\n* [Backbone Tutorials](http://backbonetutorials.com/)\r\n* [Backbone: 3 Ways](http://confreaks.tv/videos/2219-html5tx2013-backbone-3-ways)\r\n* [Backbone.js, Jasmine and Rails: A Lust Story - Austin Fonacier (LA Ruby 2013)](http://www.confreaks.tv/videos/2295-larubyconf2013-backbone-js-jasmine-and-rails-the-lust-story)\r\n* [Using Backbone.js With Rails: Patterns from the Wild - Sarah Mei (RailsConf 2012)](http://confreaks.tv/videos/861-railsconf2012-using-backbone-js-with-rails-patterns-from-the-wild)\r\n* [Growing Up with Backbone - Tim Branyen](http://www.youtube.com/watch?v=iBffGfUfC1c)\r\n* [Evening on Backbone.js/Views w/ Q&A with David Heinemeier Hansson](http://www.youtube.com/watch?v=FkLVl3gpJP4) - Intro to Rails followed by DHH arguing for Rails-generated (and \"Russian-doll cached\") HTML+JavaScript over client-side MVC except for the most complex cases\r\n* [Anatomy of Backbone - CodeSchool (non-free)](http://www.codeschool.com/courses/anatomy-of-backbonejs)\r\n* [Introduction to Backbone.js Part 1: Models Tutorial](http://www.youtube.com/watch?v=uYIzpHjPgXE) - First of a series of free videos all viewable on Youtube\r\n* [Structuring Complex Backbone.js Apps](http://www.mikkolehtinen.com/blog/2012/08/03/structuring-complex-backbone-dot-js-apps/)\r\n* [Dependency Injection for Fun and Profit - Sam Breed (BackboneConf 2013)](http://www.youtube.com/watch?v=Lm05e5sJaE8)\r\n\r\n#### JAVASCRIPT - BACKBONE.JS - LOCALSTORAGE\r\n\r\n* [Backbone.localStorage](https://github.com/jeromegn/Backbone.localStorage)\r\n\r\n#### JAVASCRIPT - BACKBONE.JS - MARIONETTE\r\n\r\n* [Unsuck your backbone](https://speakerdeck.com/ammeep/unsuck-your-backbone)\r\n\r\n#### JAVASCRIPT - BACKBONE.JS - PLUGINS\r\n\r\n* [Backbone Boilerplate](https://github.com/tbranyen/backbone-boilerplate/wiki) & [grunt-bbb](https://github.com/backbone-boilerplate/grunt-bbb)\r\n* [Backbone.ModelBinder](https://github.com/theironcook/Backbone.ModelBinder)\r\n* [backbone.validation](https://github.com/thedersen/backbone.validation)\r\n\r\n#### JAVASCRIPT - BACKBONE.JS - TESTING\r\n\r\n* [Integration testing Backbone.js](http://open.bekk.no/integration-testing-backbone-js/)\r\n* [Testing your Backbone from the outside-in - James Newbery (Scotland.js 2012)](https://vimeo.com/45140589)\r\n\r\n#### JAVASCRIPT - BACKBONE.JS - UNDERSCORE.JS/LO-DASH\r\n\r\n* [Underscore.js](http://underscorejs.org/)\r\n* [Lo-Dash](http://lodash.com/)\r\n\r\n### JAVASCRIPT - BLOGS\r\n\r\n* [Reginald Braithwaite](http://raganwald.com/)\r\n* [JavaScript Playground](http://javascriptplayground.com/blog)\r\n* [ModernWeb.com](http://modernweb.com/category/web/javascript/)\r\n\r\n### JAVASCRIPT - BUILD TOOLS\r\n\r\n* [Brunch.io](https://github.com/brunch/brunch-guide#readme)\r\n* [Bower (package manager)](http://bower.io/)\r\n* [Broccoli (asset pipeline / build tool)](https://github.com/broccolijs/broccoli)\r\n* [No More 'Grunt Watch': Modern build workflows with Broccoli (EmberConf 2014)](https://www.youtube.com/watch?v=PEb4BiXH4bE)\r\n* [Getting Started With Broccoli and Ember.js](http://ampersate.com/getting-started-with-broccoli-and-emberjs)\r\n\r\n### JAVASCRIPT - CLEAN CODE\r\n\r\n* 7 Patterns to Refactor JavaScript Applications - Michael Phillips: [Value Objects](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-value-objects) | [Service Objects](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-service-objects) | [Form Objects](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-form-objects) | [Query Objects](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-query-objects) | [Policy Objects](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-query-objects) | [Decorators](https://blog.engineyard.com/2015/7-patterns-refactor-javascript-decorators)\r\n* [Airbnb's style guide](https://github.com/airbnb/javascript)\r\n* [Github's style guide](https://github.com/styleguide/javascript)\r\n* [JSHint (Github)](https://github.com/jshint/jshint) & [JSHint.com](http://www.jshint.com/)\r\n* [Javascript Development Workflow of 2013 - Paul Irish](http://www.youtube.com/watch?v=f7AU2Ozu8eo)\r\n* [Writing Testable Javascript - Rebecca Murphey](http://alistapart.com/article/writing-testable-javascript)\r\n\r\n### JAVASCRIPT - CLIENT-SIDE ARCHITECTURES\r\n\r\n* [Use Rails for Your Next Client-Side App - Yehuda Katz (ChicagoRuby2012)](http://vimeo.com/50451185)\r\n\r\n### JAVASCRIPT - COFFEESCRIPT\r\n\r\n* [Official documentation](http://coffeescript.org/) & [FAQ](https://github.com/jashkenas/coffee-script/wiki/FAQ) & [list of text editor plugins](https://github.com/jashkenas/coffee-script/wiki/Text-editor-plugins)\r\n* [Little Book on CoffeeScript (Alex MacCaw)](http://arcturo.github.io/library/coffeescript/)\r\n* [Smooth Coffeescript](http://autotelicum.github.com/Smooth-CoffeeScript/) [HTML doc](http://autotelicum.github.io/Smooth-CoffeeScript/SmoothCoffeeScript.html) | [PDF doc](http://autotelicum.github.io/Smooth-CoffeeScript/Smooth%20CoffeeScript%20Web%20Optimized.pdf) | [HTML interactive](http://autotelicum.github.io/Smooth-CoffeeScript/interactive/interactive-coffeescript.html)\r\n* [Coffeescript Cookbook](http://coffeescriptcookbook.com/)\r\n* [Coffeescript talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=coffeescript&commit=go)\r\n* [Coffeescript Koans - sleepyfox](https://github.com/sleepyfox/coffeescript-koans)\r\n* [Intro to Coffeescript - Aseem Kishore](http://aseemk.com/talks/intro-to-coffeescript#/80)\r\n* [PencilCode.net (really fun!)](http://pencilcode.net/)\r\n* [CoffeeScript Ristretto Online](http://ristrettolo.gy/)\r\n* [Testing With CoffeeScript](https://efendibooks.com/minibooks/testing-with-coffeescript)\r\n* [Cheat Sheet (Cheatography)](http://www.cheatography.com/dimitrios/cheat-sheets/coffeescript-cheat-sheet/)\r\n* [CoffeeScript for the Rubyist - Mark Bates (RailsConf 2012)](http://confreaks.tv/videos/862-railsconf2012-coffeescript-for-the-rubyist) & [Aloha RubyConf 2012](http://confreaks.tv/videos/1242-aloharuby2012-coffeescript-for-the-rubyist)\r\n* [CoffeeScript Presentation: Code Like You Talk - Omer Sensoy](https://www.youtube.com/watch?v=-_arPK51bUo)\r\n* [CoffeeScript: The Cool Parts - Charles Wood](https://www.youtube.com/watch?v=43P0kWswWWI)\r\n* [CoffeeScript - SDRuby](http://www.sdruby.org/podcast/90)\r\n* [CodeSchool.com (non-free)](http://coffeescript.codeschool.com/)\r\n* [coffee-rails-source-maps](https://github.com/markbates/coffee-rails-source-maps)\r\n\r\n### JAVASCRIPT - CRYPTON (ENCRYPTED DATA API)\r\n\r\n* [Crypton.io](https://crypton.io/)\r\n\r\n### JAVASCRIPT - DATA\r\n\r\n* [LearnJSData.com](http://learnjsdata.com/)\r\n\r\n### JAVASCRIPT - D3\r\n\r\n* [API](https://github.com/mbostock/d3/wiki/API-Reference), [wiki](https://github.com/mbostock/d3/wiki) & [documentation](http://strongriley.github.io/d3/api/)\r\n* [Beyond the Bar Graph - Joanne Cheng (Kod.io 2014)](http://confreaks.tv/videos/3243-kodio_2014-beyond-the-bar-graph)\r\n* [Data Visualization and D3.js (Udacity)](https://www.udacity.com/course/ud507)\r\n* [Data Visualization with D3.js - Ray Villalobos (Lynda.com)](http://www.lynda.com/D3js-tutorials/Data-Visualization-D3js/162449-2.html) (Non-free)\r\n* [D3.js Tutorial - Jérôme Cukier and Scott Murray (StrataConf 2013)](http://cdn.oreillystatic.com/en/assets/1/event/91/D3_js%20tutorial%20Presentation.pdf)\r\n* [D3 Tips & Tricks - Malcolm Maclean](https://leanpub.com/D3-Tips-and-Tricks) (optional/suggested donation)\r\n* [Getting Started With D3 - Mike Dewar](http://it-ebooks.info/book/835/) & [on Amazon](http://www.amazon.com/Getting-Started-D3-Mike-Dewar/dp/1449328792/)\r\n* [D3: Data-Driven Documents - Stanford Computer Science Dept](http://vis.stanford.edu/files/2011-D3-InfoVis.pdf)\r\n\r\n#### JAVASCRIPT - D3 - DIMPLE.JS\r\n\r\n* [Dimple.js](http://dimplejs.org/)\r\n\r\n### JAVASCRIPT - DEPENDENCY INJECTION\r\n\r\n* [Sam Breed - Dependency Injection for Fun and Profit](http://www.youtube.com/watch?v=Lm05e5sJaE8)\r\n\r\n### JAVASCRIPT - ES 2016\r\n\r\n* [ES 2016: The Evolution of Javascript - Jafar Husain (MountainWest JavaScript 2015)](http://confreaks.tv/videos/mwjs2015-javascript-7-the-evolution-of-javascript)\r\n\r\n### JAVASCRIPT - ES 2015 / ES6 / ECMASCRIPT 6\r\n\r\n* [ES6 Part 1: Destructuring - funfunfunction](https://www.youtube.com/watch?v=PB_d3uBkQPs)\r\n* [Learn ES2015: A detailed overview of ECMAScript 6 features - Babeljs.io](http://babeljs.io/docs/learn-es2015/)\r\n* [ES6 In Depth Articles - Mozilla](https://hacks.mozilla.org/category/es6-in-depth/)\r\n* [Using JavaScript from the Future in Your Rails App Today - Steve Kinney (RailsConf 2015)](https://www.youtube.com/watch?v=Ayj1kgQNhAg)\r\n* [Essential ES6 / ES2015 JavaScript - Kyle Robinson Young](https://www.youtube.com/watch?v=CozSF5abcTA)\r\n* [ES6 Katas](http://es6katas.org/)\r\n* [Using ECMAScript 6 today - Dr. Axel Rauschmayer (RollingScopesConf 2015) - Part 1](https://www.youtube.com/watch?v=Fg3bEZIcnUw) & [Part 2](https://www.youtube.com/watch?v=Vhhq1WpzsnM) & [ECMAScript 6: what's next for JavaScript? (Frontendconf Zürich)](https://www.youtube.com/watch?v=G21rdWfa_as)\r\n* [JavaScript in 2015 - Glen Maddern](http://glenmaddern.com/articles/javascript-in-2015)\r\n* [Iterators and generators in ECMAScript 6 - Dr. Axel Rauschmayer](http://www.2ality.com/2013/06/iterators-generators.html)\r\n* [es6-module-transpiler](https://github.com/square/es6-module-transpiler) & [many more ES6 transpilers](https://github.com/addyosmani/es6-tools)\r\n* [ES6 module syntax](http://wiki.ecmascript.org/doku.php?id=harmony:modules#quick_examples)\r\n* [ECMAScript 6, The Future of JavaScript - Axel Rauschmayer](http://www.youtube.com/watch?v=_ZG_CrYyh_Q) (Excellent after 10-min intro)\r\n* [ES6Fiddle.net](http://www.es6fiddle.net)\r\n* [ES6 Tools - Addy Osmani](https://github.com/addyosmani/es6-tools)\r\n* [Rewriting a WebApp With ECMAScript 6](http://blog.tastejs.com/rewriting-a-webapp-with-ecmascript-6/)\r\n\r\n#### JAVASCRIPT - ES6 / ECMASCRIPT 6 - GENERATORS\r\n\r\n* Kyle Simpson: [Basics](http://davidwalsh.name/es6-generators), [Diving Deeper](http://davidwalsh.name/es6-generators-dive), [Going Async](http://davidwalsh.name/async-generators), [Getting Concurrent](http://davidwalsh.name/concurrent-generators)\r\n* [Lazy, composable, and modular JavaScript - Mudit Ameta](https://codewords.recurse.com/issues/four/lazy-composable-and-modular-javascript)\r\n* [Functional Programming With Generators - Peter De Croos (Forward.JS 2014)](http://forwardjs.com/university/functional-programming-with-generators)\r\n* [Hanging Up on Callbacks: Generators in ECMAScript 6 - Erin Swenson-Healey (Forward.JS 2014)](https://www.youtube.com/watch?v=s-BwEk-Y4kg)\r\n* [Hanging Up On Callbacks: Using ECMAScript 6 Generators - Erin Swenson-Healey](https://www.youtube.com/watch?v=OYdP1tQ9Rnw)\r\n* [A Study on Solving Callbacks with JavaScript Generators - James Long](http://jlongster.com/A-Study-on-Solving-Callbacks-with-JavaScript-Generators)\r\n\r\n### JAVASCRIPT - EMBER.JS\r\n\r\n* EmberJS: [Website](http://emberjs.com/) | [Guides](http://emberjs.com/guides/) | [API](http://emberjs.com/api/)\r\n* [Sneak Peek at Ember 2.0 - Erik Bryn (San Francisco Javascript Meetup 2015)](http://forwardjs.com/university/erik-bryn-presents-a-sneak-peek-at-ember-2-0)\r\n* [WickedGoodEmber 2015 videos](http://confreaks.tv/events/wickedgoodember2015)\r\n* [Using Ember CLI as a Single Page Static Site Generator - Jessica Suttles](http://blog.current.sh/using-ember-cli-as-a-single-page-static-site-generator/)\r\n* [How to Build a Rails 5 API Only and Ember Application - Santiago Pastorino](http://wyeworks.com/blog/2015/6/30/how-to-build-a-rails-5-api-only-and-ember-application/)\r\n* [Vic Ramon's Ember Tutorial](http://ember.vicramon.com/chapters)\r\n* [EmberConf 2015 keynote - Tom Dale & Yehuda Katz](https://www.youtube.com/watch?&v=o12-90Dm-Qs)\r\n* [EmberConf 2014 videos](http://confreaks.tv/events/emberconf2014) & [slides](http://emberconf.com/schedule.html)\r\n* [Intro To Ember @ LinkedIn - Erik Bryn (2014)](https://www.youtube.com/watch?v=XlWcj41D-So)\r\n* [Ember Inspector (for browsers)](https://github.com/tildeio/ember-extension)\r\n* [Intro to Ember JS - Vic Ramon of Hashrocket](https://www.youtube.com/watch?v=_lubCRPw17s)\r\n* [An In-Depth Introduction to Ember.js - Julien Knebel](http://coding.smashingmagazine.com/2013/11/07/an-in-depth-introduction-to-ember-js/)\r\n* [EmberWeekly.com](http://emberweekly.com/issues.html)\r\n* [Ember js - An Application Framework For The Future - Joachim Haagen Skeie (Warm Croc Conference 2014)](https://www.youtube.com/watch?v=KH5RreHtaaQ)\r\n* [Emberwatch list of Ember talks](http://emberwatch.com/), [tutorials](http://emberwatch.com/tutorials.html), [screencasts](http://emberwatch.com/screencasts.html) & [podcasts](http://emberwatch.com/podcasts.html)\r\n* [Awesome Ember Tricks - Robin Ward](http://www.youtube.com/watch?v=kBhGXX4zbXw)\r\n* [Boston Ember talks](http://www.youtube.com/channel/UCp_L_YjmXTKR4Q2fg1XahsA)\r\n* [EmberWatch.com](http://emberwatch.com/)\r\n* [So, You're Thinking of Using Ember - Ralph Holzmann (JQuery Conf 2014)](https://www.youtube.com/watch?v=oDFOJN1irAI)\r\n* [Common Pitfalls with Ember.js - Alex Speller (EmberFest 2014)](https://www.youtube.com/watch?v=vRfr2nrsX14)\r\n* [The Ember.js Framework - Everything You Need To Know - Yehuda Katz (All Things Open 2014)](https://www.youtube.com/watch?v=f-6Qd3nuv4w)\r\n* [EmberFest 2013 videos](http://emberfest.eu/munich)\r\n* [Lessons learned shipping 15,000 lines of Ember.js - Chris McClelland (EmberJSSeattleMeetup Nov 2014)](https://www.youtube.com/watch?v=H0F-kh8VvE4)\r\n* [Ember on Rails: #REALTALK - Brandon Hays (LoneStarRuby 2013)](http://confreaks.tv/videos/2597-lonestarruby2013-ember-on-rails-realtalk)\r\n* [Off the Menu: Building a Client-Side With Ember and Rails - Yehuda Katz (Rails Israel 2013)](https://www.youtube.com/watch?v=BpQj9_qEUAc)\r\n* [Ember Live Coding Session - Eric Berry](https://www.youtube.com/watch?v=4mSp1K7KUGE)\r\n* [Ember-rails](https://github.com/emberjs/ember-rails) + advice from [Hashrocket](http://hashrocket.com/blog/posts/setting-up-an-ember-app-with-a-rails-backend) & [Thoughtbot](http://robots.thoughtbot.com/emberjs-with-a-separate-rails-api)\r\n* [Ember-appkit-rails](https://github.com/dockyard/ember-appkit-rails)\r\n* [Ember App Kit Rails - Brian Cardarella](http://www.youtube.com/watch?v=sYX0qPuwJi4)\r\n* [Setting Up a Serious Ember Project - Justin Searls](http://blog.testdouble.com/posts/2014-04-19-setting-up-a-serious-ember-project.html)\r\n* [Ember Routes, Models, Templates and Controllers - Justin Searls](http://blog.testdouble.com/posts/2014-05-02-ember-routes-models-templates-and-controllers.html)\r\n* [Building an Ember App with Rails Part 1](http://reefpoints.dockyard.com/2014/05/07/building-an-ember-app-with-rails-part-1.html) [Part 2](http://reefpoints.dockyard.com/2014/05/08/building-an-ember-app-with-rails-part-2.html) [Part 3](http://reefpoints.dockyard.com/2014/05/09/building-an-ember-app-with-rails-part-3.html) [Part 4](http://reefpoints.dockyard.com/2014/05/31/building-an-ember-app-with-rails-part-4.html)\r\n* [Ember data](https://github.com/emberjs/data)\r\n* [Building Web Applications with Ember.js - NewCircle Training](http://www.youtube.com/watch?v=u6RFyVN9sNg)\r\n* [Ember 1.0](https://www.youtube.com/watch?v=zC7o1YkmkG0)\r\n* [A comparison of the two-way binding in AngularJS, EmberJS and KnockoutJS - Marius Gundersen (JS Conf.eu)](http://2013.jsconf.eu/speakers/marius-gundersen-a-comparison-of-the-twoway-binding-in-angularjs-emberjs-and-knockoutjs.html)\r\n* [Ember.setState(this.get(React)) - Alex Matchneer - Ember NYC 2014](https://docs.google.com/presentation/d/1afMLTCpRxhJpurQ97VBHCZkLbR1TEsRnd3yyxuSQ5YY/edit?pli=1)\r\n* [Ember HTMLBars - Erik Bryn](http://www.youtube.com/watch?v=vjBs07kgjq0) & [HTMLBars (Github)](https://github.com/tildeio/htmlbars)\r\n* [POJOs vs. Ember Objects](http://www.youtube.com/watch?v=h4w7ZqCk0zg)\r\n* [Ember without Ember Data - Robin Ward (May 2014)](https://www.youtube.com/watch?v=7twifrxOTQY)\r\n* [A Tale of Two MVCs - Yehuda Katz (GoGaRuCo 2013)](http://www.youtube.com/watch?v=s1dhXamEAKQ)\r\n\r\n#### JAVASCRIPT - EMBER.JS - EMBER-CLI\r\n\r\n* [Ember-cli](http://www.ember-cli.com/)\r\n* [Intro to Ember Object and Ember CLI - Brian Cardarella (San Diego JS)](https://www.youtube.com/watch?v=_DYgLKpc_2g)\r\n* [TodoMVC in Ember CLI - Ryan LaBouve](https://www.youtube.com/watch?v=tonV3G2cPrA)\r\n* [Rails + Ember.js + ember-cli = ♥ - Robert Jackson (Burlington Ruby Conference 2014)](http://vimeo.com/103608308)\r\n\r\n#### JAVASCRIPT - EMBER.JS - EMBER DATA\r\n\r\n* [Ember Data (Github)](https://github.com/emberjs/data)\r\n* [Ember Models Guide](http://emberjs.com/guides/models/)\r\n* [Custom Adapters for Ember Data - Jeffrey Biles](http://www.youtube.com/watch?v=a3KGITKNbeQ) & [Switching to Ember Data](http://www.youtube.com/watch?v=i1Qzaf6lV1Q) & [Much Very Confused: Ember for the inappropriately experienced](http://www.youtube.com/watch?v=DVwzN6kTc1c)\r\n* [Ember Data: Tips, Tricks, & Lessons Learned - Chris Oei](https://www.youtube.com/watch?v=HL2bMjndviE)\r\n\r\n#### JAVASCRIPT - EMBER.JS - FASTBOOT\r\n\r\n* [Fastboot (Github)](https://github.com/tildeio/ember-cli-fastboot)\r\n* [Inside FastBoot: The Road to Server-Side Rendering - Yehuda Katz and Tom Dale](http://emberjs.com/blog/2014/12/22/inside-fastboot-the-road-to-server-side-rendering.html)\r\n\r\n#### JAVASCRIPT - EMBER.JS - GLIMMER (RENDERING ENGINE)\r\n\r\n* [Inside Glimmer: What Makes Ember's Rendering Engine Tick - Tom Dale (Full Stack Fest 2015)](https://www.youtube.com/watch?v=VY-r7Ac06ho)\r\n* [Glimmer demo](https://dbmonster.firebaseapp.com/)\r\n\r\n#### JAVASCRIPT - EMBER.JS - HTMLBARS\r\n\r\n* [HTMLBars - Erik Bryn](http://talks.erikbryn.com/htmlbars/#/)\r\n* [HTMLBars](https://github.com/tildeio/htmlbars)\r\n\r\n#### JAVASCRIPT - EMBER.JS - TESTING\r\n\r\n* [Testing Your Ember Applications - Eric Berry](https://www.youtube.com/watch?v=GRT5YcXmm7E)\r\n* [EmberScript](http://emberscript.com/)\r\n* [QUnit](http://qunitjs.com/)\r\n\r\n#### JAVASCRIPT - EMBER.JS - VIDEO\r\n\r\n* [EmberConf 2016 videos](http://confreaks.tv/events/emberconf2016)\r\n\r\n### JAVASCRIPT - FRAMEWORKS\r\n\r\n* [TodoMVC](http://todomvc.com/) & [Github](https://github.com/addyosmani/todomvc)\r\n\r\n### JAVASCRIPT - FUNCTIONAL PROGRAMMING\r\n\r\n* [Learning Functional Programming with JavaScript - Anjana Vakil (JSUnconf 2016)](https://www.youtube.com/watch?v=e-5obm1G_FY)\r\n* [Functional programming in JavaScript - Mattias Petter Johansson](https://www.youtube.com/playlist?list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84)\r\n* [Functional Javascript - Dr. Gleb Bahmutov](https://glebbahmutov.com/blog/tags/functional/)\r\n* [Functional Layout - Updating the DOM at 60FPS - David Valdman (JS Conf EU 2015)](http://confreaks.tv/videos/jsconfeu2015-functional-layout-updating-the-dom-at-60fps)\r\n* [Functional programming and curry cooking in JS - Stefanie Schirmer (JS Conf EU 2015)](http://confreaks.tv/videos/jsconfeu2015-functional-programming-and-curry-cooking-in-js)\r\n* Professor Frisby's Mostly Adequate Guide to Functional Programming: [Webpage](https://www.gitbook.com/download/pdf/book/drboolean/mostly-adequate-guide) | [Online](http://drboolean.gitbooks.io/mostly-adequate-guide/content/ch1.html) | [PDF](https://www.gitbook.com/download/pdf/book/drboolean/mostly-adequate-guide) | [ePUB](https://www.gitbook.com/download/epub/book/drboolean/mostly-adequate-guide) | [MOBI](https://www.gitbook.com/download/mobi/book/drboolean/mostly-adequate-guide)\r\n* [Introducing Reduce: Reducing an Array into an Object - Mykola Bilokonsky](https://egghead.io/lessons/javascript-introducing-reduce-reducing-an-array-into-an-object?pl=understand-how-to-use-reduce-e7bd12ab)\r\n* [We Will All Be Game Programmers - Hunter Loftis](https://www.youtube.com/watch?v=avwDj3KRuLc)\r\n\r\n#### JAVASCRIPT - FUNCTIONAL PROGRAMMING - CYCLE.JS\r\n\r\n* [Cycle.js](http://cycle.js.org/)\r\n* [Cycle.js Fundamentals](https://egghead.io/series/cycle-js-fundamentals)\r\n\r\n#### JAVASCRIPT - FUNCTIONAL PROGRAMMING - IMMUTABLE.JS\r\n\r\n* [Immutable.js](https://github.com/facebook/immutable-js)\r\n\r\n### JAVASCRIPT - FUNCTIONAL REACTIVE PROGRAMMING\r\n\r\n* [Functional Reactive Programming in JavaScript - Charanjit Singh (JSChannel 2015)](https://www.youtube.com/watch?v=SFPF56BB1Cs)\r\n* [Conquering Time with Functional Reactive Programming - Sergi Mansilla (Goto Amsterdam 2014)](https://www.youtube.com/watch?v=gT6il5fJyAs)\r\n* [React: Life Without MVC - Priyatam Mudivarti (Forward 3 Summit 2015)](http://forwardjs.com/university/react-life-without-mvc)\r\n* [End-to-End Reactive Programming at Netflix - Jafar Husain](http://www.infoq.com/presentations/reactive-programming-netflix)\r\n* [Why Prezi is betting on FRP - Péter Halácsy](http://forwardjs.com/university/why-prezi-is-betting-on-frp)\r\n* [Reactive All the Things - Martin Gontovnikas](http://forwardjs.com/university/reactive-all-the-things)\r\n\r\n#### JAVASCRIPT - FUNCTIONAL REACTIVE PROGRAMMING - BACON.JS\r\n\r\n* [Bacon.js](https://github.com/baconjs/bacon.js)\r\n* [Bacon.js - Functional Reactive Programming - Thomas Holmes (ATLRUG 2014)](https://www.youtube.com/watch?v=eFEvGS6pOWk)\r\n* [Functional Reactive Programming with Bacon.js](http://sean.voisen.org/blog/2013/09/intro-to-functional-reactive-programming/)\r\n* [Implementing Snake in Bacon.js](http://philipnilsson.github.io/badness/)\r\n\r\n#### JAVASCRIPT - FUNCTIONAL REACTIVE PROGRAMMING - Rx.JS\r\n\r\n* [Async JavaScript with Reactive Extensions - Jafar Husain (Netflix JavaScript Talks)](https://www.youtube.com/watch?v=XRYN2xt11Ek)\r\n* [RxJS Evolved - Paul Taylor (Reactive 2015)](https://www.youtube.com/watch?v=QhjALubBQPg)\r\n* [Reactive programming library for JavaScript (Github)](https://github.com/ReactiveX/RxJS) & [Website](https://rxjs.codeplex.com/)\r\n* [Intro to Functional Reactive Programming with RxJS - Florian Rappl](http://www.sitepoint.com/functional-reactive-programming-rxjs/)\r\n* [Intro to Reactive Programming](https://egghead.io/series/introduction-to-reactive-programming)\r\n* [Asynchronous JavaScript at Netflix - Matthew Podwysowski (JSConf Budapest)](https://www.youtube.com/watch?v=a8W5VVGO-jA)\r\n* [A Better JavaScript for the Ambient Computing Era](https://www.youtube.com/watch?v=BnwFYJDes1c)\r\n* [Rx Book - Denis Stoyanov](http://xgrommx.github.io/rx-book/)\r\n* [RxJS for Metrics & Music - Ian Hansen](https://www.youtube.com/watch?v=2btEt0W7UxU)\r\n\r\n### JAVASCRIPT - FUNDAMENTAL CONCEPTS\r\n\r\n* [Common JavaScript “Gotchas”](http://www.jblotus.com/2013/01/13/common-javascript-gotchas/)\r\n* [Understanding JavaScript Function Invocation and 'this' (Yehuda Katz)](http://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/)\r\n* [Preparing Yourself for Modern JavaScript Development](http://www.codethinked.com/preparing-yourself-for-modern-javascript-development)\r\n* [Prototypes and Inheritance in JavaScript](http://msdn.microsoft.com/en-us/magazine/ff852808.aspx)\r\n* [1024+ Seconds of JS Wizardry - Martin Kleppe (JSConf.eu 2013)](http://2013.jsconf.eu/speakers/martin-kleppe-1024-seconds-of-js-wizardry.html)\r\n* [The JavaScript Interpreter, Interpreted - Martha Girdler (JSConf.eu 2013)](http://2013.jsconf.eu/speakers/martha-girdler-the-javascript-interpreter-interpreted.html)\r\n* Advanced JavaScript Fundamentals - Core Language: [1) Math](https://www.youtube.com/watch?v=awP_QQQk_Nc) | [2) Date](https://www.youtube.com/watch?v=fWNBWhhX94s) | [3) Advanced Functions](https://www.youtube.com/watch?v=Up-Qlrsn2Gw) | [4) Arrays](https://www.youtube.com/watch?v=tnYTkhfdH1g) | [5) Creating Custom Objects](https://www.youtube.com/watch?v=JEJjbi5iqjc) | [6) Functions as Objects](https://www.youtube.com/watch?v=3U5uZknN9BQ) | [7) DOM Keyboard Events](https://www.youtube.com/watch?v=D7YWWe_Kw98) | [8) DOM Scripting Forms](https://www.youtube.com/watch?v=3cddNKVjlbA) | [9) Browser Features: XMLHttpRequest](https://www.youtube.com/watch?v=378eymwEfeA) | [10) Browser Features: JSON](https://www.youtube.com/watch?v=uXbL85IkwJ0) | [11) Browser Features: Local Storage](https://www.youtube.com/watch?v=Sd362eN5mDY) | [12) Debugging: Error Handling](https://www.youtube.com/watch?v=40teharRCOw)\r\n* JavaScript Fundamentals 101: [20) Event Delegation](https://www.youtube.com/watch?v=F7FFhsHz0ew)\r\n* [Javascript: Understanding the Weird Parts - The First 3.5 Hours - Tony Alicea](https://www.youtube.com/watch?v=Bv_5Zv5c-Ts)\r\n\r\n### JAVASCRIPT - GRUNT (AUTOMATED TASK RUNNER)\r\n\r\n* [Grunt](http://gruntjs.com/)\r\n\r\n### JAVASCRIPT - HAMMER.JS (FOR TOUCH GESTURES)\r\n\r\n* [Hammer.js](http://hammerjs.github.io/)\r\n\r\n### JAVASCRIPT - JQUERY\r\n\r\n* [Official documentation](http://docs.jquery.com/)\r\n* [Official API](http://api.jquery.com/)\r\n* [Zero to Hero with jQuery - Microsoft Virtual Academy (Jumpstart)](https://www.youtube.com/watch?v=ELRNFtFxIs8)\r\n* [Youtube.com/jquery](http://www.youtube.com/jquery)\r\n* [Exterminating Common JQuery bugs](http://confreaks.tv/videos/992-jqcon2012-exterminating-common-jquery-bugs)\r\n* [Tutorials (JQuery.com)](http://docs.jquery.com/Tutorials)\r\n* [14 Days of JQuery](http://jquery14.com/)\r\n* [TutorialsPoint.com](http://www.tutorialspoint.com/jquery/)\r\n\r\n### JAVASCRIPT - MACHINE LEARNING\r\n\r\n* Encog: [tutorial](http://www.codeproject.com/Articles/477689/JavaScript-Machine-Learning-and-Neural-Networks-wi), [examples](http://www.heatonresearch.com/fun), [Github](https://github.com/encog/encog-javascript)\r\n\r\n### JAVASCRIPT - MEMORY/GARBAGE COLLECTION\r\n\r\n* [Garbage Collection & Heap Management - Ryan Sandor Richards (Scotland.js 2012)](http://vimeo.com/45140516)\r\n\r\n### JAVASCRIPT - METEOR.JS\r\n\r\n* [Meteor.js](https://www.meteor.com/)\r\n* [Meteor -Web Development Like You've Never Seen - Matt Debergalis (QCon 2013)](http://www.infoq.com/presentations/meteor-web)\r\n\r\n### JAVASCRIPT - MONITORING\r\n\r\n* [Spy-JS.com (JavaScript tracing tool)](https://github.com/spy-js/spy-js)\r\n\r\n### JAVASCRIPT - PACKAGE MANAGERS (CURRENTLY A HUGE PITA)\r\n\r\n* [Bower](http://twitter.github.com/bower/) [Github](https://github.com/twitter/bower)\r\n* [JamJS](http://jamjs.org/) [Github](https://github.com/caolan/jam)\r\n* [Require.js](http://requirejs.org/)\r\n\r\n### JAVASCRIPT - PERFORMANCE\r\n\r\n* [Breaking the Broken Web - Kyle Simpson (Forward 3 Summit 2015)](http://forwardjs.com/university/breaking-the-broken-web)\r\n\r\n### JAVASCRIPT - PLAYGROUND\r\n\r\n* [JSBin.com](http://jsbin.com/welcome/1/edit)\r\n* [JSFiddle.net](http://jsfiddle.net/)\r\n\r\n### JAVASCRIPT - PRODUCTIVITY TOOLS\r\n\r\n* [Yeoman](http://yeoman.io/packagemanager.html)\r\n\r\n### JAVASCRIPT - PROMISES\r\n\r\n* [JavaScript Promises: There and Back Again - Jake Archibald](http://www.html5rocks.com/en/tutorials/es6/promises/)\r\n* [You're Missing the Point of Promises - Domenic Denicola](https://blog.domenic.me/youre-missing-the-point-of-promises/)\r\n\r\n### JAVASCRIPT - REACT.JS\r\n\r\n* [Hackr.io React resource list](https://hackr.io/tutorials/react)\r\n* [Getting Started](https://facebook.github.io/react/docs/getting-started.html) | [Thinking in React](https://facebook.github.io/react/docs/thinking-in-react.html) | [Tutorial](https://facebook.github.io/react/docs/tutorial.html)\r\n* [React + Redux + Webpack videos - Kurt Weiberth](https://www.youtube.com/playlist?list=PLQDnxXqV213JJFtDaG0aE9vqvp6Wm7nBg)\r\n* [Intro to Webpack, ES6, Babel, React, React-Router, Redux, and React-Redux - Brad Westfall](https://www.youtube.com/watch?v=DfRibIkjhew)\r\n* [React tutorial series - LearnCode.academy](https://www.youtube.com/watch?v=MhkGQAoc7bc&list=PLoYCgNOIyGABj2GQSlDRjgvXtqfDxKm5b)\r\n* [Thinking in React - Pete Hunt](https://facebook.github.io/react/docs/thinking-in-react.html)\r\n* [Advanced tutorial on how React is implemented - Dan Abramov](https://facebook.github.io/react/contributing/implementation-notes.html)\r\n* Learn React, Flux, and Flow - Colin Megill: [Part 1](https://www.youtube.com/watch?v=Pd6Ub7Ju2RM) | [Part 2](https://www.youtube.com/watch?v=iR22EWW-CVc)\r\n* [React Tutorial - Hackerati.us](https://www.gitbook.com/book/hackerati/react-tutorial/details)\r\n* [React and Flux: Building Applications with a Unidirectional Data Flow - Bill Fisher and Jing Chen (Forward.JS 2014)](https://www.youtube.com/watch?v=i__969noyAM)\r\n* [Secrets of the Virtual DOM - Pete Hunt (Barcelona Future Javascript)](https://www.youtube.com/watch?v=-DX3vJiqxm4)\r\n* [React and Rails](http://rny.io/rails/react/2014/07/31/reactjs-and-rails.html)\r\n* [React & Flux - Christian Lilley (JSChannel 2015)](http://confreaks.tv/videos/jschannelconf2015-react-flux)\r\n\r\n#### JAVASCRIPT - REACT.JS - JSX\r\n\r\n* [JSX in Depth](https://facebook.github.io/react/docs/jsx-in-depth.html)\r\n\r\n#### JAVASCRIPT - REACT.JS - REACT NATIVE\r\n\r\n* [React Native](https://facebook.github.io/react-native/)\r\n\r\n#### JAVASCRIPT - REACT.JS - VIDEOS\r\n\r\n* [React.js Conf 2015](https://www.youtube.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\r\n\r\n### JAVASCRIPT - REDUX\r\n\r\n* [Intro to Redux - Alex Bachux](https://www.smashingmagazine.com/2016/06/an-introduction-to-redux/)\r\n* [The Problem with Redux... And How to Fix It - Matthew Gertner](http://blog.javascripting.com/2016/05/21/the-problem-with-redux-and-how-to-fix-it/)\r\n* [redux-elm: The Elm Architecture in JavaScript - Matthew Gertner](https://github.com/salsita/redux-el://github.com/salsita/redux-elm) | [online book of example code](http://salsita.github.io/redux-elm/)\r\n\r\n### JAVASCRIPT - TESTING\r\n\r\n* [Zero to Testing in Javascript - Pamela Selle (QConn New York 2014)](http://www.infoq.com/presentations/tdd-javascript-2014)\r\n* [Testing Javascript/Coffeescript - Mark Bates](http://www.youtube.com/watch?v=x74ANVOAnKw)\r\n* [Javascript testing - Ruby-Toolbox](https://www.ruby-toolbox.com/categories/javascript_testing)\r\n* [Konacha gem (Mocha + Chai)](https://github.com/jfirebaugh/konacha)\r\n* [Front-end Testing for Skeptics - Luke Francl (RailsConf 2013)](http://confreaks.tv/videos/2437-railsconf2013-front-end-testing-for-skeptics)\r\n* [Testing Your JavaScript/CoffeeScript - Mark Bates - Part 1 (Setting Up)](http://www.informit.com/articles/printerfriendly.aspx?p=1925618) & [Part 2 (Writing Tests)](http://www.informit.com/articles/printerfriendly.aspx?p=1930036)\r\n* [Using Capybara to test JavaScript that makes HTTP requests](http://robots.thoughtbot.com/post/34761570235/using-capybara-to-test-javascript-that-makes-http)\r\n* [Javascript Testing Tactics - Justin Searls](http://blog.testdouble.com/posts/2014-05-09-javascript-testing-tactics-lightning-edition.html)\r\n\r\n#### JAVASCRIPT - TESTING - INTERN\r\n\r\n* Intern: [TheIntern.io](http://theintern.io/) & [Github](https://github.com/theintern/intern)\r\n\r\n#### JAVASCRIPT - TESTING - JASMINE\r\n\r\n* [Jasmine](http://pivotal.github.com/jasmine/)\r\n* [Unit Testing in JavaScript via Jasmine - Jesse Warden](http://www.youtube.com/watch?v=eVpXkyN0zOE)\r\n* [Test-Driving Javascript with Jasmine - Tim Tyrrell (AustinJS)](http://www.youtube.com/watch?v=CswgfGhnTg8)\r\n* [75-minute Justin Searls screencast (non-standard; uses jasmine-fixture, jasmine-given & jasmine-stealth)](http://searls.testdouble.com/posts/2013-03-21-jasmine-tactics-screencast.html)\r\n\r\n#### JAVASCRIPT - TESTING - QUNIT\r\n\r\n* [QUnit](http://qunitjs.com)\r\n\r\n#### JAVASCRIPT - TESTING - SINON.JS\r\n\r\n* [Sinon.js](http://sinonjs.org/)\r\n\r\n### JAVASCRIPT - TOOLS\r\n\r\n* [CreateJS (Javascript libraries & tools for building rich, interactive experiences with HTML5)](http://createjs.com/)\r\n\r\n### JAVASCRIPT - VIDEOS\r\n\r\n* [FunFunFunction](https://www.youtube.com/playlist?list=PL0zVEGEvSaeFSwPn06GKArptSxiP1Gff8)\r\n* [JS Remote Conf 2015](https://www.youtube.com/watch?v=sIWekh32LG4&list=PLt8NYnKC3dzL95z5xksIZHxFjErPlC3Xq)\r\n* [JS Conf EU 2015](http://confreaks.tv/events/jsconfeu2015)\r\n\r\n### JAVSCRIPT - WEB SCRAPING\r\n\r\n* [JavaScript Web Scraping - Gregory Petukhov](https://github.com/lorien/awesome-web-scraping/blob/master/javascript.md)\r\n* [Web scraping with JavaScript - Igor Savinkin](http://scraping.pro/web-scraping-with-javascript-load-html-page/)\r\n* [Artoo.js: client-side scraping companion](https://medialab.github.io/artoo/)\r\n\r\n## JEKYLL\r\n\r\n* Jekyll: [Main](http://jekyllrb.com/) | [Docs](http://jekyllrb.com/docs/home/) | [Tips](http://jekyll.tips/) | [Twitter](https://twitter.com/jekyllrb) | [News](http://jekyllrb.com/news/) | [Talk](http://talk.jekyllrb.com/) | [Github](https://github.com/jekyll/jekyll)\r\n* [Jekyll Documentation - Tom Preston-Werner, Nick Quaranto, Parker Moore, et al](http://planetjekyll.github.io/book/)\r\n* [Planet Jekyll](http://planetjekyll.github.io/)\r\n* [Getting Started With Jekyll, The Static Site Generator - phpacademy](https://www.youtube.com/watch?v=iWowJBRMtpc)\r\n* [JekyllConf](https://www.youtube.com/results?search_query=jekyllconf)\r\n\r\n## JRUBY\r\n\r\n* [Headius (Charles Nutter)'s blog](http://blog.headius.com/)\r\n* [Why JRuby Works - Charles Nutter, Thomas Enebo (RubyConf 2012)](http://confreaks.tv/videos/1281-rubyconf2012-why-jruby-works)\r\n* [Why JRuby? - Charles Nutter (Aloha RubyConf 2012)](http://confreaks.tv/videos/1235-aloharuby2012-why-jruby) & [slides](http://www.slideshare.net/CharlesNutter/aloha-rubyconf-2012-jruby)\r\n* [RubyGems to All JVM Languages - Yoko Harada (RubyConf 2010)](http://www.confreaks.tv/videos/372-rubyconf2010-rubygems-to-all-jvm-languages)\r\n* [Why JRuby? (Fiona Tay)](http://www.confreaks.tv/videos/2312-larubyconf2013-why-i-like-jruby-and-you-should-too)\r\n* [JRuby: Ruby in the JVM. Why on Earth?!? - Chris McCann](http://www.sdruby.org/podcast/106)\r\n* [State of JRuby 2014 - Hiro Asari (Ruby Australia)](http://vimeo.com/90823948)\r\n\r\n### JRUBY - JRUBY 9000\r\n\r\n* [Keynote: JRuby 9k - Thomas Enebo & Charles Nutter (JRubyConf.eu 2015)](http://confreaks.tv/videos/jrubyconf2015-keynote-jruby-9k)\r\n* [JRuby 9000 - Charles Nutter, Thomas Enebo (RubyConf 2014)](http://confreaks.tv/videos/5017-RubyConf2014-jruby-9000)\r\n\r\n### JRUBY - PERFORMANCE\r\n\r\n* [High Performance Ruby - Charles Nutter (GoGaRuCo 2012)](http://confreaks.tv/videos/1113-gogaruco2012-high-performance-ruby)\r\n* [Deploy, Scale and Sleep at Night with JRuby - Joe Kutner (GoGaRuCo 2012)](http://confreaks.tv/videos/1118-gogaruco2012-deploy-scale-and-sleep-at-night-with-jruby)\r\n\r\n### JRUBY - TORQUEBOX\r\n\r\n* [Complex Made Simple: Sleep Better with TorqueBox - Lance Ball (RailsConf 2012)](http://confreaks.tv/videos/912-railsconf2012-complex-made-simple-sleep-better-with-torquebox)\r\n* [TorqueBox - Kevin Menard (BostonRB.org)](http://bostonrb.org/presentations/torquebox)\r\n\r\n## JULIA\r\n\r\n* [Julia: high-level, high-performance dynamic programming language for technical computing](http://julialang.org/)\r\n\r\n## KIDS\r\n\r\n* [Scratch](https://scratch.mit.edu/)\r\n* [Scratch Jr.](https://www.scratchjr.org/)\r\n* [Star Wars - Code.org](https://code.org/starwars)\r\n* [Minecraft - Code.org](https://code.org/mc)\r\n* [Free kids courses - Pluralsight.com](https://www.pluralsight.com/kids-courses)\r\n* [Pencilcode.net](http://pencilcode.net/)\r\n* [Free Code Camp](https://www.freecodecamp.com/map#nested-collapseBasicJavaScript)\r\n* [Tynker](https://www.tynker.com) (NOT FREE: [Access to everything requires a paid subscription](https://www.tynker.com/courses/))\r\n* [Cool Coding Apps and Websites for Kids - CommonsenseMedia.org](https://www.commonsensemedia.org/lists/coding-apps-and-websites)\r\n* [Coding for Kids: Free Websites That Teach Kids Programming](http://mommypoppins.com/coding-kids-free-websites-teach-learn-programming)\r\n\r\n## LEGAL\r\n\r\n* [ChooseALicense.com - Advice on selecting an open source license - Github](http://choosealicense.com/)\r\n* [Chart showing what each license allows and disallows - ChooseALicense.com & Github](http://choosealicense.com/appendix/)\r\n\r\n## LEARNING\r\n\r\n* [Learning How to Learn - Drs. Barbara Oakley & Terrence Sejnowski (Coursera)](https://www.coursera.org/learn/learning-how-to-learn/)\r\n* [Carnegie Mellon Open Learning Initiative](http://oli.cmu.edu/learn-with-oli/see-our-free-open-courses/)\r\n* [Coursera.org](https://www.coursera.org/)\r\n* [EdX.org](https://www.edx.org/)\r\n* [Khan Academy](https://www.khanacademy.org/)\r\n* [MIT OpenCourseware](http://ocw.mit.edu/index.htm)\r\n* [MOOC List](https://www.mooc-list.com/)\r\n* [National Programme on Technology Enhanced Learning (India)](https://onlinecourses.nptel.ac.in/explorer)\r\n* [No Excuse List (The best place on the web to learn anything, free)](http://www.noexcuselist.com/)\r\n* [Open Yale courses](http://oyc.yale.edu/courses)\r\n* [Stanford Engineering Everywhere](http://see.stanford.edu/see/courses.aspx)\r\n* [Stanford Open Classroom](http://openclassroom.stanford.edu/MainFolder/HomePage.php)\r\n* [TED Talks](http://www.ted.com/talks)\r\n* [TutsPlus](http://code.tutsplus.com/) (Non-free)\r\n* [UC Berkeley webcasts](http://webcast.berkeley.edu/series#c,s)\r\n* [Udacity](https://www.udacity.com/courses#!/all) (Lectures are free)\r\n* [Udemy](https://www.udemy.com/) (Non-free)\r\n\r\n## LINUX\r\n\r\n* [dotfiles.github.com](http://dotfiles.github.com/)\r\n* [Thoughtbot dotfiles](https://github.com/thoughtbot/dotfiles)\r\n* [Unixmen.com](http://www.unixmen.com/)\r\n* [Cheat Sheet (Cheatography)](http://www.cheatography.com/davechild/cheat-sheets/linux-command-line/)\r\n* [LESS](http://linux.die.net/man/1/less)\r\n* [Linux SCP help](http://www.hypexr.org/linux_scp_help.php)\r\n\r\n### LINUX - AWK\r\n\r\n* [Awk in 20 Minutes - Fred T-H](http://ferd.ca/awk-in-20-minutes.html)\r\n\r\n### LINUX - DEBIAN\r\n\r\n* [The Debian Administrator's Handbook - Raphaël Hertzog & Roland Mas](https://debian-handbook.info/browse/stable/index.html) & [PDF](https://debian-handbook.info/download/stable/debian-handbook.pdf)\r\n\r\n### LINUX - NETWORKING\r\n\r\nPeter R. Egli:\r\n  * [Data Networking Concepts](http://www.indigoo.com/dox/itdp/01_Intro/Data-Networking-Concepts.pdf)\r\n  * [Transport Protocols](http://www.indigoo.com/dox/itdp/02_Transport/Transport-Protocols.pdf)\r\n    * [TCP](http://www.indigoo.com/dox/itdp/02_Transport/TCP.pdf)\r\n    * [UDP](http://www.indigoo.com/dox/itdp/02_Transport/UDP.pdf)\r\n    * [SCTP](http://www.indigoo.com/dox/itdp/02_Transport/SCTP.pdf)\r\n  * [Network Sockets](http://www.indigoo.com/dox/itdp/03_Sockets/Sockets.pdf)\r\n  * [Email](http://www.indigoo.com/dox/itdp/04_Email/Email.pdf)\r\n  * [Comet, HTML5, Websockets](http://www.indigoo.com/dox/itdp/05_WWW/Comet-WebSockets-HTML5.pdf)\r\n  * [HTTP / HTML / WWW](http://www.indigoo.com/dox/itdp/05_WWW/HTTP-HTML-Web.pdf)\r\n  * [DNS](http://www.indigoo.com/dox/itdp/06_DNS/DNS.pdf)\r\n  * [DNSSEC](http://www.indigoo.com/dox/itdp/06_DNS/DNSSEC.pdf)\r\n  * [FTP](http://www.indigoo.com/dox/itdp/07_FTP-TFTP/FTP.pdf)\r\n  * [RARP, BOOTP, DHCP](http://www.indigoo.com/dox/itdp/08_DHCP/RARP-BOOTP-DHCP.pdf)\r\n  * [Internet Security](http://www.indigoo.com/dox/itdp/10_Security/Internet-Security.pdf)\r\n  * [VPN](http://www.indigoo.com/dox/itdp/11_VPN/VPN.pdf)\r\n  * [Mobile & Wireless Networks](http://www.indigoo.com/dox/itdp/12_MobileWireless/Mobile-Wireless-Networks.pdf)\r\n  * [Internet Organization](http://www.indigoo.com/dox/itdp/13_Management&Backbone/Internet-Organization.pdf)\r\n  * [QoS](http://www.indigoo.com/dox/itdp/13_Management&Backbone/QoS.pdf)\r\n  * [IP Routing](http://www.indigoo.com/dox/itdp/15_IPv4&IPv6/IP-Routing.pdf)\r\n  * [IPv6](http://www.indigoo.com/dox/itdp/15_IPv4&IPv6/IPv6.pdf)\r\n  * [SSH](http://www.indigoo.com/dox/itdp/16_Telnet&SSH/SSH.pdf)\r\n  * [Telnet](http://www.indigoo.com/dox/itdp/16_Telnet&SSH/TELNET.pdf)\r\n  * [STP & RSTP](http://www.indigoo.com/dox/itdp/17_LAN-Layer2/STP-RSTP.pdf)\r\n  * [Communication Middleware](http://www.indigoo.com/dox/wsmw/1_Middleware/Communication-Middleware.pdf)\r\n  * [Cloud Computing](http://www.indigoo.com/dox/wsmw/1_Middleware/Cloud-Computing.pdf)\r\n  * [JSON-RPC](http://www.indigoo.com/dox/wsmw/1_Middleware/JSON-RPC.pdf)\r\n  * [REST](http://www.indigoo.com/dox/wsmw/2_WebServices/REST.pdf)\r\n  * [Web Services](http://www.indigoo.com/dox/wsmw/2_WebServices/Web-Services.pdf)\r\n  * [Android NDK](http://www.indigoo.com/dox/mobdev/01_Android/Android-NDK.pdf)\r\n* [Ping! Are you there? - Lydia Gu (!!Con 2016)](https://www.youtube.com/watch?v=nSB53WRGY_0)\r\n\r\n#### LINUX - NETWORKING - SOCAT\r\n\r\n* [Documentation (man page)](http://www.dest-unreach.org/socat/doc/socat.html)\r\n* [HOWTO: Crafting arbitrary network packets with socat - Julian Oliver](https://discourse.criticalengineering.org/t/howto-crafting-arbitrary-network-packets-with-socat/51)\r\n* [Socat: A very powerful networking tool - Jesus Castello](https://www.blackbytes.info/2012/07/socat-cheatsheet/)\r\n* [Hands-on learning about network protocols using socat - Volker Schatz](http://www.volkerschatz.com/net/socatproc.html)\r\n* [Securing Traffic Between two Socat Instances Using SSL - Gerhard Rieger](http://www.dest-unreach.org/socat/doc/socat-openssltunnel.html)\r\n\r\n### LINUX - SHELL SCRIPTING (BASH)\r\n\r\n* [Advanced Bash Scripting Guide](tldp.org/LDP/abs/abs-guide.pdf)\r\n* [Bash Hackers Wiki](http://wiki.bash-hackers.org/doku.php)\r\n* [Bash Koans - Marcin Bunsch](https://github.com/marcinbunsch/bash_koans)\r\n* [Better Bash Scripting in 15 Minutes - Robert Muth](http://robertmuth.blogspot.com/2012/08/better-bash-scripting-in-15-minutes.html)\r\n* [Bash Reference Manual](https://www.gnu.org/software/bash/manual/bash.pdf)\r\n* [Command Line Fu](http://www.commandlinefu.com/commands/browse/sort-by-votes)\r\n* [Greg Wooledge's Wiki](http://mywiki.wooledge.org/)\r\n* [Linux Bash Scripting](linux1.ca/docs/Linux_BASH_Scripting.pdf)\r\n* [The Linux Command Line: A Complete Introduction (PDF)](http://sourceforge.net/projects/linuxcommand/files/TLCL/13.07/TLCL-13.07.pdf/download) & [website](http://www.linuxcommand.org/tlcl.php)\r\n* [Linux Shell Scripting Cookbook](http://www.pdf-archive.com/2011/03/26/linux-shell-scripting-cookbook/linux-shell-scripting-cookbook.pdf)\r\n* [Linux Shell Scripting Tutorial](http://www.dis.uniroma1.it/~bordino/shell-tutorial.pdf)\r\n* [The Art of Command Line - Joshua Levy](https://github.com/jlevy/the-art-of-command-line/blob/master/README.md)\r\n* [Writing Robust Bash Shell Scripts - David Pashley](http://www.davidpashley.com/articles/writing-robust-shell-scripts/)\r\n\r\n#### LINUX - SHELL SCRIPTING (BASH) - BATS (BASH AUTOMATED TEST SYSTEM)\r\n\r\n* [Bash Automated Test System (BATS)](https://github.com/sstephenson/bats) & [tutorial](https://blog.engineyard.com/2014/bats-test-command-line-tools)\r\n* [How to use Bats to test your command line tools - Ross Duggan](https://blog.engineyard.com/2014/bats-test-command-line-tools?eymktci=70170000000hHEC)\r\n\r\n### LINUX - SYSTEM ADMINISTRATION\r\n\r\n* [Sysadmincasts.com](http://sysadmincasts.com/)\r\n\r\n### LINUX - UBUNTU\r\n\r\n* [UpUbuntu](http://www.upubuntu.com/)\r\n\r\n## LISP\r\n\r\n* The Structure and Interpretation of Computer Programs - Hal Abelson & Gerald Jay Sussman: [Video lectures](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures) | [online book](https://mitpress.mit.edu/sicp/full-text/book/book.html) | [PDF](http://web.mit.edu/alexmv/6.037/sicp.pdf)\r\n\r\n## MACHINE LEARNING & AI\r\n\r\n* [OpenAI Gym](https://gym.openai.com/) | [Github](https://github.com/openai/gym)\r\n* [What did AlphaGo do to beat the strongest human Go player? - Tobias Pfeiffer (Full Stack Fest 2016)](https://www.youtube.com/watch?v=b9H9AtbxpPM) | [slides PDF](https://pragtob.files.wordpress.com/2016/09/full_stack_fest.pdf) | [slides Speakerdeck](https://speakerdeck.com/pragtob/what-did-alphago-do-to-beat-the-strongest-human-go-player-1) | [slides Slideshare](http://www.slideshare.net/PragTob/what-did-alphago-do-to-beat-the-strongest-human-go-player)\r\n* [Un-Artificial Intelligence - Melinda Seckington (GoRuCo 2015)](https://www.youtube.com/watch?v=7Y1Bv2BJDLs)\r\n* [Machine Learning (online Coursera class with Stanford professor Andrew Ng)](https://www.coursera.org/learn/machine-learning)\r\n* [Machine Learning (online course from University of Oxford](https://www.cs.ox.ac.uk/people/nando.defreitas/machinelearning/)\r\n* [Intro to Machine Learning: Pattern Recognition for Fun and Profit - Sebastian Thrun and Katie Malone (Udacity)]()\r\n* [Neural Networks for Machine Learning - Geoffrey Hinton (University of Toronto)](https://www.coursera.org/course/neuralnets)\r\n* [Artificial Intelligence (online EdX.org class from UC Berkeley)](https://www.edx.org/course/uc-berkeleyx/uc-berkeleyx-cs188-1x-artificial-579)\r\n* [MLOSS.org (Machine Learning Open Source Software)](http://mloss.org/software/)\r\n* [KD Nuggets](http://www.kdnuggets.com/)\r\n* [Artificial Stupidity: Adding Smarts to Yer Kode - Randall Thomas](http://www.sdruby.org/podcast/79)\r\n* [Weathering the Data Storm - Claudia Perlich (QConn New York 2014)](http://www.infoq.com/presentations/display-advertising-big-data)\r\n* [Google DeepMind: What is it, how does it work and should you be scared? - Sam Shead](http://www.techworld.com/personal-tech/google-deepmind-what-is-it-how-it-works-should-you-be-scared-3615354/)\r\n\r\n## MACHINE LEARNING & AI - VIDEOS\r\n\r\n* [The Future of Artificial Intelligence - DeepMind CEO Demis Hassabis](https://www.youtube.com/watch?v=4fjmnOQuqao)\r\n\r\n## MAIL SERVER\r\n\r\n### MAIL SERVER - DIAGNOSTICS\r\n\r\n* [MXToolbox.com](http://mxtoolbox.com/SuperTool.aspx)\r\n* [SenderBase.org](http://www.senderbase.org/)\r\n* [SURBL](http://www.surbl.org/surbl-analysis)\r\n* [spamDBLookup](https://www.ultratools.com/tools/spamDBLookup)\r\n* [emailTestResult](https://www.ultratools.com/tools/emailTestResult)\r\n* [DNSStuff tools](http://www.dnsstuff.com/tools)\r\n* [EmailTalk.org](http://www.emailtalk.org/MailServerConfig.aspx)\r\n* [Getting delisted by Microsoft (which will list you for absolutely no reason)](http://community.spiceworks.com/how_to/show/67285-getting-delisted-by-microsoft-delist-messaging-microsoft-com)\r\n\r\n## MAKER MOVEMENT\r\n\r\n* [Adafruit](https://learn.adafruit.com/)\r\n* [CardboardChallenge](http://cardboardchallenge.com/)\r\n* [DIY.org](https://diy.org/)\r\n* [DS106.us](http://ds106.us/)\r\n* [Exploratorium](http://tinkering.exploratorium.edu/) & [blog](http://tinkering.exploratorium.edu/blog)\r\n* [GlassLabGames](http://www.glasslabgames.org/)\r\n* [Howtoons](http://www.howtoons.com/)\r\n* [Instructables.com](http://www.instructables.com/)\r\n* [Little Bits (non-free)](http://littlebits.cc/)\r\n* [Make magazine](http://makezine.com/)\r\n* [Make/Hack/Play together](http://academy.nmc.org/course/make-hack-play/)\r\n* [MakerEd.org](http://makered.org/)\r\n* [Maker Faire](http://makerfaire.com/)\r\n* [MakerSpace](http://makerspace.com/)\r\n* [MakeyMakey (non-free)](http://makeymakey.com/)\r\n* [MIT Lifelong Kindergarten](https://llk.media.mit.edu/)\r\n* [Soft circuits](http://alumni.media.mit.edu/~emme/guide.pdf)\r\n* [Sparkfun](https://learn.sparkfun.com/resources)\r\n* [Thingiverse](http://www.thingiverse.com/)\r\n* [Young Makers](http://youngmakers.org/)\r\n\r\n### MAKER MOVEMENT - ARTICLES\r\n\r\n* [Maker Movement Reinvents Education (Newsweek](http://www.newsweek.com/2014/09/19/maker-movement-reinvents-education-268739.html)\r\n* [The Maker movement makes its mark (USA Today)](http://www.usatoday.com/story/tech/2014/08/04/the-maker-movement-makes-its-mark/13567521/)\r\n\r\n### MAKER MOVEMENT - JASPER\r\n\r\n* [Jasper: Open-source platform for developing always-on, voice-controlled applications](http://jasperproject.github.io/)\r\n* [Info/documentation](https://github.com/jasperproject/jasperproject.github.io)\r\n* [Client](https://github.com/jasperproject/jasper-client)\r\n\r\n### MAKER MOVEMENT - RASPBERRY PI\r\n\r\n* [Raspberry Pi Resources](https://www.raspberrypi.org/resources/)\r\n* [Official Rasperry Pi Projects Book](https://www.raspberrypi.org/magpi-issues/Projects_Book_v1.pdf)\r\n\r\n## MATH\r\n\r\n* [BetterExplained.com](http://betterexplained.com/cheatsheet/)\r\n* [Immersive Math - Jacob Ström, Kalle Åström, and Tomas Akenine-Möller](http://immersivemath.com/ila/learnmore.html)\r\n\r\n## MISCELLANEOUS\r\n\r\n* [AirConf 2014](http://www.airpair.com/airconf2014)\r\n* [List of Programming Screencast Series - Avdi Grimm](http://devblog.avdi.org/2013/06/21/a-list-of-programming-screencast-series/)\r\n* [Metacasts.tv (non-free) - Mark Bates](http://www.metacasts.tv)\r\n\r\n## MOBILE\r\n\r\n* [Web Fundamentals: Best practices for great multi-device web experiences - Udacity + Google](https://developers.google.com/web/fundamentals/)\r\n* [App Developers' Conference](http://www.youtube.com/playlist?list=PL14804B7FA696ACA0&feature=plcp)\r\n* [Fast WebView Applications](http://maxogden.com/fast-webview-applications.html) & [Building WebView Applications](http://maxogden.com/building-webview-applications.html)\r\n* [Would you like a Mobile App with That?](http://schneems.com/post/33781154129/would-you-like-a-mobile-app-with-that)\r\n\r\n### MOBILE - ANDROID DEVELOPMENT\r\n\r\n* [Android Bootcamp Series 2012](http://www.youtube.com/playlist?list=PLE08A97D36D5A255F&feature=plcp)\r\n\r\n### MOBILE - CROSS-PLATFORM DEVELOPMENT\r\n\r\n* [Cordova](http://cordova.apache.org/)\r\n* [Ionic Framework](http://ionicframework.com/)\r\n* [PhoneGap](http://phonegap.com/)\r\n\r\n### MOBILE - iOS DEVELOPMENT\r\n\r\n* [Building iOS Apps With RubyMotion - Ray Hightower (Aloha RubyConf 2012)](http://confreaks.tv/videos/1245-aloharuby2012-building-ios-apps-with-rubymotion)\r\n* [RubyMotion: Native iOS Apps in Ruby - James Miller](http://www.sdruby.org/podcast/122)\r\n* [Inside RubyMotion - Rich Kilmer (RubyConf 2012)](http://confreaks.tv/videos/1298-rubyconf2012-inside-rubymotion)\r\n* [RubyMotion: Rubyizing iOS development - Amit Kumar (GoGaRuCo 2012)](http://confreaks.tv/videos/1124-gogaruco2012-rubymotion-rubyizing-ios-development)\r\n* [RubyMotion: Ruby in your pocket - Laurent Sansonetti (CascadiaRuby 2012)](http://confreaks.tv/videos/1076-cascadiaruby2012-rubymotion-ruby-in-your-pocket)\r\n\r\n### MOBILE - CROSS-DEVICE TESTING\r\n\r\n* [Bunyip](http://ryanseddon.github.com/bunyip/)\r\n* Grunt: [Intro](http://weblog.bocoup.com/introducing-grunt/) | [Github](https://github.com/gruntjs/grunt) | [Getting Started](https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md)\r\n\r\n## MONGODB\r\n\r\n* [Manual](http://docs.mongodb.org/manual/)\r\n* [Video presentations](https://www.mongodb.com/presentations/all)\r\n* [Planet MongoDB](https://planet.mongodb.org/)\r\n* [MongoDb Blog](http://www.mongodb.com/blog)\r\n* [StackOverflow](http://stackoverflow.com/questions/tagged/mongodb)\r\n\r\n## NEWS\r\n\r\n### NEWS - EDUCATION\r\n\r\n* [EdSurge](https://www.edsurge.com/)\r\n\r\n### NEWS - HARDWARE\r\n\r\n* [Hot Hardware](http://hothardware.com/)\r\n\r\n### NEWS - PROGRAMMING\r\n\r\n* [Application Development Trends](https://adtmag.com)\r\n* [Computerworld](http://www.computerworld.com/)\r\n* [Dr. Dobb's](http://www.drdobbs.com/)\r\n* [DZone](https://dzone.com/)\r\n* [Enterprise Apps Today](http://www.enterpriseappstoday.com/)\r\n* [Huffington Post](http://www.huffingtonpost.com/news/computer-programming/)\r\n* [I Programmer](http://www.i-programmer.info/)\r\n* [InfoQ](http://www.infoq.com/news/)\r\n* [InfoStor](http://www.infostor.com/)\r\n* [InfoWorld](http://www.infoworld.com/)\r\n* [IT World](http://www.itworld.com/)\r\n* [Programmable Web](http://www.programmableweb.com/)\r\n* [The Register](http://www.theregister.co.uk/software/)\r\n* ScienceDaily: [Computer programming](http://www.sciencedaily.com/news/computers_math/computer_programming/) | [Hacking](http://www.sciencedaily.com/news/computers_math/hacking/) | [Software](http://www.sciencedaily.com/news/computers_math/software/)\r\n* [Software Development Times](http://sdtimes.com/)\r\n* [Sitepoint](http://www.sitepoint.com/)\r\n\r\n### NEWS - SCIENCE\r\n\r\n* [Aeon](https://aeon.co/science)\r\n* [Digital Journal](http://www.digitaljournal.com/science)\r\n* [Neuroscience News](http://neurosciencenews.com/neuroscience-topics/featured/)\r\n* [NOVA](http://www.pbs.org/wgbh/nova/)\r\n* [Phys.org](http://phys.org/)\r\n* [Quanta Magazine](https://www.quantamagazine.org)\r\n* [Science Daily](http://www.sciencedaily.com/)\r\n* [TED Science](http://www.ted.com/talks?topics[]=science)\r\n* [The Register](http://www.theregister.co.uk/science/)\r\n* [The Verge](http://www.theverge.com/science)\r\n* [Tumble Science Podcast For Kids](https://itunes.apple.com/us/podcast/tumble-science-podcast-for/id984771479)\r\n* [The Verge](http://www.theverge.com/science)\r\n* [Wired](http://www.wired.com/category/science)\r\n* [World Science Festival](http://www.worldsciencefestival.com/)\r\n\r\n### NEWS - SECURITY\r\n\r\n* [CNBC](http://www.cnbc.com/cybersecurity/)\r\n* [Infosecurity](http://www.infosecurity-magazine.com/news/)\r\n* [(In)Secure](http://www.net-security.org/)\r\n* [ReadWrite](http://readwrite.com/category/data-and-security/)\r\n* [The Register](http://www.theregister.co.uk/security/)\r\n\r\n### NEWS - TECH\r\n\r\n* [Aeon](http://aeon.co/magazine/technology/)\r\n* [Ars Technica](http://arstechnica.com/)\r\n* [Backchannel](https://backchannel.com/)\r\n* [BBC](http://www.bbc.com/news/technology)\r\n* [Bloomberg](http://www.bloomberg.com/technology)\r\n* [Business Insider](http://www.businessinsider.com/sai)\r\n* [CNBC](http://www.cnbc.com/technology/)\r\n* [Cnet](http://www.cnet.com/news/)\r\n* [CNN](http://www.cnn.com/TECH/)\r\n* [Digital Journal](http://www.digitaljournal.com/technology)\r\n* [Discovery](http://news.discovery.com/tech)\r\n* [Engadget](http://www.engadget.com/)\r\n* [Extreme Tech](http://www.extremetech.com/)\r\n* [Forbes](http://www.forbes.com/technology/)\r\n* [Future Tense (Slate)](http://www.slate.com/articles/technology/future_tense.html)\r\n* [Futurism](http://futurism.com/)\r\n* [GeekWire](http://www.geekwire.com/)\r\n* [Gizmodo](http://gizmodo.com/)\r\n* [Google](https://news.google.com/news/section?topic=tc)\r\n* [Guardian](http://www.theguardian.com/us/technology)\r\n* [Huffington Post](http://www.huffingtonpost.com/tech/)\r\n* [IAAA Spectrum](http://spectrum.ieee.org/)\r\n* [Inhabit](http://inhabitat.com/news/)\r\n* [Live Science](http://www.livescience.com/technology/)\r\n* [Mashable](http://mashable.com/tech/)\r\n* [Medium](https://medium.com/browse/b3ee72d38ca4)\r\n* [Motherboard](http://motherboard.vice.com/en_us)\r\n* [Network World](http://www.networkworld.com/news/)\r\n* [Neuroscience News - Robotics](http://neurosciencenews.com/neuroscience-topics/robotics-2/)\r\n* [New Scientist](https://www.newscientist.com/subject/technology/)\r\n* [The Next Web](http://thenextweb.com/section/tech/)\r\n* [NPR](http://www.npr.org/sections/technology/ )\r\n* [PC Mag](http://www.pcmag.com/news)\r\n* [Phys.org](http://phys.org/technology-news/)\r\n* [Re/Code](http://recode.net)\r\n* [ReadWrite](http://readwrite.com)\r\n* [The Register](http://www.theregister.co.uk/)\r\n* [Reuters](http://www.reuters.com/news/technology)\r\n* [ScienceDaily](http://www.sciencedaily.com/news/matter_energy/technology/)\r\n* [Seattle Times](http://www.seattletimes.com/business/technology/)\r\n* [Singularity Hub](http://singularityhub.com/)\r\n* [Slashdot](http://slashdot.org/)\r\n* [The Stack](https://thestack.com/)\r\n* [Star Talk Radio](http://www.startalkradio.net)\r\n* [Tech.co](http://tech.co/)\r\n* [TechCrunch](http://techcrunch.com/)\r\n* [Tech Radar](http://www.techradar.com/us/news)\r\n* [TechHive](http://www.techhive.com/news)\r\n* [TechNewsWorld](http://www.technewsworld.com/)\r\n* [TechWorld](http://www.techworld.com/)\r\n* [VentureBeat](http://venturebeat.com/)\r\n* [The Verge](http://www.theverge.com/tech)\r\n* [Wait But Why](http://waitbutwhy.com/)\r\n* [Wired](http://www.wired.com/)\r\n* [Yahoo](https://www.yahoo.com/tech)\r\n* [ZDNet](http://www.zdnet.com/)\r\n\r\n## NGINX\r\n\r\n* Nginx: [About](http://nginx.org/en/) | [Docs](http://nginx.org/en/docs/) | [FAQ](http://nginx.org/en/docs/faq.html) | [Twitter](https://twitter.com/nginxorg) | [Blog](http://nginx.com/blog/)\r\n\r\n## NODE.JS\r\n\r\n* [Ryan Dahl: Less is More with Node.js - Ryan Dahl (JSConf US 2013)](http://www.youtube.com/watch?v=4abYtdopuVE)\r\n* [Build Your API With Node.js](http://www.sdruby.org/podcast/124)\r\n* [Intro to Node.js - Edward O'Connor](http://www.sdruby.org/podcast/85)\r\n\r\n### NODE.JS - COOL STUFF\r\n\r\n* [node-canvas](https://github.com/LearnBoost/node-canvas)\r\n\r\n### NODE.JS - NPM\r\n\r\n* [Package Managers: An Introductory Guide (covers NPM & Bower)](http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer)\r\n\r\n## OCAML\r\n\r\n* [Caml Trading - Yaron Minsky (Jane Street Capital)](https://www.youtube.com/watch?v=hKcOkWzj0_s)\r\n\r\n## OCTAVE\r\n\r\n* [Machine Learning - Andrew Ng (Coursera)](https://class.coursera.org/ml-006/lecture)\r\n* [GNU Octave: Free Your Numbers - John W. Eaton et al. (Feb 2011)](https://www.gnu.org/software/octave/octave.pdf)\r\n* [Intro to Octave - Dr. P.J.G. Long - 2005](http://www-mdp.eng.cam.ac.uk/web/CD/engapps/octave/octavetut.pdf)\r\n\r\n## OOP\r\n\r\n* [OOP and Philosophy - Steve Klabnik (RubyMidwest 2013)](http://confreaks.tv/videos/2370-rmw2013-oop-and-philosophy)\r\n\r\n## PERL\r\n\r\n* [Modern Perl, 4th ed (free ebook)](https://pragprog.com/book/swperl/modern-perl-fourth-edition)\r\n\r\n## POSTGRESQL\r\n\r\n* [Official manuals](http://www.postgresql.org/docs/manuals/)\r\n* [Official FAQ](http://wiki.postgresql.org/wiki/FAQ)\r\n* [PostgresWeekly.com](http://postgresweekly.com/)\r\n* [PGCasts.com](https://www.pgcasts.com/)\r\n* [PostgreSQL awesomeness for Rails developers](http://www.amberbit.com/blog/2014/2/4/postgresql-awesomeness-for-rails-developers/)\r\n* [Redis in my Postgres (linking multiple Postgres dbs or Postgres and Redis/MySQL/Oracle/Twitter/ODBC/etc.)](http://www.craigkerstiens.com/2012/10/18/connecting_to_redis_from_postgres/)\r\n* [Postgres FTW: Postgres Is Just Easier - Guyren Howe](http://www.sdruby.org/podcast/120)\r\n* [Postgres Rules](http://www.sdruby.org/podcast/119)\r\n* [Postgres, the Best Tool You're Already Using - Adam Sanderson (RailsConf 2013)](https://www.youtube.com/watch?v=YWj8ws6jc0g)\r\n* [PostgreSQL proficiency for Python people - Christophe Pettus (PyCon 2014)](https://www.youtube.com/watch?v=0uCxLCmzaG4)\r\n* [Porting ActiveRecord validations to Postgres - Sean Huber](http://shuber.io/porting-activerecord-validations-to-postgres/)\r\n\r\n### POSTGRESQL - ADVANCED FEATURES\r\n\r\n* [Is PostgreSQL Your Next JSON Database? - Dj Walker-Morgan](https://www.compose.io/articles/is-postgresql-your-next-json-database/)\r\n* [PostgreSQL’s Powerful New Join Type: LATERAL - Dan Robinson](http://blog.heapanalytics.com/postgresqls-powerful-new-join-type-lateral/)\r\n* [Range Types in PostgreSQL 9.2 - Your Life Will Never Be the Same - Jonathan S. Katz (Postgres Open)](https://www.youtube.com/watch?v=XIcOf7r0dG4)\r\n* [Full-Text Search: Seek and Ye Shall Find - Dan Scott (Postgres Open)](https://www.youtube.com/watch?v=R6nT6UgY7k4)\r\n* [Using PostgreSQL and jsonb with Ruby on Rails - Nando Vieira](http://nandovieira.com/using-postgresql-and-jsonb-with-ruby-on-rails)\r\n\r\n### POSTGRESQL - POSTGREST\r\n\r\n* [PostgREST - REST API for any Postgres database](https://github.com/begriffs/postgrest)\r\n\r\n### POSTGRESQL - VIDEOS\r\n\r\n* [PGCon 2015 videos](https://www.citusdata.com/resources/citus-data-videos)\r\n* [PGConf US](https://www.youtube.com/channel/UCsJkVvxwoM7R9oRbzvUhbPQ)\r\n* [Youtube](https://www.youtube.com/results?search_query=postgresql)\r\n\r\n## PRODUCT DEVELOPMENT\r\n\r\n* [Essentials of Product Development - Ryan Singer (WindyCityRails2012)](http://vimeo.com/49523952)\r\n\r\n### PRODUCT DEVELOPMENT - PROFESSIONALISM / EXCELLENCE / EFFICIENCY\r\n\r\n* [10 Philosophies for Engineers - Jeff Meyerson](http://softwareengineeringdaily.com/2016/02/12/10-philosophies-for-developers/)\r\n* [Building a Culture of Learning - Joe Mastey (MountainWest RubyConf 2015)](http://confreaks.tv/videos/mwrc2015-building-a-culture-of-learning)\r\n* [Code Club - Saron Yitbarek (LoneStarRuby 2015)](http://confreaks.tv/videos/lonestarruby2015-code-club)\r\n* [Real Developers Ship (a.k.a Tenets for Software Delivery) - Sebastian von Conrad (Ruby Australia 2014)](http://vimeo.com/90173903)\r\n* [Great Developers Steal - Ben Scofield (Scotland Ruby Conf 2011)](http://confreaks.tv/videos/545-scotlandruby2011-great-developers-steal)\r\n* [Being an Excellent Software Developer - Michael Norton (WindyCityRails2012)](http://vimeo.com/49882901)\r\n* [Cultures of Effective Learning - Jeff Cohen (WindyCityRails2012)](http://vimeo.com/49951365)\r\n* [Continuous Testing - Ruby-Toolbox](https://www.ruby-toolbox.com/categories/continuous_testing)\r\n* [10-item work-efficiency recipe ](http://m-a-tech.blogspot.com/2012/10/short-10-items-work-efficiency-recipe.html)\r\n* [Keynote - Tom Preston-Werner (GitHub) (NLC 2011)](http://vimeo.com/35640883)\r\n* [Level Up! Test-driving your personal development - Alan Gardner (Scotland Ruby Conf 2011)](http://confreaks.tv/videos/556-scotlandruby2011-level-up-test-driving-your-personal-development)\r\n* [Teach Your Way to Better Code - Felix Clack (Ruby Australia 2014)](http://vimeo.com/88947877)\r\n* [Legacy - Chad Fowler (Aloha RubyConf 2012)](http://confreaks.tv/videos/1240-aloharuby2012-legacy)\r\n* [Nobody will Train You but You - Zachary Briggs (RailsConf 2013)](http://confreaks.tv/videos/2427-railsconf2013-nobody-will-train-you-but-you) & [Ruby MidWest 2013](http://confreaks.tv/videos/2381-rmw2013-nobody-will-train-you-but-you)\r\n* [Build a Bigger Brain: How Healthy Living Makes You Smarter - Joe Kutner (BigRuby 2013)](http://confreaks.tv/videos/2304-bigruby2013-build-a-bigger-brain-how-healthy-living-makes-you-smarter)\r\n* [The Most Important Optimization: Happiness (BigRuby 2013)](http://confreaks.tv/videos/2311-bigruby2013-the-most-important-optimization-happiness)\r\n* [The War For Talent: How To Succeed As an Employer or Engineer - Allan Grant (RailsConf 2013)](http://confreaks.tv/videos/2523-railsconf2013-the-war-for-talent-how-to-succeed-as-an-employer-or-engineer)\r\n\r\n### PRODUCT DEVELOPMENT - PEOPLE & PROCESS\r\n\r\n* [Humane Development - Ernie Miller (RailsConf 2015)](https://www.youtube.com/watch?v=-ZLYxLjwNWo) & [(RubyOnAles 2015](https://www.youtube.com/watch?v=SsReC-u--gg)\r\n* [What We Actually Know About Software Development, and Why We Believe It’s True - Greg Wilson](https://vimeo.com/9270320)\r\n* [Amelia Bedelia Learns to Code - Kylie Stradley (RailsConf 2015)](https://www.youtube.com/watch?v=bSbla50tqZE)\r\n* [Lessons from Theater and Software - Kevin Stevens (Rocky Mountain Ruby 2013)](http://confreaks.tv/videos/2771-rockymountainruby2013-lightning-talk-lessons-from-theater-and-software)\r\n* [5 Things I Wish Someone Had Told Me About Programming Before I Started - Kerri Miller (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-5-things-i-wish-someone-had-told-me-about-programming-before-i-started)\r\n* [Building a Culture of Quality - Bryan Helmkamp (LoneStarRuby 2013)](http://confreaks.tv/videos/2595-lonestarruby2013-building-a-culture-of-quality)\r\n* [Ready To Code: Automate Your Development Environment - David Kerber (RubyMidwest 2013)](http://confreaks.tv/videos/2368-rmw2013-ready-to-code-automate-your-development-environment)\r\n* [Keynote: Hacking Passion - Katrina Owen (LoneStarRuby 2013)](http://confreaks.tv/videos/2600-lonestarruby2013-keynote-hacking-passion)\r\n* [Failure for Fun and Profit! - Kerri Miller (RubyMidwest 2013)](http://confreaks.tv/videos/2371-rmw2013-failure-for-fun-and-profit)\r\n* [Architecting the Chaos - Building Travis CI - Konstantin Haase (SteelCityRuby 2013)](http://steelcityruby.confbots.com/video/72753961)\r\n* [Keep Software Weird - Leon Gersing (SteelCityRuby 2013)](http://steelcityruby.confbots.com/video/72780827)\r\n* [The End of Fun - Sarah Mei (LoneStarRuby 2013)](http://confreaks.tv/videos/2603-lonestarruby2013-the-end-of-fun)\r\n* [GET / Better - Mark Bates (Burlington Ruby 2013)](http://confreaks.tv/videos/2617-btvruby2013-keynote-get-better)\r\n* [James Edward Gray II keynote (Ruby Midwest 2013)](http://www.confreaks.tv/videos/2385-rmw2013-keynote)\r\n* [Channel Your Inner Jason Bay: How to Be Productive On a New Team - Ashish Dixit (SteelCityRuby 2013)](http://steelcityruby.confbots.com/video/72745494)\r\n* [Rockstars & Consultants, Who needs 'em? - Lori Olson (Aloha RubyConf 2012)](http://confreaks.tv/videos/1251-aloharuby2012-rockstars-consultants-who-needs-em)\r\n* [Does pair programming have to suck? - Angela Harms (Ruby Midwest 2011)](http://confreaks.tv/videos/757-rubymidwest2011-does-pair-programming-have-to-suck)\r\n* [Joe O'Brien - People: the missing ingredient (GoGaRuCo2012)](http://confreaks.tv/videos/1108-gogaruco2012-people-the-missing-ingredient)\r\n* [Must Have 10+ Years People Experience - Ashe Dryden (Ruby MidWest 2013)](http://confreaks.tv/videos/2374-rmw2013-must-have-10-years-people-experience)\r\n* [The Future of Work: Back to First Principles - Scott Chacon (Barcelona RuCo 2012)](http://confreaks.tv/videos/1324-baruco2012-keynote-back-to-first-principles) & [alt version](http://www.youtube.com/watch?v=2nK2sJqDe8w)\r\n* [Unsucking Your Team's Development Environment - Zach Holman (Barcelona RuCo 2012)](http://www.youtube.com/watch?v=Xa8r2xcK1e4)\r\n* [Real Software Engineering - Glenn Vanderburg (Lone Star RubyConf 2010)](http://confreaks.tv/videos/282-lsrc2010-real-software-engineering)\r\n* [A Short History of Software Engineering - Paolo Perrotta (Barcelona RuCo 2012)](http://www.youtube.com/watch?v=9IPn5Gk_OiM)\r\n* [How to Build a Sustainably Awesome Development Team - Jim Remsik & Les Hill (Lone Star RubyConf 2010)](http://confreaks.tv/videos/287-lsrc2010-how-to-build-a-sustainably-awesome-development-team)\r\n* [How GitHub Uses GitHub to Build GitHub - Zach Holman (Ruby Midwest 2011)](http://confreaks.tv/videos/754-rubymidwest2011-how-github-uses-github-to-build-github)\r\n* [People Patterns - Joe O'Brien (Ruby Midwest 2011)](http://confreaks.tv/videos/766-rubymidwest2011-people-patterns)\r\n* [WideTeams.com (podcasts on remote collaboration)](http://www.wideteams.com/)\r\n* [Move Fast and Make Things - Adam Keys (BigRuby 2013)](http://confreaks.tv/videos/2300-bigruby2013-move-fast-and-make-things)\r\n\r\n### PRODUCT DEVELOPMENT - COMMUNICATION TOOLS\r\n\r\n* [Basecamp](http://basecamp.com/)\r\n* [GitLab HQ](https://github.com/gitlabhq/gitlabhq)\r\n* [Pivotal Tracker](http://www.pivotaltracker.com/)\r\n\r\n## PROGRAMMING\r\n\r\n### PROGRAMMING - ACTOR MODEL\r\n\r\n* [Thinking in actors - Saša Jurić (WebCamp Zagreb 2014)](https://www.youtube.com/watch?v=g5JJZuxrW_k)\r\n* [Hewitt, Meijer and Szyperski: The Actor Model (everything you wanted to know...)](https://www.youtube.com/watch?v=7erJ1DV_Tlo)\r\n\r\n### PROGRAMMING - BOOKS\r\n\r\n* [97 Things Every Programmer Should Know - various authors, O'Reilly](http://programmer.97things.oreilly.com/wiki/index.php/Contributions_Appearing_in_the_Book)\r\n* [The Architecture of Open Source Applications](http://www.aosabook.org/en/index.html)\r\n* [The Codeless Code - Qi](http://thecodelesscode.com/contents)\r\n* [Essential Coding Theory - Venkatesan Guruswami, Atri Rudra and Madhu Sudan](http://www.cse.buffalo.edu/faculty/atri/courses/coding-theory/book/)\r\n* [Foundations of Computer Science - Al Aho and Jeff Ullman](http://infolab.stanford.edu/~ullman/focs.html)\r\n* [GitBook.com](https://www.gitbook.com/explore/topics)\r\n* [How to Design Programs - Matthias Felleisen, Robert Bruce Findler, Matthew Flatt, Shriram Krishnamurthi](http://htdp.org/2003-09-26/)\r\n* [Introduction to Computing: Explorations in Language, Logic and Machines - David Evans](http://www.computingbook.org/) | [PDF](http://www.computingbook.org/FullText.pdf) | [Read online](https://www.otexts.org/book/intro-computing)\r\n* [Patterns of Software - Richard P. Gabriel](http://dreamsongs.com/Files/PatternsOfSoftware.pdf)\r\n* [Producing Open Source Software: How to Run a Successful Free Software Project - Karl Fogel](http://producingoss.com/)\r\n\r\n### PROGRAMMING - BLOGS\r\n\r\n* [AListApart.com](http://alistapart.com/)\r\n* [Code Words](https://codewords.recurse.com/issues)\r\n* [Dr. Dobbs](http://www.drdobbs.com/blogs/)\r\n* [The Effective Engineer - Edmond Lau](http://www.theeffectiveengineer.com/)\r\n* [TheGeekStuff.com](http://www.thegeekstuff.com/)\r\n* [Jeff Atwood - \"Coding Horror\"](http://blog.codinghorror.com/)\r\n* [Joel Spolsky - JoelOnSoftware.com](http://www.joelonsoftware.com/)\r\n* [MartinFowler.com](http://martinfowler.com/)\r\n* [Medium.com - Software Development](https://medium.com/tag/software-development)\r\n* [Scott Hanselman](http://www.hanselman.com/)\r\n* [StackOverflow](http://blog.stackoverflow.com/)\r\n\r\n### PROGRAMMING - DCI (DATA, CONTEXT, INTERACTIONS)\r\n\r\n* [Data, Context and Interaction - Wikipedia](https://en.wikipedia.org/wiki/Data,_context_and_interaction`)\r\n* [Trygve Reenskaug - DCI: Re-thinking the foundations of object orientation and of programming (Øredev Conference 2009)](https://vimeo.com/8235394)\r\n* [The DCI Architecture: Supporting the Agile Agenda - James Coplien (Øredev Conference 2009)](https://vimeo.com/8235574)\r\n* [Rickard Öberg - DCI in Practice (Øredev Conference 2009)](https://vimeo.com/8235651)\r\n* [Working with objects — in computer and mind - Trygve Reenskaug and James O. Coplien](http://www.fulloo.info/Documents/CommSenseCurrentDraft.pdf)\r\n* [FullOO.info](http://www.fulloo.info/Documents/)\r\n* [The DCI Architecture: A New Vision of Object-Oriented Programming - Trygve Reenskaug and James O. Coplien](http://www.artima.com/articles/dci_vision.html)\r\n* [The Common Sense of Object Orientated Programming - Trygve Reenskaug](http://folk.uio.no/trygver/2008/commonsense.pdf)\r\n\r\n### PROGRAMMING - FUNCTIONAL REACTIVE PROGRAMMING\r\n\r\n* [The introduction to Reactive Programming you've been missing - Andre Staltz](https://gist.github.com/staltz/868e7e9bc2a7b8c1f754)\r\n* [An Event-driven and Reactive Future - Jonathan Worthington (FooCafe)](https://www.youtube.com/watch?v=_VdIQTtRkb8)\r\n* [What does it mean to be Reactive? - Erik Meijer (React 2014)](https://www.youtube.com/watch?v=sTSQlYX5DU0)\r\n* [K Things I Know About Building Resilient Reactive Systems - Joe Armstrong (React 2014)](https://www.youtube.com/watch?v=rQIE22e0cW8)\r\n* [Functional Reactive Programming: Cleanly Abstracted Interactivity - BoostCon](https://www.youtube.com/watch?v=tyaYLGQSr4g)\r\n\r\n### PROGRAMMING - LANGUAGE CREATION\r\n\r\n* [Designing With Passion -  Joe Armstrong, Evan Czaplicki, Bruce Tate, Dave Thomas, John Hughes (Erlang Solutions 2016)](https://www.infoq.com/presentations/panel-erlang-haskell-elm-ruby)\r\n\r\n### PROGRAMMING - LEARNING (FREE)\r\n\r\n* [Code Studio](http://studio.code.org/)\r\n* [Codecademy](https://www.codecademy.com/) (Registration required)\r\n* [CS50: Intro to Computer Science - David J. Malan (Harvard)](http://cs50.tv/)\r\n* [Fun Fun Function - Mattias Petter Johansson, a.k.a. \"mpj\"](https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q)\r\n* [I Love Coding](https://ilovecoding.org/) (Registration required)\r\n* [WatchMeCode.net](https://sub.watchmecode.net/) (Registration required)\r\n\r\n### PROGRAMMING - LEARNING (PAID)\r\n\r\n* [Daily Drip](https://www.dailydrip.com/)\r\n* [Destroy All Software](https://www.destroyallsoftware.com/screencasts)\r\n* [Egghead.io](https://egghead.io/)\r\n* [Evented Mind](https://www.eventedmind.com/)\r\n* [Frontend Masters](https://frontendmasters.com/)\r\n* [Go Rails](https://gorails.com/)\r\n* [InformIT](http://www.informit.com/)\r\n* [LearnElixir.tv - Daniel Berkompas](https://www.learnelixir.tv/)\r\n* [LearnPhoenix.tv - Daniel Berkompas](https://www.learnphoenix.tv/)\r\n* [Lynda.com](https://www.lynda.com/)\r\n* [PeerToPeer.io](http://peertopeer.io/)\r\n* [Pluralsight](https://www.pluralsight.com/)\r\n* [Sitepoint](https://www.sitepoint.com/)\r\n* [Treehouse](https://teamtreehouse.com/)\r\n* [Tuts+](http://tutsplus.com/)\r\n* [Udacity](https://www.udacity.com/)\r\n* [Udemy](https://www.udemy.com/)\r\n* [Upcase - Thoughtbot](https://thoughtbot.com/upcase/)\r\n\r\n#### PROGRAMMING - LEARNING - GAMES\r\n\r\n* [Games on Github - Lee Reilly](https://github.com/leereilly/games)\r\n* [Phaser.io](http://phaser.io/)\r\n* [Game Editor (cross-platform game creator)](http://game-editor.com/)\r\n\r\n### PROGRAMMING - MESSAGING & QUEUES\r\n\r\n* [Decouple all the things: Asynchronous messaging keeps it simple - Kerstin Puschke (ArrrrCamp 2015)](http://confreaks.tv/videos/arrrrcamp2015-decouple-all-the-things-asynchronous-messaging-keeps-it-simple)\r\n\r\n#### PROGRAMMING - MESSAGING & QUEUES - RABBITMQ\r\n\r\n* [Reliable Messaging With RabbitMQ - Part 1 - JimOnDemand](https://www.youtube.com/watch?v=XjuiZM7JzPw)\r\n* [RabbitMQ Simulator](http://tryrabbitmq.com/)\r\n* [RabbitMQ is the new king - Alvaro Videla & Jan Machacek](https://www.youtube.com/watch?v=kA8rPIDa388)\r\n* [Dissecting the Rabbit: RabbitMQ Internal Architecture - Alvaro Videla (Lambda Days 2015)](https://www.youtube.com/watch?v=WPischLIe8Q)\r\n\r\n### PROGRAMMING - PODCASTS\r\n\r\n* [85 Podcasts for Developers, Programmers & Software Engineers - HackerLists.com](https://hackerlists.com/programming-podcasts/)\r\n* [a16z - Andreessen Horowitz](http://a16z.com/podcasts/)\r\n* [The Big Web Show](http://5by5.tv/bigwebshow)\r\n* [The Bikeshed](http://bikeshed.fm/)\r\n* [The Changelog](https://changelog.com/podcast/)\r\n* [The Cloudcast](http://www.thecloudcast.net/)\r\n* [Code Podcast](https://soundcloud.com/podcastcode)\r\n* [Cognicast](http://blog.cognitect.com/cognicast/)\r\n* [CTRL+ClickCast](http://ctrlclickcast.com/)\r\n* [Developer On Fire](http://developeronfire.com/)\r\n* [Dr. Dobbs TV](http://www.drdobbs.com/tv/) (Video)\r\n* [Elixir Fountain](https://soundcloud.com/elixirfountain)\r\n* [FLOSS Weekly](https://twit.tv/shows/floss-weekly)\r\n* [FunctionalGeekery.com](https://www.functionalgeekery.com)\r\n* [Giant Robots](http://giantrobots.fm/)\r\n* [Hansel Minutes](http://www.hanselminutes.com/)\r\n* [Herding Code](http://herdingcode.com/)\r\n* [Javascript Jabber](https://devchat.tv/js-jabber)\r\n* [The New Stack](http://thenewstack.io/)\r\n* [On Computing](http://www.computer.org/portal/web/computingnow/oncomputing)\r\n* [PathToPerf](http://pathtoperf.com/)\r\n* [Programming Throwdown](http://www.programmingthrowdown.com/)\r\n* [Ruby Rogues](https://devchat.tv/ruby-rogues)\r\n* [Shop Talk](http://shoptalkshow.com/)\r\n* [Software Engineering Daily](http://softwareengineeringdaily.com/) | [iTunes](https://itunes.apple.com/us/podcast/software-engineering-daily/id1019576853) | [Slack](http://softwaredaily.herokuapp.com/)\r\n* [Software Engineering Radio](http://www.se-radio.net/)\r\n* [Toolsday.io](http://toolsday.io/)\r\n* [Turing-Incomplete](http://turing.cool/)\r\n* [The Web Ahead](http://5by5.tv/webahead)\r\n\r\n### PROGRAMMING - VIDEOS\r\n\r\n* [NDC Conferences (Over 1,100 conference videos)](https://vimeo.com/ndcconferences)\r\n* [SkillsMatter.com/Skillscasts](https://skillsmatter.com/skillscasts)\r\n* [InfoQ.com videos](http://www.infoq.com/presentations/)\r\n* Jfokus: [2016](https://www.youtube.com/playlist?list=PLUQORQEatnJdV2Ib4Edw3jLQJk5b8Rxcd) | [2015](https://www.youtube.com/playlist?list=PLklQqdqnBkPjVWKihmEAchC2kksnNoqIi)\r\n* [OSCON 2014](https://www.youtube.com/playlist?list=PL055Epbe6d5Y3njTzpWt0VepR1B7tcRFH)\r\n* [FutureTalks - NewRelic](https://www.youtube.com/playlist?list=PLmhYj7Jl81JGTfSgMeya2R-zcISDZ9utg)\r\n* [Forward University](http://forwardjs.com/university)\r\n* [StrangeLoop 2015](https://www.youtube.com/watch?v=R2Aa4PivG0g&list=PLcGKfGEEONaCIl5eU53uPBnRJ9rbIH32R)\r\n\r\n## PURESCRIPT\r\n\r\n* [main](http://www.purescript.org/) | [learn](http://www.purescript.org/learn/) | [wiki](https://github.com/purescript/purescript/wiki) | [Github](https://github.com/purescript/purescript)\r\n* [Learn Functional Programming with PureScript - John A De Goes (LambdaConf 2015)](https://www.youtube.com/watch?v=LqYfdmb0eUU)\r\n* [PureScript by Example - Phil Freeman](https://leanpub.com/purescript/read)\r\n* [kRITZCREEK blog](https://kritzcreek.github.io/)\r\n\r\n### PURESCRIPT - HELP\r\n\r\n* [Google group](https://groups.google.com/forum/#!forum/purescript)\r\n\r\n### PURESCRIPT - VIDEOS\r\n\r\n* [Many videos on Purescript & Haskell - kritzcreek](https://www.livecoding.tv/kritzcreek/videos/)\r\n* [PureScript Community](https://www.youtube.com/channel/UCPtHLGu_WXh-OvX8NAVtDEw)\r\n\r\n## PYTHON\r\n\r\n* [Awesome Python (curated list of awesome Python stuff)](https://github.com/vinta/awesome-python)\r\n\r\n### PYTHON - ALGORITHMS\r\n\r\n* [Intro to Algorithms - MIT](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/)\r\n* [Intro to Algorithms: Social Network Analysis - Michael Littman, Brown University (Udacity)](https://www.udacity.com/course/cs215)\r\n\r\n### PYTHON - CONDA\r\n\r\n* Conda (package manager): [Documentation](http://conda.pydata.org/docs/) & [Github](https://github.com/conda/conda) | [Cheatsheet](http://conda.pydata.org/docs/_downloads/conda-cheatsheet.pdf)\r\n\r\n### PYTHON - CYTHON\r\n\r\n* [Cython](http://cython.org/)\r\n* [Speeding up scientific python code using Cython - EuroSciPy 2014](https://www.youtube.com/watch?v=zdXLSEdtyaY)\r\n* [Cython: Speed up Python and NumPy, Pythonize C, C++, and Fortran, SciPy2013 Tutorial, Part 1 - Kurt Smith](https://www.youtube.com/watch?v=JKCjsRDffXo), [Part 2](https://www.youtube.com/watch?v=KJFaJoJCqlU), [Part 3](https://www.youtube.com/watch?v=6ukI-NlIzqY), [Part 4](https://www.youtube.com/watch?v=kFLg5jw2esE)\r\n* [Very gentle introduction to Cython - William Stein](https://www.youtube.com/watch?v=YrO89QIizxI)\r\n* [The Cython compiler for Python - Dr. Stefan Behnel (2014)](https://www.youtube.com/watch?v=ZHpkLX2VFMU)\r\n* [Cython - Making Python as fast as C (Mandarin) - Mosky](https://www.youtube.com/watch?v=SjApBdi6M4E)\r\n\r\n### PYTHON - COMPUTER VISION\r\n\r\n* [OpenCV](http://opencv.org/)\r\n\r\n### PYTHON - DATA ANALYSIS\r\n\r\n* [Dataquest.io missions](https://www.dataquest.io/missions)\r\n* Harvard CS109: Data Science (2013): [slides](https://drive.google.com/folderview?id=0BxYkKyLxfsNVd0xicUVDS1dIS0k&usp=sharing), [video lectures](http://cm.dce.harvard.edu/2014/01/14328/publicationListing.shtml) & [labs and solutions](https://github.com/cs109/content)\r\n* [Harvard CS109: Data Science (2014)](http://cs109.github.io/2014/)\r\n* [Intro to Python for Econometrics, Statistics and Data Analysis - Kevin Sheppard](http://www.kevinsheppard.com/images/0/09/Python_introduction.pdf)\r\n* [Data Mining With Python - Finn Arup Nielsen](http://www2.compute.dtu.dk/pubdb/views/edoc_download.php/6814/pdf/imm6814.pdf)\r\n* [Clustering US Senators with K-Means - Dataquest.io](http://blog.dataquest.io/blog/plotting-senators/)\r\n* [Python: Getting Started With Data Analysis - Al-Ahmadgaid Asaad](http://alstatr.blogspot.com.au/2015/02/python-getting-started-with-data.html)\r\n* [Quantitative Economics - Thomas Sargent & John Stachurski](http://quant-econ.net/_static/pdfs/py-quant-econ.pdf) & [Python index](http://quant-econ.net/py/index.html)\r\n* [Think Stats: Probability and Statistics for Programmers](http://thinkstats.com/thinkstats.pdf)\r\n* [Natural Language Processing with Python](http://nltk.org/book/)\r\n* [Mining the Social Web (Git repo)](https://github.com/ptwobrussell/Mining-the-Social-Web-2nd-Edition)\r\n* [Practical Data Science in Python - Radim Řehůřek](http://radimrehurek.com/data_science_python/)\r\n* [scientific-python-lectures - JR Johansson](https://github.com/jrjohansson/scientific-python-lectures)\r\n* [Learn Python Through Public Data Hacking](http://www.youtube.com/watch?v=RrPZza_vZ3w) & [slides](http://dabeaz.com/pydata/LearnPyData.pdf)\r\n* [Bayesian Statistics Made (As) Simple (As Possible) - Allen Downey (2012)](https://www.youtube.com/watch?v=bobeo5kFz1g)\r\n* [Social Network Analysis With Python - Maksim Tsvetovat (2012)](http://www.youtube.com/watch?v=qgGqaBAEy3Q)\r\n* [Web Scraping: Reliably and Efficiently Pull Data From Pages That Don't Expect It - Asheesh Laroia (PyCon 2012)](https://www.youtube.com/watch?v=52wxGESwQSA)\r\n* [Social Network Analysis with Python - Maksim Tsvetovat (PyCon 2012)](https://www.youtube.com/watch?v=qgGqaBAEy3Q)\r\n* [Web scraping: Reliably and efficiently pull data from pages that don't expect it - Asheesh Laroia (2012)](http://www.youtube.com/watch?v=52wxGESwQS()\r\n* [Python for Open Data Lovers: Explore It, Analyze It, Map It - Jackie Kazil, Dana Bauer (2012)](http://www.youtube.com/watch?v=GxyfYEe8MiQ)\r\n* [Interactive Data Exploration and Visualization in IPython - Tamara Knutsen (DataScience.LA 2014)](https://www.youtube.com/watch?v=uPIrPWBOBEg)\r\n* [Learn Python for Science - NumPy, SciPy and Matplotlib](http://www.youtube.com/watch?v=oYTs9HwFGbY)\r\n* [A Billion Rows per Second: Metaprogramming Python for Big Data - New Circle Training](https://www.youtube.com/watch?v=rXj5nayS7Yg)\r\n* [Python's Role in Big Data Analytics: Past, Present, and Future - Travis Oliphant (EuroPython 2014)](https://www.youtube.com/watch?v=oXRvpBJ-Dkc)\r\n* [Python as Super Glue for the Modern Scientific Workflow - Joshua Bloom (SciPy 2012)](https://www.youtube.com/watch?v=mLuIB8aW2KA)\r\n* [Intro to Prediction Using Python - Luke Gotszling](https://www.youtube.com/watch?v=YeIWV9KOofU)\r\n* [R vs Python - Round 1](http://www.theswarmlab.com/r-vs-python-round-1/) [Round 2](http://www.theswarmlab.com/r-vs-python-round-2-22/) [Round 3](http://www.theswarmlab.com/r-vs-python-round-3/)\r\n\r\n#### PYTHON - DATA ANALYSIS - BLAZE\r\n\r\n* [Docs](http://blaze.pydata.org/docs/latest/index.html) & [Github](https://github.com/ContinuumIO/blaze)\r\n* [Blaze (\"extends NumPy and Pandas to distributed and out-of-core computing\")](http://blaze.pydata.org/docs/latest/index.html)\r\n* [Introducing Blaze - HMDA Practice - Matt Rocklin](http://continuum.io/blog/blaze-hmda)\r\n* [Dask - enables parallel computing through task scheduling and blocked algorithms](http://dask.pydata.org/en/latest/)\r\n\r\n#### PYTHON - DATA ANALYSIS - EXCEL INTEGRATION\r\n\r\n* xlwings: [Website](http://xlwings.org/), [Github](https://github.com/ZoomerAnalytics/xlwings) & [Quickstart](http://xlwings.org/quickstart/)\r\n* python-excel: [Website](http://www.python-excel.org/) & [Github](https://github.com/python-excel)\r\n* [pywin32](http://sourceforge.net/projects/pywin32/)\r\n\r\n#### PYTHON - DATA ANALYSIS - KAYAK (DEEP NEURAL NETWORKS)\r\n\r\n* [Kayak - Library for Deep Neural Networks](https://github.com/HIPS/Kayak)\r\n\r\n#### PYTHON - DATA ANALYSIS - MLPY\r\n\r\n* [mlpy](http://mlpy.sourceforge.net/)\r\n\r\n#### PYTHON - DATA ANALYSIS - NUMBA\r\n\r\n* Numba: [Pydata](http://numba.pydata.org/) & [Github](https://github.com/numba/numba)\r\n* [Numba vs. Cython: Take 2 - Jake Vanderplas](http://nbviewer.ipython.org/url/jakevdp.github.io/downloads/notebooks/NumbaCython.ipynb)\r\n* [Accelerating Python Libraries with Numba (Part 1) - Aron Ahmadia](http://continuum.io/blog/numba_growcut) & [Part 2](http://continuum.io/blog/numba_performance)\r\n* [Numba Overview - Stan Seibert](http://www.slideshare.net/stan_seibert/numba-overview)\r\n\r\n#### PYTHON - DATA ANALYSIS - NUMPY\r\n\r\n* [(Tentative) NumPy Tutorial](http://wiki.scipy.org/Tentative_NumPy_Tutorial)\r\n* [Numpy User Guide](http://docs.scipy.org/doc/numpy/user/index.html) & [PDF](http://docs.scipy.org/doc/numpy/numpy-user-1.9.1.pdf)\r\n* [Numpy Reference Guide](http://docs.scipy.org/doc/numpy/reference/) & [PDF](http://docs.scipy.org/doc/numpy/numpy-ref-1.9.1.pdf)\r\n* [NumPy and iPython - Valentin Haenel (SciPy 2013) - Pt 1](http://www.youtube.com/watch?v=UWmZAAfXds4) & [Pt 2](http://www.youtube.com/watch?v=lSfkIle93hQ)\r\n* [An introduction to Numpy and Scipy - M. Scott Shell](http://www.engr.ucsb.edu/~shell/che210d/numpy.pdf)\r\n* [Numpy: Multidimensional Data Arrays - J.R. Johansson](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-2-Numpy.ipynb)\r\n* [An Exercise With Matplotlib and Numpy (gets and analyzes weather data)- Mike Hansen](http://software-carpentry.org/blog/2012/05/an-exercise-with-matplotlib-and-numpy.html)\r\n\r\n#### PYTHON - DATA ANALYSIS - OLAP\r\n\r\n* Cubes (OLAP HTTP server): [Website](http://cubes.databrewery.org/) & [Github](https://github.com/DataBrewery/cubes)\r\n* [CubesViewer](https://github.com/jjmontesl/cubesviewer)\r\n\r\n#### PYTHON - DATA ANALYSIS - PANDAS\r\n\r\n* [Pandas documentation (PDF)](http://pandas.pydata.org/pandas-docs/stable/pandas.pdf)\r\n    * [Installation](http://pandas.pydata.org/pandas-docs/stable/install.html)\r\n    * [FAQ](http://pandas.pydata.org/pandas-docs/stable/faq.html)\r\n    * [Overview](http://pandas.pydata.org/pandas-docs/stable/overview.html)\r\n    * [10 Minutes to Pandas](http://pandas.pydata.org/pandas-docs/stable/10min.html)\r\n    * [Tutorials](http://pandas.pydata.org/pandas-docs/stable/tutorials.html)\r\n    * [Cookbook](http://pandas.pydata.org/pandas-docs/stable/cookbook.html)\r\n    * [Intro to Data Structures](http://pandas.pydata.org/pandas-docs/stable/dsintro.html)\r\n    * [Essential Basics](http://pandas.pydata.org/pandas-docs/stable/basics.html)\r\n    * [Text Data](http://pandas.pydata.org/pandas-docs/stable/text.html)\r\n    * [Options and Settings](http://pandas.pydata.org/pandas-docs/stable/options.html)\r\n    * [Indexing and Selecting Data](http://pandas.pydata.org/pandas-docs/stable/indexing.html)\r\n    * [MultiIndex / Advanced Indexing](http://pandas.pydata.org/pandas-docs/stable/advanced.html)\r\n    * [Computational Tools](http://pandas.pydata.org/pandas-docs/stable/computation.html)\r\n    * [Missing Data](http://pandas.pydata.org/pandas-docs/stable/missing_data.html)\r\n    * [Group By: Split-Apply-Combine](http://pandas.pydata.org/pandas-docs/stable/groupby.html)\r\n    * [Merge, Join and Concatenate](http://pandas.pydata.org/pandas-docs/stable/merging.html)\r\n    * [Reshaping and Pivot Tables](http://pandas.pydata.org/pandas-docs/stable/reshaping.html)\r\n    * [Time Series / Date Functionality](http://pandas.pydata.org/pandas-docs/stable/timeseries.html)\r\n    * [Time Deltas](http://pandas.pydata.org/pandas-docs/stable/timedeltas.html)\r\n    * [Categorical Data](http://pandas.pydata.org/pandas-docs/stable/categorical.html)\r\n    * [Plotting](http://pandas.pydata.org/pandas-docs/stable/visualization.html)\r\n    * [I/O Tools (Text, Excel, CSV, JSON, HDF5, ...)](http://pandas.pydata.org/pandas-docs/stable/io.html)\r\n    * [Remote Data Access](http://pandas.pydata.org/pandas-docs/stable/remote_data.html)\r\n    * [Enhancing Peformance](http://pandas.pydata.org/pandas-docs/stable/enhancingperf.html)\r\n    * [Sparse Data Structures](http://pandas.pydata.org/pandas-docs/stable/sparse.html)\r\n    * [Caveats and Gotchas](http://pandas.pydata.org/pandas-docs/stable/gotchas.html)\r\n    * [rpy2 / R Interface](http://pandas.pydata.org/pandas-docs/stable/r_interface.html)\r\n    * [Pandas Ecosystem](http://pandas.pydata.org/pandas-docs/stable/ecosystem.html)\r\n    * [Comparison With R / R Libraries](http://pandas.pydata.org/pandas-docs/stable/comparison_with_r.html)\r\n    * [Comparison With SQL](http://pandas.pydata.org/pandas-docs/stable/comparison_with_sql.html)\r\n    * [API Reference](http://pandas.pydata.org/pandas-docs/stable/api.html)\r\n* [Modern Pandas (7-part series) - Tom Augspurger](https://tomaugspurger.github.io/modern-1.html)\r\n* [Visual Guide to Pandas - Jason Wirth (ChiPy 2013)](https://www.youtube.com/watch?v=9d5-Ti6onew)\r\n* [Pandas tutorials - PyData.org](http://pandas.pydata.org/pandas-docs/stable/tutorials.html)\r\n* [Things in Pandas I Wish I'd Had Known Earlier - Sebastian Raschka](http://nbviewer.ipython.org/github/rasbt/python_reference/blob/master/tutorials/things_in_pandas.ipynb)\r\n* [Cheat Sheet: The Pandas DataFrame Object](https://drive.google.com/folderview?id=0ByIrJAE4KMTtaGhRcXkxNHhmY2M)\r\n* [Intro to PANDAS Data Structures - Greg Reda](http://www.gregreda.com/2013/10/26/intro-to-pandas-data-structures/), [Working With DataFrames](http://www.gregreda.com/2013/10/26/working-with-pandas-dataframes/) & [Using PANDAS on the MovieLens Database](http://www.gregreda.com/2013/10/26/using-pandas-on-the-movielens-dataset/)\r\n* [Statistical Data Analysis in Python (4 videos) - Christopher Fonnesbeck](http://conference.scipy.org/scipy2013/tutorial_detail.php?id=109) [1](http://www.youtube.com/watch?v=DXPwSiRTxYY) [2](http://www.youtube.com/watch?v=TGEBpzJUxdI) [3](http://www.youtube.com/watch?v=YZDtBEEZuAk) [4](http://www.youtube.com/watch?v=5_rcdhBXD-0) & [iPython notebooks](https://github.com/fonnesbeck/statistical-analysis-python-tutorial)\r\n* [Keynote - Wes McKinney (PyCon Singapore 2013)](https://www.youtube.com/watch?v=Jm73dKlYHZw)\r\n* [Data Analysis in Python with Pandas - Wes McKinney (2012 PyData Workshop)](https://www.youtube.com/watch?v=MxRMXhjXZos)\r\n* [Time Series Data Analysis with Pandas - Wes McKinney (ciPy 2012)](https://www.youtube.com/watch?v=0unf-C-pBYE)\r\n* [Applied Time Series Econometrics in Python and R - Jeffrey Yau (PyData 2016)](https://www.youtube.com/watch?v=tJ-O3hk1vRw)\r\n* [Python Data Visualization Cookbook](http://lubossabol.sk/manual/Python27/Python_Data_Visualization_Cookbook.pdf)\r\n* [Python Pandas Tutorial - Mikhail Semeniuk](http://www.bearrelroll.com/2013/05/python-pandas-tutorial/)\r\n* [Remote Data Access](http://pandas.pydata.org/pandas-docs/stable/remote_data.html)\r\n* [Diving into Open Data with IPython Notebook & Pandas - Julia Evans (PyCon 2014)](https://www.youtube.com/watch?v=rEalbu8UGeo) & [Pandas Cookbook (iPython Notebooks)](https://github.com/jvns/pandas-cookbook)\r\n* [Detailed Look at Pandas' Indexes - Trent Hauck (O'Reilly 2014)](http://www.youtube.com/watch?v=NWS7QxnAmyU<S-F12>)\r\n* [NumPy/SciPy/Pandas Cheat Sheet](https://s3.amazonaws.com/quandl-static-content/Documents/Quandl+-+Pandas%2C+SciPy%2C+NumPy+Cheat+Sheet.pdf)\r\n* [Python Pandas Tutorial - Mikhail Semeniuk](http://www.bearrelroll.com/2013/05/python-pandas-tutorial/)\r\n* [Time series analysis with Pandas - Nikolay Koldunov](http://earthpy.org/pandas-basics.html)\r\n* [10 Things I Hate About Pandas - Wes McKinney](http://www.slideshare.net/wesm/practical-medium-data-analytics-with-python)\r\n* [Python and Pandas for Sentiment Analysis and Investing - \"sentdex\"](https://www.youtube.com/watch?v=0ySdEYUONz0&list=PLQVvvaa0QuDdktuSQRsofoGxC2PTSdsi7&feature=share)\r\n* [Manipulating/querying dataframes with Pandas (or dplyr)](http://nbviewer.ipython.org/gist/TomAugspurger/6e052140eaa5fdb6e8c0/dplyr_pandas.ipynb)\r\n\r\n##### PYTHON - DATA ANALYSIS - PANDAS - DATA STORAGE\r\n\r\n* [Efficiently Store Pandas DataFrames - Matthew Rocklin](http://matthewrocklin.com/blog/work/2015/03/16/Fast-Serialization/)\r\n\r\n##### PYTHON - DATA ANALYSIS - PANDAS - EXCEL INTEGRATION\r\n\r\n* [Common Excel Tasks Demonstrated in Pandas - Chris Moffitt, Part 1](http://pbpython.com/excel-pandas-comp.html) & [Part 2](http://pbpython.com/excel-pandas-comp-2.html)\r\n* [Combining Data From Multiple Excel Files - Chris Moffitt](http://pbpython.com/excel-file-combine.html)\r\n* [Pandas Pivot Table Explained - Chris Moffitt](http://pbpython.com/pandas-pivot-table-explained.html)\r\n* [Openpyxl: library to read/write Excel 2010 xlsx/xlsm/xltx/xltm files](https://bitbucket.org/openpyxl/openpyxl)\r\n\r\n##### PYTHON - DATA ANALYSIS - PANDAS - PERFORMANCE\r\n\r\n* [Performance Pandas - Jeff Reback](https://www.youtube.com/watch?v=2RW9zSQF1Sk)\r\n\r\n#### PYTHON - DATA ANALYSIS - PYBRAIN\r\n\r\n* [PyBrain](http://www.pybrain.org/)\r\n\r\n#### PYTHON - DATA ANALYSIS - PYMC\r\n\r\n* [PyMC user guide](http://pymc-devs.github.io/pymc/)\r\n* [PyMC Github](https://github.com/pymc-devs/pymc)\r\n* [PyMC tutorial](http://nbviewer.ipython.org/github/pymc-devs/pymc/blob/master/pymc/examples/tutorial.ipynb)\r\n* [Bayesian data analysis with PyMC3 - Thomas Wiecki (PyData 2013)](http://twiecki.github.io/blog/2013/12/12/bayesian-data-analysis-pymc3/)\r\n\r\n#### PYTHON - DATA ANALYSIS - PYML\r\n\r\n* [PyML](http://pyml.sourceforge.net/)\r\n\r\n#### PYTHON - DATA ANALYSIS - PYTABLES\r\n\r\n* [PyTables.org](http://www.pytables.org)\r\n* [PyTables.github.io](http://pytables.github.io/)\r\n* [github.com/Pytables](https://github.com/PyTables/PyTables)\r\n* [Python and HDF5 - Fast Storage for Large Data - Mike Müller (PyCon 2012)](https://www.youtube.com/watch?v=hnhN2_TpY8g)\r\n* [HDF5 is for lovers - Anthony Scopatz (SciPy 2012)](https://www.youtube.com/watch?v=Nzx0HAd3FiI)\r\n* [Managing Large Datasets with Python and HDF5 - Andrew Collette (2014)](https://www.youtube.com/watch?v=wZEFoVUu8h0)\r\n* [Modern scientific computing and big data analytics in Python - Edward Schofield (PyCon Australia 2013)](https://www.youtube.com/watch?v=hqOsfS3dP9w)\r\n\r\n#### PYTHON - DATA ANALYSIS - R INTERFACES\r\n\r\n* [RPy2 documentation](http://rpy.sourceforge.net/rpy2/doc-dev/html/index.html)\r\n* [RMagic for iPython Notebook](http://ipython.org/ipython-doc/dev/config/extensions/rmagic.html)\r\n* [Using R Within the iPython Notebook](http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/R%20Magics.ipynb)\r\n* [RMagic Functions Extension](http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cell%20Magics.ipynb#Rmagic-Functions-Extension)\r\n\r\n#### PYTHON - DATA ANALYSIS - SCIKIT-LEARN\r\n\r\n* [API](http://scikit-learn.org/stable/modules/classes.html)\r\n* [Documentation](http://scikit-learn.org/stable/documentation.html)\r\n* [User Guide](http://scikit-learn.org/stable/user_guide.html)\r\n* scikit-learn video: [ #1: Intro to machine learning with scikit-learn](http://blog.kaggle.com/2015/04/08/new-video-series-introduction-to-machine-learning-with-scikit-learn/) | [#2: Setting up Python for machine learning](http://blog.kaggle.com/2015/04/15/scikit-learn-video-2-setting-up-python-for-machine-learning/) | [#3: Machine learning first steps with the Iris dataset](http://blog.kaggle.com/2015/04/22/scikit-learn-video-3-machine-learning-first-steps-with-the-iris-dataset/) | [#4: Model training and prediction with K-nearest neighbors](http://blog.kaggle.com/2015/04/30/scikit-learn-video-4-model-training-and-prediction-with-k-nearest-neighbors/) | [#5: Choosing a machine learning model](http://blog.kaggle.com/2015/05/14/scikit-learn-video-5-choosing-a-machine-learning-model/) | [#6: Linear regression (plus pandas & seaborn)](http://blog.kaggle.com/2015/05/28/scikit-learn-video-6-linear-regression-plus-pandas-seaborn/) | [#7: Optimizing your model with cross-validation](http://blog.kaggle.com/2015/06/29/scikit-learn-video-7-optimizing-your-model-with-cross-validation/) | [#8: Efficiently searching for optimal tuning parameters](http://blog.kaggle.com/2015/07/16/scikit-learn-video-8-efficiently-searching-for-optimal-tuning-parameters/) | [#9: Better evaluation of classification models](http://blog.kaggle.com/2015/10/23/scikit-learn-video-9-better-evaluation-of-classification-models/)\r\n* [Realtime Predictive Analytics Using scikit-learn and RabbitMQ - Michael Becker (PyCon 2014)](https://www.youtube.com/watch?v=WPyNdHygBD0)\r\n* [Know Thy Neighbor: Scikit and the K-Nearest Nearest Neighbor Algorithm - Portia Burton (PyCon 2014)](https://www.youtube.com/watch?v=tQNZRfsZF3g)\r\n* [Intro to Machine Learning: Pattern Recognition for Fun and Profit - Sebastian Thrun and Katie Malone (Udacity)]()\r\n* [SciKit-Learn Tutorial - Jake VanderPlas (PyData 2012)](http://vimeo.com/53062607)\r\n* [Intro to Scikit-learn (1) - Gaël Varoquaux, Jake Vanderplas, Olivier Grisel (SciPy 2013)](http://www.youtube.com/watch?v=r4bRUvvlaBw) [2](http://www.youtube.com/watch?v=hlaMiXCRxB0) & [3](http://www.youtube.com/watch?v=XS4TIGe7MaU)\r\n* [Tutorial on statistical-learning for scientific data processing](http://scikit-learn.org/stable/tutorial/statistical_inference/index.html)\r\n* [Practical Machine Learning in Python - Matt Spitz (2012)](https://www.youtube.com/watch?v=__s45TTXxps)\r\n* [Intro to Interactive Predictive Analytics in Python with scikit-learn - Olivier Grisel (PyCon 2012)](http://www.youtube.com/watch?v=Zd5dfooZWG4)\r\n* [How to Get Started with Machine Learning - Melanie Warrick (PyCon 2014)](https://www.youtube.com/watch?v=uBorfxosVYs)\r\n* [Social Network Analysis With Python - Maksim Semeniuk (2012)](http://www.youtube.com/watch?v=Zd5dfooZWG4)\r\n* [Intro to scikit-learn: Machine Learning in Python - Jake VanderPlas & Olivier Grisel (PyCon 2014)](https://www.youtube.com/watch?v=HjAB45qsx_c), [2014 tutorial materials](https://github.com/jakevdp/sklearn_pycon2014), [2013 tutorial materials](https://github.com/jakevdp/sklearn_pycon2013) & [Jake VanderPlas (PyData 2012)](http://www.youtube.com/watch?v=cHZONQ2-x7I)\r\n* [Intro to Scikit-Learn - Jake Vanderplas](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/17_SklearnIntro.html), [Intermediate Scikit-Learn](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/18_IntermediateSklearn.html)\r\n* [Diving deeper into Machine Learning with Scikit-learn - Olivier Grisel and Jake VanderPlas (PyCon 2014)](https://www.youtube.com/watch?v=FOZvHx-43pg)\r\n* [Advanced Machine Learning with scikit-learn - Olivier Grisel (2013)](https://www.youtube.com/watch?v=iFkRt3BCctg)\r\n* [Statistical Machine Learning for Text Classification With Scikit-learn and NLTK - Olivier Grisel (PyCon 2011)](http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-statistical-machine-learning-for-text-classification-with-scikit-learn-4898362)\r\n* [Scikit-learn video tutorials](http://scikit-learn.org/stable/presentations.html)\r\n* [Enough Machine Learning to Make Hacker News Readable Again - Ned Jackson Lovely (PyGotham 2014)](http://pyvideo.org/video/3321/enough-machine-learning-make-hacker-news-readable-) & [(PyCon 2014](https://www.youtube.com/watch?v=O7IezJT9uSI)\r\n* [Building a Beer Recommender](http://docs.yhathq.com/scienceops/deploying-models/examples/python/deploy-a-beer-recommender.html), [slides](http://www.slideshare.net/Yhat/building-a-beer-recommender-with-yhat-papisio-november-2014) & [live demo](https://beers.yhathq.com/)\r\n* [Forecasting beer consumption with sklearn](http://glowingpython.blogspot.ie/2015/01/forecasting-beer-consumption-with.html)\r\n* [scikit-learn-book - gmonce](http://nbviewer.ipython.org/github/gmonce/scikit-learn-book/tree/master/)\r\n\r\n#### PYTHON - DATA ANALYSIS - SCIPY\r\n\r\n* [SciPy Reference Guide](http://docs.scipy.org/doc/scipy/reference/) & [PDF](http://docs.scipy.org/doc/scipy/scipy-ref-0.14.0.pdf)\r\n* [SciPy Cookbook](http://wiki.scipy.org/Cookbook)\r\n* [Scientific Python lecture notes - EuroScipy tutorial team](http://scipy-lectures.github.io/) & [PDF](http://scipy-lectures.github.io/_downloads/PythonScientific-simple.pdf)\r\n* [SciPy: Library of scientific algorithms for Python - JR Johansson](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-3-Scipy.ipynb)\r\n* [Topical Software (add-on software relevant to SciPy, categorized by scientific discipline or computational topic)](http://scipy.org/topical-software.html)\r\n\r\n#### PYTHON - DATA ANALYSIS - SPYRE\r\n\r\n* [Live example](http://adamhajari.com/)\r\n* [Spyre (Github)](https://github.com/adamhajari/spyre)\r\n* [From DataFrame to Web Application in 10 Minutes - Adam Hajari (PyData NYC 2014)](https://www.youtube.com/watch?v=jPSP9aMs_3U)\r\n\r\n#### PYTHON - DATA ANALYSIS - SQL\r\n\r\n* [Comparing Pandas with SQL](http://pandas.pydata.org/pandas-docs/stable/comparison_with_sql.html)\r\n* [Translating SQL to pandas. And back - Greg Reda (PyData NYC 2014)](https://www.youtube.com/watch?v=1uVWjdAbgBg)\r\n* [pandasql (query Pandas with SQL)](https://pypi.python.org/pypi/pandasql)\r\n\r\n#### PYTHON - DATA ANALYSIS - STATSMODELS\r\n\r\n* [StatsModels documentation](http://statsmodels.sourceforge.net/stable/index.html)\r\n* [Statsmodels](http://statsmodels.sourceforge.net/)\r\n* [Statsmodels tutorial - Skipper Seabold (ciPy 2012)](https://www.youtube.com/watch?v=RWRsxhUzpxk) & [code](https://github.com/jseabold/tutorial)\r\n* [Included datasets](http://statsmodels.sourceforge.net/devel/datasets/index.html)\r\n* [Multiple Regression using Statsmodels](http://nbviewer.ipython.org/urls/s3.amazonaws.com/datarobotblog/notebooks/multiple_regression_in_python.ipynb)\r\n\r\n#### PYTHON - DATA ANALYSIS - SYMPY\r\n\r\n* [SymPy documentation](http://docs.sympy.org/latest/index.html)\r\n* [Symbolic Computing With SymPy (SciPy 2013) - 1](http://www.youtube.com/watch?v=dAgShwIx72c) [2](http://www.youtube.com/watch?v=trhmGmyTNuo) [3](http://www.youtube.com/watch?v=JDztSdQqh0o) [4](http://www.youtube.com/watch?v=q9DUdZ3flfk) [5](http://www.youtube.com/watch?v=PC1GPUteZs0) & [6](http://www.youtube.com/watch?v=wPD7Y0sCO4I)\r\n* [Sympy - Symbolic algebra in Python - JR Johansson](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-5-Sympy.ipynb)\r\n\r\n#### PYTHON - DATA ANALYSIS - VIDEOS\r\n\r\n* [PyData NYC 2015 conference videos](https://www.youtube.com/playlist?list=PLGVZCDnMOq0ourWlul1F7aYE30VQPaMRL)\r\n* [PyData conference videos](https://www.youtube.com/user/PyDataTV)\r\n\r\n#### PYTHON - DATA ANALYSIS - XRAY\r\n\r\n* [xray - Pandas-like and pandas-compatible toolkit for analytics on multi-dimensional arrays](https://github.com/xray/xray)\r\n\r\n### PYTHON - DATABASE ADAPTERS\r\n\r\n* [Psycopg (for PostgreSQL)](http://initd.org/psycopg/)\r\n* [Psycopg tutorial](https://wiki.postgresql.org/wiki/Psycopg2_Tutorial)\r\n* [PyMySql (for MySQL)](https://github.com/PyMySQL/PyMySQL)\r\n* [PyMySql tutorial](http://nbviewer.ipython.org/gist/slarson/6745890)\r\n\r\n### PYTHON - DJANGO\r\n\r\n* [DjangoCon.us 2016 videos](http://confreaks.tv/events/djancoconus2016)\r\n* [DjangoCon 2014 videos](http://www.confreaks.tv/events/DjangoCon2014)\r\n\r\n### PYTHON - DOCUMENTATION\r\n\r\n* [Basic Doctest Python - Daniel Arbuckle](https://www.packtpub.com/books/content/basic-doctest-python)\r\n* [doctest: Test interactive Python examples](https://docs.python.org/2/library/doctest.html)\r\n* [Intro to doctest2 for existing users of doctest](https://pythonhosted.org/doctest2/intro_for_existing.html)\r\n* [Documentation, Testing and Packaging - Jake Vanderplas](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/20_DocsAndTesting.html)\r\n\r\n### PYTHON - FALCON (API FRAMEWORK)\r\n\r\n* [Falcon API framework](http://falconframework.org/)\r\n\r\n### PYTHON - FINANCE\r\n\r\n* [QuantStart.com](http://www.quantstart.com/articles)\r\n* [Financial analysis Python tutorial - Thomas Wiecki](http://nbviewer.ipython.org/github/twiecki/financial-analysis-python-tutorial/tree/master/)\r\n* [Python for Quant Finance - Yves Hilpisch (PyData NY 2014)](https://www.youtube.com/watch?v=ksaMXd3knZg)\r\n* [Python Charting Stocks/Forex for Technical Analysis - Sentdex](https://www.youtube.com/watch?v=u6Xd3kRHhJI&index=1&list=PLQVvvaa0QuDc2QjQOkZ4rtLYZVll_sZFZ)\r\n* [Quantopian - the people behind Zipline](https://www.quantopian.com/)\r\n* [Building Quant Equity Strategies in Python - Dr. Jess Stauth](https://www.youtube.com/watch?v=nCKzRY_JV4c)\r\n* [ultra-finance - real-time financial data collection, analyzing & backtesting trading strategies](http://code.google.com/p/ultra-finance/)\r\n* [Practical Approaches to Problems in the Financial Industry using Python - Andy Fundinger (PyGotham 2014)](https://www.youtube.com/watch?v=PVkHqdsyRfQ)\r\n* [Quant.StackExchange.com](http://quant.stackexchange.com/)\r\n\r\n#### PYTHON - FINANCE - IBPY\r\n\r\n* [IbPy (Interactive Brokers online trading system Python API](https://github.com/blampe/IbPy)\r\n* [How to use IBPy Python with Interactive Brokers TWS API For Automated Trading - Sentdex](https://www.youtube.com/watch?v=Bu0kpU-ozaw)\r\n* [Using Python, IbPy and the Interactive Brokers API to Automate Trades](http://www.quantstart.com/articles/Using-Python-IBPy-and-the-Interactive-Brokers-API-to-Automate-Trades)\r\n\r\n#### PYTHON - FINANCE - TA-LIB\r\n\r\n* [ta-lib (Python wrapper for TA-Lib)](https://github.com/mrjbq7/ta-lib)\r\n* [TA-lib: Technical Analysis Library](http://ta-lib.org/)\r\n\r\n#### PYTHON - FINANCE - QUANTLIB\r\n\r\n* [The QuantLib Notebooks](http://implementingquantlib.blogspot.com/p/notebooks.html)\r\n* [Implementing QuantLib - Luigi Ballabio](http://implementingquantlib.blogspot.com/p/the-book.html)\r\n\r\n#### PYTHON - FINANCE - ZIPLINE\r\n\r\n* [Algorithmic Trading with Zipline - Thomas Wiecki](https://www.youtube.com/watch?v=Qva7uxmOZuA)\r\n* [Zipline - algorithmic trading library](https://github.com/quantopian/zipline) & [docs](http://zipline.readthedocs.org/en/latest/)\r\n\r\n### PYTHON - FUNCTIONAL PROGRAMMING\r\n\r\n#### PYTHON - FUNCTIONAL PROGRAMMING - MOCHI\r\n\r\n* [Mochi](https://pypi.python.org/pypi/mochi)\r\n\r\n### PYTHON - GAMES\r\n\r\n* [Making Games with Python & Pygame](http://inventwithpython.com/makinggames.pdf)\r\n* [Invent Your Own Computer Games With Python, 2nd ed](http://inventwithpython.com/IYOCGwP_book1.pdf)\r\n* [PyGame.org](http://www.pygame.org/) & [tutorials](http://pygame.org/wiki/tutorials)\r\n\r\n#### PYTHON - GAMES - CHESS\r\n\r\n* [Jerry](https://asdfjkl.github.io/jerry/) & [Building Jerry](https://buildingjerry.wordpress.com/)\r\n* [PyStockfish (chess engine)](https://github.com/iamjarret/pystockfish)\r\n* [Sunfish (simple, extensible chess program)](https://github.com/thomasahle/sunfish)\r\n* [Chessnut (another simple chess program](https://github.com/cgearhart/Chessnut)\r\n* [PyChess.org](http://pychess.org/)\r\n* [TalkChess.com computer chess club (not just Python)](http://talkchess.com/forum/index.php)\r\n\r\n### PYTHON - GETTING STARTED\r\n\r\n* Why use Python? Personally, I was blown away by [Python's statistical analysis tools](http://nbviewer.ipython.org/github/JamesLavin/my_tech_resources/blob/master/PythonStatsOverview.ipynb) and [the amazing interactive graphics producible with data processed by Python](http://nbviewer.ipython.org/github/JamesLavin/my_tech_resources/blob/master/D3_examples.ipynb). Some examples: [time-series (ARMA) modeling/forecasting](http://nbviewer.ipython.org/github/JamesLavin/my_tech_resources/blob/master/ARMA_example.ipynb), [discrete-choice modeling](http://statsmodels.sourceforge.net/devel/examples/notebooks/generated/discrete_choice_example.html), [vector autoregression modeling/forecasting](http://nbviewer.ipython.org/github/JamesLavin/my_tech_resources/blob/master/VAR_oil_interest_sp500.ipynb)\r\n* I use and recommend [Anaconda](https://store.continuum.io/cshop/anaconda/): [Docs](http://conda.pydata.org/docs/), [Install Anaconda](http://continuum.io/downloads) & [Getting started guide](https://store.continuum.io/static/img/Anaconda-Quickstart.pdf)\r\n* I use and recommend using [iPython Notebook](#python---ipython-notebook). A great way to start is by skimming through some of the many iPython Notebooks on the web. You can find many at [this gallery of links to iPython Notebooks](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks).\r\n* I recommend [these Python learning materials](#python---learning---basics) and [these free online books](#python---learning---books)\r\n* If you're feeling ambitious and don't want to start with Python but jump straight to data analysis, the Harvard CS 109 (\"Data Science\") lectures listed under [PYTHON - DATA ANALYSIS](https://github.com/JamesLavin/my_tech_resources#python---data-analysis) seem excellent.\r\n\r\n#### PYTHON - GETTING STARTED - ANACONDA\r\n\r\n* If you're installing Python on your computer, I recommend Continuum Analytics' [Anaconda](https://store.continuum.io/cshop/anaconda/).\r\n* [Advanced Features of Conda Part 1](http://continuum.io/blog/advanced-conda-part-1) & [Part 2](http://continuum.io/blog/advanced-conda-part-2)\r\n\r\n### PYTHON - GENERATORS & ITERATORS\r\n\r\n* [Loop like a native: while, for, iterators, generators - Ned Batchelder](https://www.youtube.com/watch?v=EnSu9hHGq5o)\r\n* [Python generator functions for massive performance improvements with lists - sentdex](https://www.youtube.com/watch?v=07-K4LFhBMc)\r\n* [Iteration and generators: The Python way](https://www.youtube.com/watch?v=z4P6hSa6K9g)\r\n* [Fun with iterators and generators - Malcolm Tredinnick](https://www.youtube.com/watch?v=vD-JJD5tlIg)\r\n* [Generators: The Final Frontier - David Beazley (PyCon 2014)](https://www.youtube.com/watch?v=D1twn9kLmYg)\r\n\r\n### PYTHON - GRAMPS (GENEALOGY)\r\n\r\n* [Gramps Python project](https://pypi.python.org/pypi/Gramps)\r\n* [Gramps project](https://gramps-project.org/features/)\r\n\r\n### PYTHON - GRAPHICS\r\n\r\n* [Up and Down the Python Data and Web Visualization Stack - Rob Story (PyData 2014 Silicon Valley)](https://www.youtube.com/watch?v=kmy-sfm3cC8)\r\n\r\n#### PYTHON - GRAPHICS - 3D VISUALIZATION\r\n\r\n* [MayaVI](http://docs.enthought.com/mayavi/mayavi/) & [Github repo](https://github.com/enthought/mayavi)\r\n\r\n#### PYTHON - GRAPHICS - AVOPLOT\r\n\r\n* [Life After Matplotlib: Harder, Better, Faster, Stronger - Kayla Iacovino (PyData 2014 London)](https://www.youtube.com/watch?v=_Bm8M9IwuFk)\r\n\r\n#### PYTHON - GRAPHICS - BEARCART\r\n\r\n* [Bearcart (Pandas time series -> Rickshaw.js)](https://github.com/wrobstory/bearcart)\r\n\r\n#### PYTHON - GRAPHICS - BOKEH\r\n\r\n* [Data Applications with Bokeh - Bryan Van De Ven (PyData 2016)](https://www.youtube.com/watch?v=M1-MVYLONZc)\r\n* [Bokeh in iPython Notebook - ContinuumIO](http://nbviewer.ipython.org/github/ContinuumIO/bokeh-notebooks/blob/master/index.ipynb)\r\n* [Tutorial](http://bokeh.pydata.org/tutorial/index.html)\r\n* [Gallery](http://bokeh.pydata.org/docs/gallery.html)\r\n* [Bokeh User Guide](http://bokeh.pydata.org/docs/user_guide.html)\r\n* [Bokeh Reference](http://bokeh.pydata.org/docs/reference.html)\r\n* [New in Bokeh 0.6](http://continuum.io/blog/bokeh-0.6)\r\n* [Interactive Browser Visualizations from Python with Bokeh - Bryan Van De Ven (PyData 2014)](https://www.youtube.com/watch?v=hjW4gL9hioY) & [tutorial files](http://cdn.pydata.org/BokehTutorial.tgz) & [slides](http://www.slideshare.net/PyData/pydata-london-bokeh-tutorial-bryan-van-de-ven)\r\n* [Bokeh: An Extensible Implementation of the Grammar of Graphics in Python - Peter Wang & Hugo Shi (2012)](https://www.youtube.com/watch?v=6_aE0kAedL0)\r\n* [Data Analysis with Python, Pandas, and Bokeh - Chris Metcalf](http://dev.socrata.com/consumers/examples/data-visualization-with-python.html)\r\n\r\n#### PYTHON - GRAPHICS - GGPLOT\r\n\r\n* [Ggplot for Python - Greg Lamp (PyData 2014 Silicon Valley)](https://www.youtube.com/watch?v=pHrwqLhAaMw), [Github tutorial](https://github.com/glamp/ggplot-tutorial) & [slides](http://www.slideshare.net/Yhat/ggplot-for-python)\r\n* [Analyzing MLB data with ggplot - Greg Lamp](http://blog.yhathq.com/posts/facebook-ggplot-tutorial.html) & [slides](http://www.slideshare.net/Yhat/analyzing-mlb-data-with-ggplot)\r\n\r\n#### PYTHON - GRAPHICS - MAPS\r\n\r\n* [Making Interactive Maps For the Web - Zain Memon (2012)](https://www.youtube.com/watch?v=g0CankXpFZg)\r\n* [Spatial Data and Web Mapping With Python](https://www.youtube.com/watch?v=qmgh14LUOjQ)\r\n* [Using Geospatial Data with Python - Kelsey Jordahl (SciPy2013), Part 1 of 6](https://www.youtube.com/watch?v=1fzQKMp_tdE), [Part 2](https://www.youtube.com/watch?v=TTEr_nv43TE), [Part 3](https://www.youtube.com/watch?v=QgMJKe7QBP0), [Part 4](https://www.youtube.com/watch?v=UQrHpylmkVk), [Part 5](https://www.youtube.com/watch?v=HJO8OzmFIYU), [Part 6](https://www.youtube.com/watch?v=LDwqkV8gdpM)\r\n\r\n##### PYTHON - GRAPHICS - MAPS - FOLIUM\r\n\r\n* [Folium (Python Data -> Leaflet.js Maps)](https://github.com/wrobstory/folium)\r\n\r\n#### PYTHON - GRAPHICS - MATPLOTLIB\r\n\r\n* [Intro Notes: Matplotlib](https://drive.google.com/folderview?id=0ByIrJAE4KMTtaGhRcXkxNHhmY2M)\r\n* Matplotlib [API](http://matplotlib.org/api/), [PDF documentation](http://matplotlib.org/Matplotlib.pdf), [examples index](http://matplotlib.org/examples/index.html), [examples gallery](http://matplotlib.org/gallery.html) & [screenshots gallery](http://matplotlib.org/users/screenshots.html)\r\n* Pyplot [API](http://matplotlib.org/api/pyplot_summary.html)\r\n* [Matplotlib - Chris Fonnesbeck](http://nbviewer.ipython.org/github/fonnesbeck/Bios366/blob/master/notebooks/Section2_4-Matplotlib.ipynb)\r\n* [Matplotlib Intro - Jake Vanderplas](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/06_MatplotlibIntro.html) [Matplotlib In-depth](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/12_AdvancedMatplotlib)\r\n* [Beyond Defaults: Creating Polished Visualizations Using Matplotlib - Hannah Aizenman (PyConUS 2014)](http://pyvideo.org/video/2579/beyond-defaults-creating-polished-visualizations)\r\n* [Matplotlib: Past, Present and Future - Michael Droettboom (SciPy 2013)](http://www.youtube.com/watch?v=gj5i_19Bftk)\r\n* [Matplotlib - 2D and 3D plotting in Python - JR Johansson](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb)\r\n* [Tutorial: Advanced Matplotlib - library author John Hunter](https://www.youtube.com/watch?v=DNRJwENqEUY)\r\n* [Plotting With MatPlotLib - Mike Müller](http://www.youtube.com/watch?v=P7SVi0YTIuE)\r\n* [Intro to NumPy and Matplotlib](http://www.youtube.com/watch?v=3Fp1zn5ao2M)\r\n* [An exercise with matplotlib and numpy](http://software-carpentry.org/blog/2012/05/an-exercise-with-matplotlib-and-numpy.html)\r\n* [matplotlib: Lessons From Middle Age - John Hunter](http://www.youtube.com/watch?v=e3lTby5RI54)\r\n* [Advanced Matplotlib - Ryan May](http://www.youtube.com/watch?v=AmpWIC5SctY)\r\n* [Plotting With Matplotlib - Mike Mueller](http://www.youtube.com/watch?v=P7SVi0YTIuE)\r\n* [Anatomy of Matplotlib (1 of 3) - Benjamin Root (SciPy 2013)](https://www.youtube.com/watch?v=FhMmhYV7tNw), [(2 of 3)](https://www.youtube.com/watch?v=c553uCRmEVc), [(3 of 3)](https://www.youtube.com/watch?v=UozWLFgF1_E) & [iPython Notebooks](http://nbviewer.ipython.org/github/WeatherGod/AnatomyOfMatplotlib/tree/master/)\r\n\r\n##### PYTHON - GRAPHICS - MATPLOTLIB - MPLD3\r\n\r\n* [MPLD3](http://mpld3.github.io/)\r\n\r\n##### PYTHON - GRAPHICS - MATPLOTLIB - SEABORN\r\n\r\n* [Seaborn: Statistical data visualization](http://stanford.edu/~mwaskom/software/seaborn/)\r\n* [Gallery](http://stanford.edu/~mwaskom/software/seaborn/examples/index.html#example-gallery)\r\n* [Tutorial](http://stanford.edu/~mwaskom/software/seaborn/tutorial.html#tutorial)\r\n\r\n#### PYTHON - GRAPHICS - TUFTE SLOPE GRAPHS\r\n\r\n* [Tufte slope graphs](https://github.com/pascal-schetelat/Slope) & [example](http://nbviewer.ipython.org/gist/pascal-schetelat/8382651)\r\n\r\n#### PYTHON - GRAPHICS - VINCENT\r\n\r\n* [Vincent (Python to Vega translator)](https://github.com/wrobstory/vincent)\r\n* [Intro to Pandas and Vincent](http://neckbeardrepublic.com/screencasts/pandas-vincent)\r\n* [Mapping Data in Python with Pandas and Vincent](http://wrobstory.github.io/2013/10/mapping-data-python.html)\r\n\r\n### PYTHON - IPYTHON NOTEBOOK / Jupyter\r\n\r\n* [All About Jupyter - Brian Granger](https://www.youtube.com/watch?v=GMKZD1Ohlzk)\r\n* [iPython](http://ipython.org/)\r\n* [Documentation](http://ipython.org/ipython-doc/dev/notebook/index.html) & [Keyboard Shortcuts](http://ipython.org/ipython-doc/1/interactive/notebook.html#keyboard-shortcuts) & [Cookbook](https://github.com/ipython/ipython/wiki/Cookbook%3A-Index)\r\n* [Quick reference sheets](http://damontallen.github.io/IPython-quick-ref-sheets/)\r\n* [The iPython Notebook Revolution - Catherine Devlin (2013)](https://www.youtube.com/watch?v=t_TzRaK9kpU)\r\n* [Gallery of interesting iPython Notebooks](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks)\r\n* [iPython.org example notebooks](http://nbviewer.ipython.org/github/ipython/ipython/tree/1.x/examples/notebooks/)\r\n* [Learning iPython for Interactive Computing and Data Visualization - Cyrille Rossant](http://ipython-books.github.io/minibook/)\r\n* [iPython Interactive Computing and Visualization Cookbook](http://ipython-books.github.io/cookbook/)\r\n* [iPython Minibook code - Cyrille Rossant](https://github.com/rossant/ipython-minibook)\r\n* [IPython: Python at your fingertips - Fernando Pérez (PyCon 2012)](https://www.youtube.com/watch?v=26wgEsg9Mcc)\r\n* [IPython In Depth: High-Productivity Interactive and Parallel Python - Fernando Pérez (PyCon 2014)](https://www.youtube.com/watch?v=XFw1JVXKJss) & [(PyCon 2012)](https://www.youtube.com/watch?v=2G5YTlheCbw)\r\n* [iPython: Tools for the Entire Lifecycle of Research Computing - Fernando Perez et al. (ciPy 2012)](https://www.youtube.com/watch?v=iwVvqwLDsJo)\r\n* [Mining Social Web APIs With iPython Notebook - Matthew Russell (PyCon 2014)](https://www.youtube.com/watch?v=jpCG792tVt0)\r\n\r\n#### PYTHON - IPYTHON NOTEBOOK - DEBUGGING\r\n\r\n* [%debug, %pdb, and %run -d xyz.py](http://ipython.org/ipython-doc/1/interactive/tutorial.html#debugging)\r\n* [Using the Python debugger](http://scipy-lectures.github.io/advanced/debugging/#using-the-python-debugger)\r\n\r\n#### PYTHON - IPYTHON NOTEBOOK - INTERESTING NOTEBOOKS\r\n\r\n* [Gallery of Interesting iPython Notebooks](https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks)\r\n\r\n#### PYTHON - IPYTHON NOTEBOOK - MAGIC\r\n\r\n* [Cell Magics](http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cell%20Magics.ipynb)\r\n* [Cython Magic Functions](http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cython%20Magics.ipynb)\r\n\r\n#### PYTHON - IPYTHON NOTEBOOK - NBCONVERT\r\n\r\n* Converts iPython Notebooks to HTML, Latex, Reveal.js slideshows, Markdown, reStructured Text, or Python scripts\r\n* Now [part of iPython](https://github.com/ipython/ipython/tree/master/IPython/nbconvert)\r\n* [Converting notebooks to other formats](http://ipython.org/ipython-doc/rel-1.0.0/interactive/nbconvert.html)\r\n\r\n#### PYTHON - IPYTHON NOTEBOOK - NOTEBOOK.JS\r\n\r\n* [Notebook.js (render iPython notebooks on the fly in the browser or node.js)](https://github.com/jsvine/notebookjs/)\r\n\r\n### PYTHON - LEARNING\r\n\r\n#### PYTHON - LEARNING - BASICS\r\n\r\n* [Simple programs](https://wiki.python.org/moin/SimplePrograms)\r\n* [Programming for Absolute Beginners: Building Skills in Programming - Steven F. Lott](http://buildingskills.itmaybeahack.com/book/programming-2.6/latex/ProgrammingforNon-Programmers.pdf)\r\n* Beginner's Guide: [For Non-Programmers](https://wiki.python.org/moin/BeginnersGuide/NonProgrammers) | [For Programmers](https://wiki.python.org/moin/BeginnersGuide/Programmers)\r\n* [Google's Python Class](https://developers.google.com/edu/python/)\r\n* [Hackr.io Python resources list](https://hackr.io/tutorials/python)\r\n* [Introduction to Programming With Python - Microsoft Virtual Academy (Jumpstart)](https://www.youtube.com/watch?v=9uq3w6JJS00)\r\n* [Coursera.org Python courses](https://www.coursera.org/courses?query=Python)\r\n* [EdX.org Python courses](https://www.edx.org/course?search_query=Python)\r\n* [Udemy.com Python courses](https://www.udemy.com/courses/search/?q=Python&p=1&price=price-free&view=grid) & [non-free](https://www.udemy.com/courses/search/?ref=home&q=Python)\r\n* [Python Notes/Cheatsheet](https://drive.google.com/folderview?id=0ByIrJAE4KMTtaGhRcXkxNHhmY2M)\r\n* [Beginner Python 3+ tutorials - Harrison Kinsley](http://pythonprogramming.net/beginner-python-programming-tutorials/) & [All tutorials](http://pythonprogramming.net/dashboard/)\r\n* [Python 3 Tutorial - Bernd Klein](http://www.python-course.eu/python3_course.php) or [Python 2 Tutorial](http://www.python-course.eu/course.php)\r\n* [Learn to Program: The Fundamentals - Jennifer Campbell and Paul Gries - U of Toronto (Coursera)](https://www.coursera.org/course/programming1)\r\n* [Programming Foundations with Python: Learn Object-Oriented Programming - Kunal Chawla (Udacity)](https://www.udacity.com/course/ud036)\r\n* [Python for Informatics: Exploring Information - Charles Severance](http://www.pythonlearn.com/book.php), [PDF](http://www.pythonlearn.com/book_008.pdf) & [videos](http://pythonlearn.com/)\r\n* [Intro to Python - Keven Sheppard](http://www.kevinsheppard.com/Python_Course#YouTube_Catch-up)\r\n* [Programming for Everybody (Getting Started with Python) - Charles Severance (University of Michigan)](https://www.coursera.org/learn/python)\r\n* [Python Data Structures - Charles Severance (University of Michigan)](https://www.coursera.org/learn/python-data)\r\n* [Using Python to Access Web Data - Charles Severance (University of Michigan)](https://www.coursera.org/learn/python-network-data)\r\n* [Using Databases With Python - Charles Severance (University of Michigan)](https://www.coursera.org/learn/python-databases)\r\n* [Let's Learn Python - Trevor Payne](https://www.youtube.com/user/TPayneExperience/playlists?sort=dd&shelf_id=2&view=50)\r\n* [Hello, Little Turtles!](http://interactivepython.org/runestone/static/thinkcspy/PythonTurtle/helloturtle.html)\r\n* [Python Programming - Introduction - TDChannel](https://www.youtube.com/watch?v=72RKMMyLxS8)\r\n* Google's Python Class: [Website](https://developers.google.com/edu/python/), [Google Python Class Day 1, Pt 1: Intro & Strings](https://www.youtube.com/watch?v=tKTZoB2Vjuk), [Day 1, Pt 2: Lists, Sorting and Tuples](https://www.youtube.com/watch?v=EPYupizJYQI), [Day 1, Pt 3](https://www.youtube.com/watch?v=haycL41dAhg), [Day 2, Pt 1: Regular Expressions](https://www.youtube.com/watch?v=kWyoYtvJpe4), [Day 2, Pt 2: Utilities: OS & Commands](https://www.youtube.com/watch?v=uKZ8GBKmeDM), [Day 2, Pt 3: Utilities: URLs, and HTTP, Exceptions](https://www.youtube.com/watch?v=Nn2KQmVF5Og), [Day 2, Pt 4: Closing Thoughts](https://www.youtube.com/watch?v=IcteAbMC1Ok)\r\n* [An Introduction to Interactive Programming in Python - Rice University (Coursera)](https://www.coursera.org/course/interactivepython1) & [Course 2](https://www.coursera.org/course/interactivepython2)\r\n* [Short Python tutorials - Bucky Roberts](https://www.youtube.com/watch?v=4Mf0h3HphEA&list=PLEA1FEF17E1E5C0DA)\r\n* [Python for Programmers: A Project-Based Tutorial - Alexandra Strong, Kantharine Jarmul and Christine Cheung](https://www.youtube.com/watch?v=Nc16qeGBtMU)\r\n* [Documentation, Testing, and Packaging - Jake Vanderplas](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/20_DocsAndTesting.html)\r\n* [Introduction to Computer Science and Programming - MIT](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/unit-1/lecture-1-introduction-to-6.00/) & [on Youtube](https://www.youtube.com/watch?v=Mx0uXIBD-yA&index=1&list=PLd-dSvYArSy20Yfx1UxoiiAX1tl863Azo)\r\n* [An introduction to Python for absolute beginners - Bob Dowling](http://www.ucs.cam.ac.uk/docs/course-notes/unix-courses/PythonAB/files/handout.pdf)\r\n* [Introduction to Python for Computational Science and Engineering (A Beginner's Guide) - Hans Fangohr](http://www.southampton.ac.uk/~fangohr/training/python/pdfs/Python-for-Computational-Science-and-Engineering.pdf)\r\n* [Intro to Computer Science and Programming Using Python (part 1) - MIT](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-0)\r\n* [Introduction to Programming Using Python - Brian Heinold](http://faculty.msmary.edu/heinold/IntroductionToProgrammingUsingPython_Heinold.pdf)\r\n* [Python Design Patterns 1 - Brandon Rhodes](https://www.youtube.com/watch?v=Er5K_nR5lDQ)\r\n* [Hands-On Introduction to Using Python in the Atmospheric and Oceanic Sciences - Johnny Wei-Bing Lin (free 1st ed)](http://www.johnny-lin.com/pyintro/ed01/)\r\n* [Object Oriented Design - Niko Wilbert](https://python.g-node.org/python-summerschool-2013/_media/wiki/oop/oo_design_2013.pdf)\r\n* [How to write actually object-oriented Python - Per Fagrell (PyGotham 2014)](https://www.youtube.com/watch?v=VUvEDg30FyY)\r\n* [The Hitchiker's Guide to Python](http://docs.python-guide.org/en/latest/)\r\n* [Command line Python scripts](http://www.curiousvenn.com/2013/06/notes-from-mpug-june-2013-python-one-liners-talk/)\r\n* [A hands-on introduction to Python for beginning programmers - Jessica McKellar (PyCon 2014)](https://www.youtube.com/watch?v=MirG-vJOg04) & [(PyCon 2013)](https://www.youtube.com/watch?v=rkx5_MRAV3A)\r\n* [Intro to Electrical Engineering and Computer Science I - MIT](http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-01sc-introduction-to-electrical-engineering-and-computer-science-i-spring-2011/)\r\n* [Learn Python the Hard Way](http://learnpythonthehardway.org/book/index.html)\r\n* The best way to learn Python - Charl Botha: [Part 1: Install Anaconda on Linux](https://www.youtube.com/watch?v=NwyIuWK80gQ), [Part 2: Install Anaconda on Windows](https://www.youtube.com/watch?v=oXnnRpTGT2M), [Part 3: Variables, control flow, plotting!](https://www.youtube.com/watch?v=84WRAisoEas), [Part 4: slicing, string interpolation, list comprehension](https://www.youtube.com/watch?v=KZRrY9uzO7c), [Part 5: Object-oriented programming and bouncing balls](https://www.youtube.com/watch?v=yJunB_tV1QI)\r\n* [Visualize Python code execution](http://www.pythontutor.com/visualize.html)\r\n* [Gotcha — Mutable default arguments](http://pythonconquerstheuniverse.wordpress.com/2012/02/15/mutable-default-arguments/) & [Common Gotchas](http://docs.python-guide.org/en/latest/writing/gotchas/)\r\n* [Python Koans](https://github.com/gregmalcolm/python_koans)\r\n\r\n#### PYTHON - LEARNING - BOOKS (FREE)\r\n\r\n* [A Byte of Python](http://files.swaroopch.com/python/byte_of_python.pdf)\r\n* [Python Programming](http://upload.wikimedia.org/wikipedia/commons/9/91/Python_Programming.pdf)\r\n* [Python Tutorial (TutorialsPoint.com)](http://www.tutorialspoint.com/python/python_tutorial.pdf)\r\n* [The Python Tutorial (Python 3)](http://docs.python.org/3.4/tutorial/index.html) & [Python 2](http://docs.python.org/2/tutorial/index.html)\r\n* [Think Complexity](http://greenteapress.com/complexity/thinkcomplexity.pdf)\r\n* [Think Python](http://www.greenteapress.com/thinkpython/thinkpython.pdf)\r\n* [Programming Python, 4th ed](http://it-ebooks.info/go.php?id=614-1376544793-f29d5b06b99ac32ba63d667a79d38ce9)\r\n* [Building Skills in Python](http://www.itmaybeahack.com/book/python-2.6/latex/BuildingSkillsinPython.pdf)\r\n* [Dive into Python 3](https://github.com/downloads/diveintomark/diveintopython3/dive-into-python3.pdf)\r\n* [Building Skills in Object-Oriented Design](http://slav0nic.org.ua/static/books/python/oodesign.pdf)\r\n* [Hacking Secret Ciphers with Python](http://inventwithpython.com/hackingciphers.pdf)\r\n* [Hands-On Python Tutorial](http://anh.cs.luc.edu/python/hands-on/3.1/Hands-onPythonTutorial.pdf)\r\n* [How to Think Like a Computer Scientist: Learning with Python](http://interactivepython.org/runestone/static/thinkcspy/index.html) & [PDF](https://cs.nyu.edu/courses/fall12/CSCI-UA.0002-006/misc/httlacs.pdf)\r\n* [Official Python Documentation](https://docs.python.org/3/download.html)\r\n\r\n#### PYTHON - LEARNING - VIDEOS\r\n\r\n* [PyVideo.org](http://www.pyvideo.org/category)\r\n* [PyCon 2016](https://www.youtube.com/channel/UCwTD5zJbsQGJN75MwbykYNw/videos)\r\n* [Khan Academy](http://www.khanacademy.org/science/computer-science/v/introduction-to-programs-data-types-and-variables)\r\n* [Introduction to Computational Thinking and Data Science - MIT](https://www.edx.org/course/mitx/mitx-6-00-2x-introduction-computational-1505)\r\n* [Python Fundamentals Training](http://www.youtube.com/playlist?list=PL26BA8B9FC33789FF&feature=plcp)\r\n* [Python Course - Kevin Sheppard (University of Oxford)](http://www.kevinsheppard.com/Python_Course)\r\n* [Python for Developers - Luiz Eduardo Borges](http://ricardoduarte.github.io/python-for-developers/)\r\n* [Transforming Code into Beautiful, Idiomatic Python - Raymond Hettinger (2013)](https://www.youtube.com/watch?v=OSGv2VnC0go)\r\n* [Python 3.3: Trust Me, It's Better Than 2.7 - Brett Cannon (PyCon US 2013](https://www.youtube.com/watch?v=f_6vDi7ywuA)\r\n* [Python for Ruby Programmers - Mike Leone (LA Ruby Conf 2013)](https://www.youtube.com/watch?v=maSlTKMzR3Q)\r\n* [PyGotham 2014 talks (click on talk to see video link)](http://pygotham.org/talks/schedule)\r\n* [Super Advanced Python - Raymond Chandler III](https://www.youtube.com/watch?v=u2KZJzoz-qI)\r\n* [Keynote - Raymond Hettinger (2013)](https://www.youtube.com/watch?v=NfngrdLv9ZQ)\r\n* [All Your Ducks In A Row: Data Structures in the Std Lib and Beyond - Brandon Rhodes (PyCon 2014)](https://www.youtube.com/watch?v=fYlnfvKVDoM)\r\n* [Militarizing Your Backyard with Python: Computer Vision and the Squirrel Hordes - Kurt Grandis (PyCon 2012)](https://www.youtube.com/watch?v=QPgqfnKG_T4)\r\n* [Decorators 101: A Gentle Introduction to Functional Programming - Jillian Munson (PyGotham 2014)](https://www.youtube.com/watch?v=yW0cK3IxlHc)\r\n\r\n### PYTHON - MODULES & PACKAGING\r\n\r\n* [Tutorial on Installing Packages](https://packaging.python.org/en/latest/installing.html), [Tutorial on Packaging & Distributing Packages](https://packaging.python.org/en/latest/distributing.html), [Tool Recommendations](https://packaging.python.org/en/latest/current.html) & [Advanced Packaging Topics](https://packaging.python.org/en/latest/additional.html)\r\n* [Python Packaging User Guide](https://packaging.python.org/en/latest/)\r\n* [Python Tutorial - Modules](https://docs.python.org/3/tutorial/modules.html)\r\n* [Sample project with best practices- Python Packaging Authority](https://github.com/pypa/sampleproject)\r\n* [Python Module Index](https://docs.python.org/3/py-modindex.html) & [Standard Library](https://docs.python.org/3/library/)\r\n* [Modules 101: how to avoid spaghetti, big balls of mud and houses of straw! - Graeme Cross (PyCon Australia 2013)](https://www.youtube.com/watch?v=72lahT9Umtg)\r\n* Hitchhiker's Guide to Python: [Structuring Your Project](http://docs.python-guide.org/en/latest/writing/structure/) & [Packaging Your Code](http://docs.python-guide.org/en/latest/shipping/packaging/)\r\n* [How to Setup a new Python Project - Felix Wick (EuroPython 2014)](https://www.youtube.com/watch?v=GeYis4ZuluY)\r\n* [5 Simple Rules For Building Great Python Packages](http://axialcorps.com/2013/08/29/5-simple-rules-for-building-great-python-packages/)\r\n* [Distributing Python Modules (Python 3.4)](https://docs.python.org/3.4/distributing/index.html)\r\n* [Nobody Expects the Python Packaging Authority - Nick Coghlan (PyCon Australia 2013)](https://www.youtube.com/watch?v=8Xrdt3-YVz4)\r\n* [Importing iPython Notebooks as Modules](http://nbviewer.ipython.org/github/ipython/ipython/blob/1.x/examples/notebooks/Importing%20Notebooks.ipynb)\r\n* [Youtube](https://www.youtube.com/results?search_query=python+modules+packages)\r\n* [Python Packages and You - Harold Abnabit](http://blog.habnab.it/blog/2013/07/21/python-packages-and-you/)\r\n* [Python packaging simplified, for end users, app developers - Asheesh Laroia (PyCon 2014)](https://www.youtube.com/watch?v=eLPiPHr6TVI)\r\n\r\n#### PYTHON - MODULES & PACKAGING - VERSIONEER\r\n\r\n* [python-versioneer](https://github.com/warner/python-versioneer)\r\n\r\n#### PYTHON - MODULES & PACKAGING - WHEELS\r\n\r\n* [Grug make fire! Grug make wheel! - Russell Keith-Magee (PyCon Australia 2014)](https://www.youtube.com/watch?v=UtFHIpNPMPA)\r\n* [Wheel](https://pypi.python.org/pypi/wheel)\r\n* [PythonWheels.com](http://pythonwheels.com/)\r\n\r\n### PYTHON - PERFORMANCE\r\n\r\n* [Fast Python, Slow Python - Alex Gaynor (PyCon 2014)](https://www.youtube.com/watch?v=7eeEf_rAJds)\r\n* [Tools for high-performance computing applications - JR Johansson](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-6B-HPC.ipynb)\r\n* [Beginners' Guide to Concurrency and Parallelism in Python - Marcus McCurdy](http://www.toptal.com/python/beginners-guide-to-concurrency-and-parallelism-in-python#trust-only-devoted-devs-now)\r\n\r\n#### PYTHON - PERFORMANCE - DASK\r\n\r\n* Dask - minimal task scheduling abstraction and parallel arrays (ContinuumIO): [Github](https://github.com/ContinuumIO/dask) | [Documentation](http://dask.pydata.org/en/latest/)\r\n\r\n### PYTHON - PYLAB\r\n\r\n* DON'T USE PYLAB!!!\r\n* [Please Stop Using Pylab](http://carreau.github.io/posts/10-No-PyLab-Thanks.ipynb.html)\r\n\r\n### PYTHON - PYPI\r\n\r\n* [PyPI - The Python Package Index (45,000 Python packages)](https://pypi.python.org/pypi)\r\n\r\n### PYTHON - SPYDER\r\n\r\n* [Spyder (Scientific PYthon Development EnviRonment)](https://code.google.com/p/spyderlib/)\r\n\r\n### PYTHON - TESTING\r\n\r\n* [Improve your testing with Pytest and Mock - Gabe Hollombe (PyCon SG 2015)](https://www.youtube.com/watch?v=RcN26hznmk4)\r\n* [Why I use py.test and maybe you should too - Andy Todd (PyCon Australia 2013)](https://www.youtube.com/watch?v=P-AhpukDIik)\r\n* [Testing Your Code (Python Guide)](http://docs.python-guide.org/en/latest/writing/tests/)\r\n* [Getting Started Testing - Ned Batchelder (PyCon 2014)](https://www.youtube.com/watch?v=FxSsnHeWQBY)\r\n* [Documentation, Testing and Packaging - Jake Vanderplas](http://www.astro.washington.edu/users/vanderplas/Astr599/notebooks/20_DocsAndTesting.html)\r\n* [Version Control and Unit Testing for Scientific Software Tutorial, Part 2 of 3 - Matt Davis (SciPy 2013)](https://www.youtube.com/watch?v=-shepsIjEZs)\r\n\r\n#### PYTHON - TESTING - MOCK\r\n\r\n* [Mock documentation](http://mock.readthedocs.org/en/latest/index.html#quick-guide) [as PDF](http://www.voidspace.org.uk/downloads/mock-1.0.1.pdf)\r\n\r\n#### PYTHON - TESTING - NOSE\r\n\r\n* [Testing with node](https://nose.readthedocs.org/en/latest/testing.html)\r\n* [Testing in Python: Using nose & mocks - Yuki](http://techblog.appnexus.com/2012/testing-in-python-using-nose-mocks/)\r\n\r\n### PYTHON - TEXT ANALYSIS\r\n\r\n#### PYTHON - TEXT ANALYSIS - NATURAL LANGUAGE TOOLKIT (NLTK)\r\n\r\n* [Statistical Machine Learning for Text Classification With Scikit-learn and NLTK - Olivier Grisel (PyCon 2011)](http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-statistical-machine-learning-for-text-classification-with-scikit-learn-4898362)\r\n* [Enough Machine Learning to Make Hacker News Readable Again - Ned Jackson Lovely (PyGotham 2014)](http://pyvideo.org/video/3321/enough-machine-learning-make-hacker-news-readable-) & [(PyCon 2014](https://www.youtube.com/watch?v=O7IezJT9uSI)\r\n* [Getting Started with NLTK](http://textminingonline.com/dive-into-nltk-part-i-getting-started-with-nltk)\r\n* [How to Use Stanford Named Entity Recognizer (NER) in Python NLTK and Other Programming Languages](http://textminingonline.com/how-to-use-stanford-named-entity-recognizer-ner-in-python-nltk-and-other-programming-languages)\r\n\r\n#### PYTHON - TEXT ANALYSIS - PATTERN\r\n\r\n* [Pattern.en](http://www.clips.ua.ac.be/pages/pattern-en)\r\n\r\n#### PYTHON - TEXT ANALYSIS - TEXTBLOB\r\n\r\n* TextBlob: [ReadTheDocs](http://textblob.readthedocs.org/en/dev/), [Quickstart guide](http://textblob.readthedocs.org/en/dev/quickstart.html#quickstart), [Github](https://github.com/sloria/textblob)\r\n* [Tutorial: Simple Text Classification with Python and TextBlob - Steven Loria](http://stevenloria.com/how-to-build-a-text-classification-system-with-python-and-textblob/)\r\n\r\n#### PYTHON - TEXT ANALYSIS - TWITTER CLIENTS\r\n\r\n* [Intro to Text Mining using Twitter Streaming API and Python - Adil Moujahid](http://adilmoujahid.com/posts/2014/07/twitter-analytics/)\r\n* [Analyzing a NHL Playoff Game with Twitter - Daniel Forsyth](http://www.danielforsyth.me/analyzing-a-nhl-playoff-game-with-twitter/)\r\n* [Introduction to tweepy, Twitter for Python - Ahmet Novalić](http://www.pythoncentral.io/introduction-to-tweepy-twitter-for-python/)\r\n* [Tweepy](http://tweepy.readthedocs.org)\r\n\r\n### PYTHON - VIDEOGREP\r\n\r\n* [Videogrep (for searching through videos with .srt subtitle tracks)](https://github.com/antiboredom/videogrep)\r\n\r\n### PYTHON - WEB SCRAPING\r\n\r\n* [Web Scraping 101 with Python](http://www.gregreda.com/2013/03/03/web-scraping-101-with-python/) & [Web Scraping 201: finding the API - Greg Reda](http://www.gregreda.com/2015/02/15/web-scraping-finding-the-api/)\r\n* [Intro to Web (and data!) Scraping with Python - Katharine Jarmul (PyCon 2014)](https://www.youtube.com/watch?v=p1iX0uxM1w8)\r\n* [Scrape Websites with Python + Beautiful Soup 4 + Requests - ](https://www.youtube.com/watch?v=3xQTJi2tqgk)\r\n* [Scrapy](http://scrapy.org/) & [Github](https://github.com/scrapy/scrapy)\r\n* [Web scraping: Reliably and efficiently pull data from pages that don't expect it - Asheesh Laroia](https://www.youtube.com/watch?v=52wxGESwQSA)\r\n* [Web scraping tutorial series](https://www.youtube.com/watch?v=E7wB__M9fdw&list=PLgGfaPLP959bTiKYokXPkO15atkXYyYOz&index=1)\r\n\r\n## R\r\n\r\n* [RStudio](http://rstudio.org/)\r\n* [DeployR](http://deployr.revolutionanalytics.com/)\r\n* [Rattle](http://rattle.togaware.com/)\r\n\r\n### R - LEARNING\r\n\r\n* [The Five Colleges Guide to Statistics With R](http://www3.amherst.edu/~nhorton/FiveCollegeR.pdf)\r\n* [Swirl (\"Statistics With Interactive R Learning\")](http://swirlstats.com/students.html)\r\n* [The Undergraduate Guide to R - Trevor Martin](https://sites.google.com/site/undergraduateguidetor/manual-files)\r\n* [Rabbit: Intro to R - Nicola Sturaro](http://www.quantide.com/R/r-training/r-web-books/rabbit-introduction-to-r/)\r\n* [Ramarro: R for Developers (advanced R) - Andrea Spanò](http://www.quantide.com/R/r-training/r-web-books/ramarro-r-for-developers/)\r\n* [Resources to Help You Learn and Use R - UCLA](http://www.ats.ucla.edu/stat/r/)\r\n* [One Page R: A Survival Guide to Data Science with R - Graham Williams](http://onepager.togaware.com/)\r\n* [Impatient R](http://www.burns-stat.com/documents/tutorials/impatient-r/)\r\n* [Intro to R - Venables, Smith and R Core Team](http://cran.r-project.org/doc/manuals/R-intro.pdf)\r\n* [Very Short Intro to R - Torfs & Brauer](http://jeffgoldsmith.com/P8111/P8111_Docs/Short_R_Intro.pdf)\r\n* [Advanced R - Hadley Wickham](http://adv-r.had.co.nz/)\r\n* [The Analytics Edge - MIT (EdX.org)](https://www.edx.org/course/mitx/mitx-15-071x-analytics-edge-1416)\r\n* [Computing for Data Analysis week 1 videos - Roger Peng](http://www.youtube.com/playlist?list=PLjTlxb-wKvXNSDfcKPFH2gzHGyjpeCZmJ&feature=view_all), [week 2](http://www.youtube.com/playlist?list=PLjTlxb-wKvXNnjUTX4C8IeIhPBjPkng6B&feature=view_all), [week 3](http://www.youtube.com/playlist?list=PLjTlxb-wKvXOzI2h0F2_rYZHIXz8GWBop&feature=view_all), [week 4](http://www.youtube.com/playlist?list=PLjTlxb-wKvXOdzysAE6qrEBN_aSBC0LZS&feature=view_all) & [Coursera course](https://www.coursera.org/course/compdata)\r\n* [Data Analysis videos - Jeff Leek's Coursera course](http://www.youtube.com/playlist?list=PLXBDYmaCbeL8efhOZS4g9W6Z3m9_hFSnT) & [lecture notes](https://github.com/jtleek/dataanalysis) & [Coursera course](https://www.coursera.org/course/dataanalysis)\r\n* [Beginner's guide to R: (6-part) Introduction (ComputerWorld)](http://www.computerworld.com/s/article/print/9239625/Beginner_s_guide_to_R_Introduction?taxonomyName=Business+Intelligence%2FAnalytics&taxonomyId=9) & [Beginner's guide to R: Useful resources](http://www.computerworld.com/s/article/print/9239799/Beginner_s_guide_to_R_Useful_resources?taxonomyName=Business+Intelligence%2FAnalytics&taxonomyId=9)\r\n* [Quick-R](http://www.statmethods.net)\r\n* [R Programming - Johns Hopkins University (Coursera)](https://www.coursera.org/learn/r-programming)\r\n* [The Data Scientist’s Toolbox - Jeff Leek, Roger Peng, Brian Caffo](https://www.coursera.org/learn/data-scientists-tools)\r\n* [The Little Book of R for Time Series](https://media.readthedocs.org/pdf/a-little-book-of-r-for-time-series/latest/a-little-book-of-r-for-time-series.pdf)\r\n* [One Page R](http://onepager.togaware.com/)\r\n* [Rtips - Paul E. Johnson - HTML](http://pj.freefaculty.org/R/Rtips.html) & [PDF]()\r\n* [Advanced Data Analysis From an Elementary Point of View - Cosma Rohilla Shalizi](http://www.stat.cmu.edu/~cshalizi/ADAfaEPoV/ADAfaEPoV.pdf)\r\n* [OpenIntro Stats textbook](http://www.openintro.org/stat/textbook.php) & [Documentation for 'openintro' R data package](http://cran.r-project.org/web/packages/openintro/openintro.pdf)\r\n* [Twotorials.com (fun 2-min R tutorials)](http://www.twotorials.com/)\r\n* [Official R manuals](http://cran.r-project.org/manuals.html)\r\n* [R for Beginners - Emmanuel Paradis](http://cran.r-project.org/doc/contrib/Paradis-rdebuts_en.pdf)\r\n* [R Inferno - Patrick Burns](http://www.burns-stat.com/pages/Tutor/R_inferno.pdf)\r\n* [Intro to Data Analysis - Hadley Wickham](http://stat405.had.co.nz/)\r\n* [Linear Regression Models - Jeff Goldsmith](http://jeffgoldsmith.com/p8111.html)\r\n* [Simple R - John Verzani](http://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf)\r\n* [icebreakeR](http://cran.r-project.org/doc/contrib/Robinson-icebreaker.pdf)\r\n* [R Tutorials - William King](http://ww2.coastal.edu/kingw/statistics/R-tutorials/index.html)\r\n* [Practical Regression and Anova using R](http://cran.r-project.org/doc/contrib/Faraway-PRA.pdf)\r\n* [R Programming Wikibook](http://en.wikibooks.org/wiki/R_Programming)\r\n* [Using R for Data Analysis and Graphics - JH Maindonald](http://cran.r-project.org/doc/contrib/usingR.pdf)\r\n* [Introduction to R (Lam)](http://cran.r-project.org/doc/contrib/Lam-IntroductionToR_LHL.pdf)\r\n* [The R Guide - W.J. Owen](http://cran.r-project.org/doc/contrib/Owen-TheRGuide.pdf)\r\n* [More R books/papers/tutorials/presentations](http://cran.r-project.org/doc/contrib/)\r\n* [R Journal](http://journal.r-project.org/archive.html)\r\n* [R-bloggers](http://www.r-bloggers.com/)\r\n* [R on Youtube](www.google.com/search?q=R+programming&tbm=vid)\r\n* [Learning Statistics With R - Dan Navarro](http://health.adelaide.edu.au/psychology/ccs/docs/lsr/lsr-0.4.pdf)\r\n* [Introduction to Probability and Statistics Using R (instructions for generating PDF book through R)](http://ipsur.org/install.html)\r\n* [Elements of Statistical Learning](http://statweb.stanford.edu/~tibs/ElemStatLearn/printings/ESLII_print10.pdf)\r\n* [R Fundamentals and Programming Techiniques - Thomas Lumley](http://faculty.washington.edu/tlumley/Rcourse/R-fundamentals.pdf)\r\n* [Creating R Packages: A Tutorial](http://cran.r-project.org/doc/contrib/Leisch-CreatingPackages.pdf)\r\n* [Econometrics in R](http://cran.r-project.org/doc/contrib/Farnsworth-EconometricsInR.pdf)\r\n* [Learn R Youtube video channel](https://www.youtube.com/user/TheLearnR/videos)\r\n* [Revolution Analytics Youtube video channel](https://www.youtube.com/watch?v=RHu5vgBZ1yQ&list=PL2A6AB52DDE47709Bo)\r\n\r\n### R - BLOGS\r\n\r\n* [R-bloggers.com](http://www.r-bloggers.com/)\r\n* [Revolutions](http://blog.revolutionanalytics.com/)\r\n* [DataScience.la](http://datascience.la/)\r\n\r\n### R - DPLYR\r\n\r\n* [dplyr documentation](http://cran.r-project.org/web/packages/dplyr/dplyr.pdf)\r\n\r\n### R - EXAMPLES\r\n\r\n* [RPubs.com](http://rpubs.com/)\r\n* [R vs Python - Round 1](http://www.theswarmlab.com/r-vs-python-round-1/) [Round 2](http://www.theswarmlab.com/r-vs-python-round-2-22/) [Round 3](http://www.theswarmlab.com/r-vs-python-round-3/)\r\n\r\n### R - GGPLOT2\r\n\r\n* [2-hr talk on \"Visualising data with ggplot2\" by creator Hadley Wickham](http://www.mathtube.org/lecture/video/visualising-data-ggplot2)\r\n* [ggplot2_tutorial.R - Frank Davenport](http://rpubs.com/frank_davenport/6255)\r\n\r\n### R - GGVIS\r\n\r\n* [Ggvis](http://ggvis.rstudio.com/)\r\n* [Introducing ggvis](http://blog.rstudio.org/2014/06/23/introducing-ggvis/)\r\n* [Ggvis Cookbook](http://ggvis.rstudio.com/cookbook.html)\r\n\r\n### R - KNITR\r\n\r\n* [KnitR (elegant, flexible and fast dynamic report generation with R)](http://yihui.name/knitr/)\r\n* [KnitR in a Knutshell - Karl Broman](http://kbroman.github.io/knitr_knutshell/)\r\n* [How to Use KnitR - Vanderbilt University](http://biostat.mc.vanderbilt.edu/wiki/Main/KnitrHowto)\r\n* [How to Use Knitr with a Rakefile](http://lincolnmullen.com/blog/how-to-use-knitr-with-a-rakefile/)\r\n* [Plain Text, Papers, Pandoc](http://kieranhealy.org/blog/archives/2014/01/23/plain-text/)\r\n* [KnitrBoostrap](https://github.com/jimhester/knitrBootstrap)\r\n* [Blog With KnitR and Jekyll](http://jfisher-usgs.github.io/r/2012/07/03/knitr-jekyll/)\r\n\r\n### R - PERFORMANCE\r\n\r\n* [R: The Good Parts](http://hackerretreat.com/r-good-parts/)\r\n\r\n#### R - PERFORMANCE - DATA.TABLE\r\n\r\n* [Data.table rocks! Data manipulation the fast way in R](http://lamages.blogspot.co.uk/2012/11/datatable-rocks-data-manipulation-fast.html)\r\n\r\n#### R - PERFORMANCE - PIVOTAL R\r\n\r\n* [20 Minute Guide to Get Started with PivotalR](http://www.r-bloggers.com/how-to-20-minute-guide-to-get-started-with-pivotalr/)\r\n\r\n### R - SEARCH\r\n\r\n* [RSeek.org](http://www.rseek.org/)\r\n* [R Site Search](http://finzi.psych.upenn.edu/search.html)\r\n* [R mailing list archive](http://tolstoy.newcastle.edu.au/R/)\r\n\r\n### R - SHINY\r\n\r\n* [Shiny](http://shiny.rstudio.com/)\r\n* [Show Me Shiny (live examples)](http://www.showmeshiny.com/)\r\n* [Welcome to Shiny (tutorial)](http://shiny.rstudio.com/tutorial/lesson1/)\r\n* [Summertime with ggvis and shiny](https://ijlyttle.shinyapps.io/isugg_ggvis_shiny/)\r\n\r\n### R - TIME SERIES\r\n\r\n* [CRAN Task View: Time Series Analysis](http://cran.r-project.org/web/views/TimeSeries.html)\r\n* [History of R Financial Time Series Plotting](http://timelyportfolio.github.io/rCharts_time_series/history.html)\r\n* [Time Series Analysis With R](http://www.stats.uwo.ca/faculty/aim/tsar/tsar.pdf)\r\n* [Reading Financial Time Series Data with R - Joseph Rickert](http://www.r-bloggers.com/reading-financial-time-series-data-with-r/)\r\n\r\n### R - VIDEOS\r\n\r\n* [Basic R tutorial videos](http://www.lauraksuttle.com/resources.html)\r\n* [Expressing Yourself in R (video) - Hadley Wickham](https://www.youtube.com/watch?v=wki0BqlztCo)\r\n\r\n## RACK\r\n\r\n* [Rack Middleware as a General Purpose Abstraction - Mitchell Hashimoto (MountainWest RubyConf 2012)](http://confreaks.tv/videos/961-mwrc2012-rack-middleware-as-a-general-purpose-abstraction)\r\n* [Rack: A Framework to Roll Your Own - Nishant Modak (Ruby Australia 2014)](http://vimeo.com/89478511)\r\n\r\n## RAILS\r\n\r\n* Ruby on Rails API Documentation: [Current](http://api.rubyonrails.org) | [4.1.10](http://api.rubyonrails.org/v4.1.10/) | [4.0.13](http://api.rubyonrails.org/v4.0.13/) | [3.2.21](http://api.rubyonrails.org/v3.2.21/) | [3.1.12](http://rails.documentation.codyrobbins.com/3.1.12/) | [3.0.20](http://rails.documentation.codyrobbins.com/3.0.20/) | [2.3.18](http://rails.documentation.codyrobbins.com/2.3.18/) | [2.2.3](http://rails.documentation.codyrobbins.com/2.2.3/) | [2.1.2](http://rails.documentation.codyrobbins.com/2.1.2/) | [All versions](http://rails.documentation.codyrobbins.com/) | [APIDock browse](http://apidock.com/rails/browse) | [APIDock search](http://apidock.com/rails/search)\r\n* Ruby on Rails Guides: [Stable](http://guides.rubyonrails.org/) | [Edge](http://edgeguides.rubyonrails.org/) | [2.3](http://guides.rubyonrails.org/v2.3.11/) | [3.2](http://guides.rubyonrails.org/v3.2.21/) | [4.0](http://guides.rubyonrails.org/v4.0.6/) | [4.1](http://guides.rubyonrails.org/v4.1.8/) | [4.2](http://guides.rubyonrails.org/v4.2.0/)\r\n    * [Getting Started](http://guides.rubyonrails.org/getting_started.html)\r\n    * [Active Record Basics](http://guides.rubyonrails.org/active_record_basics.html)\r\n    * [Active Record Migrations](http://guides.rubyonrails.org/active_record_migrations.html)\r\n    * [Active Record Validations](http://guides.rubyonrails.org/active_record_validations.html)\r\n    * [Active Record Callbacks](http://guides.rubyonrails.org/active_record_callbacks.html)\r\n    * [Active Record Associations](http://guides.rubyonrails.org/association_basics.html)\r\n    * [Active Record Query Interface](http://guides.rubyonrails.org/active_record_querying.html)\r\n    * [Active Model Basics](http://guides.rubyonrails.org/active_model_basics.html)\r\n    * [Action View Overview](http://guides.rubyonrails.org/action_view_overview.html)\r\n    * [Layouts and Rendering](http://guides.rubyonrails.org/layouts_and_rendering.html)\r\n    * [Action View Form Helpers](http://guides.rubyonrails.org/form_helpers.html)\r\n    * [Action Controller Overview](http://guides.rubyonrails.org/action_controller_overview.html)\r\n    * [Routing](http://guides.rubyonrails.org/routing.html)\r\n    * [Active Support Core Extensions](http://guides.rubyonrails.org/active_support_core_extensions.html)\r\n    * [Internationalization](http://guides.rubyonrails.org/i18n.html)\r\n    * [Action Mailer Basics](http://guides.rubyonrails.org/action_mailer_basics.html)\r\n    * [Active Job Basics](http://guides.rubyonrails.org/active_job_basics.html)\r\n    * [Testing](http://guides.rubyonrails.org/testing.html)\r\n    * [Security](http://guides.rubyonrails.org/security.html)\r\n    * [Debugging](http://guides.rubyonrails.org/debugging_rails_applications.html)\r\n    * [Configuration](http://guides.rubyonrails.org/configuring.html)\r\n    * [Command Line](http://guides.rubyonrails.org/command_line.html)\r\n    * [Asset Pipeline](http://guides.rubyonrails.org/asset_pipeline.html)\r\n    * [Engines](http://guides.rubyonrails.org/engines.html)\r\n    * [Initialization](http://guides.rubyonrails.org/initialization.html)\r\n    * [Constant Autoloading and Reloading](http://guides.rubyonrails.org/constant_autoloading_and_reloading.html)\r\n    * [Creating Rails Plugins](http://guides.rubyonrails.org/plugins.html)\r\n    * [Rack on Rails](http://guides.rubyonrails.org/rails_on_rack.html)\r\n    * [Creating/Customizing Rails Generators & Templates](http://guides.rubyonrails.org/generators.html)\r\n    * [Upgrading](http://guides.rubyonrails.org/upgrading_ruby_on_rails.html)\r\n* [RailsCamp](http://rails.devcamp.com/syllabus)\r\n* Stefan Wintermeyer: [Ruby on Rails 3.2](http://www.xyzpub.com/en/ruby-on-rails/3.2/index.html) & [Ruby on Rails 4.0](http://www.amazon.com/Ruby-on-Rails-4-0-ebook/dp/B00E25KVLW?tag=xyzpubcom02-20)\r\n* [Rails posts - Thoughtbot](https://robots.thoughtbot.com/tags/rails) & [Bikeshed.fm](http://bikeshed.fm)\r\n* [Software as a Service, Part 1 - UC Berkeley](https://www.edx.org/course/uc-berkeleyx/uc-berkeleyx-cs169-1x-engineering-1377)\r\n* [Software as a Service, Part 2 - UC Berkeley](https://www.edx.org/course/uc-berkeleyx/uc-berkeleyx-cs169-2x-software-service-1275)\r\n* [Rails videos - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=rails&commit=go)\r\n* [Rails 4 Cheat Sheet (Cheatography)](http://www.cheatography.com/entaro/cheat-sheets/rails-4/)\r\n* [Ruby on Rails Tutorial - Michael Hartl (non-free)](http://ruby.railstutorial.org/ruby-on-rails-tutorial-book) & [Rails 4](http://ruby.railstutorial.org/ruby-on-rails-tutorial-book?version=4.0)\r\n* [APIDock - Rails (good for legacy Rails)](http://apidock.com/rails/browse)\r\n* [How a Request Becomes a Response - Christopher Greene, Aimee Simone (RailsConf 2013)](http://confreaks.tv/videos/2426-railsconf2013-how-a-request-becomes-a-response)\r\n* [You've got a Sinatra on your Rails - Jose Valim (RailsConf 2013)](http://confreaks.tv/videos/2442-railsconf2013-you-ve-got-a-sinatra-on-your-rails)\r\n* [Request and Response - Aaron Patterson (Full Stack Fest 2015)](https://www.youtube.com/watch?v=1EeWXojdqvU)\r\n\r\n### RAILS - 4\r\n\r\n* [Real-time Rails - Brian Cardarella (Burlington Ruby 2013)](http://confreaks.tv/videos/2620-btvruby2013-real-time-rails)\r\n* [Keynote - Rails 4 and the Future of Web - Aaron Patterson (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1228-aloharuby2012-keynote-rails-4-and-the-future-of-web)\r\n* [Real Time Salami - Aaron Patterson (RubyConf 2012)](http://confreaks.tv/videos/1291-rubyconf2012-real-time-salami)\r\n* [Rails 4.0 Whirlwind Tour - Andy Lindeman](http://vimeo.com/51181496)\r\n* [EdgeRails.info](http://www.edgerails.info/)\r\n* [Real-Time Rails - Brian Cardarella (RailsConf 2013)](http://confreaks.tv/videos/2438-railsconf2013-real-time-rails)\r\n* [What to Expect in Rails 4.0 - Prem Sichanugrist (BostonRB.org)](http://bostonrb.org/presentations/what-to-expect-in-rails-40)\r\n* [What's New in Rails 4 - Ben Hughes](http://www.sdruby.org/podcast/130)\r\n\r\n### RAILS - 4.1\r\n\r\n* [Reading Rails - Time Travel - Adam Sanderson](http://www.monkeyandcrow.com/blog/reading_rails_time_travel/)\r\n\r\n### RAILS - 5\r\n\r\n* [Building a chess server in Rails 5 with Action Cable-powered WebSockets - Joey Schoblaska](http://jargon.io/joeyschoblaska/rails-5-chess-with-action-cable-websockets)\r\n* [\"OMG Ruby and Rails Performance!!!\" - Aaron Patterson 2015](https://www.youtube.com/watch?v=JMGmaRZtgM8)\r\n\r\n### RAILS - 6+\r\n\r\n* [The Functional Web - Sean Griffin (WindyCityRails 2014)](https://vimeo.com/106759027)\r\n\r\n### RAILS - APIS (EXTERNAL)\r\n\r\n* [rails-api](https://github.com/rails-api/rails-api)\r\n* [Building a JSON API with Rails 5 - Leigh Halliday](http://blog.codeship.com/building-a-json-api-with-rails-5/)\r\n* [rspec_api_blueprint](https://github.com/playround/rspec_api_blueprint)\r\n* [apipie-rails](https://github.com/Apipie/apipie-rails)\r\n* [Building a web API with Ruby on Rails - Ahmed Omran](https://www.youtube.com/watch?v=36M2BSA2LYk)\r\n* [Tips when writing an API in Ruby on Rails - David Somers](https://blog.jalada.co.uk/tips-when-writing-an-api-in-ruby-on-rails/)\r\n* [Matthew Bass PDF slide deck on creating Rails APIs](http://raleighrb.s3.amazonaws.com/2013-03-12_apis.pdf)\r\n* [Rails Vs. The Client Side - Noel Rappin (RailsConf 2013)](http://confreaks.tv/videos/2447-railsconf2013-rails-vs-the-client-side)\r\n* [Building fast, testable and sane APIs with rails - Ben Lovell (Rubyc 2014)](https://www.youtube.com/watch?v=18JQRlUC2QA)\r\n\r\n#### RAILS - APIS (EXTERNAL) - ACTIVEMODEL SERIALIZERS\r\n\r\n* [Active Model Serializers, Rails, and JSON! OH MY! - Hendra Uzia](http://www.sitepoint.com/active-model-serializers-rails-and-json-oh-my/)\r\n* [Active Model Serializers - Railscasts - Ryan Bates](http://railscasts.com/episodes/409-active-model-serializers)\r\n\r\n#### RAILS - APIS (EXTERNAL) - GRAPE\r\n\r\n* Grape: [Github](https://github.com/intridea/grape) & [wiki](https://github.com/intridea/grape/wiki)\r\n\r\n#### RAILS - APIS (EXTERNAL) - JBUILDER\r\n\r\n* [JBuilder - Railscasts - Ryan Bates](http://railscasts.com/episodes/320-jbuilder)\r\n\r\n### RAILS - ASSET PIPELINE\r\n\r\n* [Rails Asset Pipeline: Defunct or Da Funk - Samuel Cochran (Ruby Australia 2014)](http://vimeo.com/89487930)\r\n* [Smaller Javascript Packages With the Rails Asset Pipeline](http://www.sdruby.org/podcast/118)\r\n* [Javascript Isolation With the Rails Asset Pipeline](http://www.sdruby.org/podcast/116)\r\n\r\n### RAILS - BACKGROUND JOBS\r\n\r\n* [Background Tasks with Rails - Richard Schneeman](https://www.youtube.com/watch?v=PcZdHaLGX1Q)\r\n\r\n#### RAILS - BACKGROUND JOBS - DELAYED JOB\r\n\r\n* [Delayed Job docs](https://github.com/collectiveidea/delayed_job)\r\n* [Delayed Job (Railscasts.com)](http://railscasts.com/episodes/171-delayed-job)\r\n* [Delayed Job Best Practices - Panayotis Matsinopoulos](http://www.sitepoint.com/delayed-jobs-best-practices/)\r\n\r\n#### RAILS - BACKGROUND JOBS - SIDEKICK\r\n\r\n### RAILS - CACHING\r\n\r\n* [Caching with Rails: An overview - RailsGuides](http://guides.rubyonrails.org/caching_with_rails.html)\r\n* [Speed Up Your Rails App by 66% - The Complete Guide to Rails Caching - Nate Berkopec](http://www.nateberkopec.com/2015/07/15/the-complete-guide-to-rails-caching.html)\r\n\r\n### RAILS - CLEAN CODE\r\n\r\n* [Domain Driven Rails - Yan Pritzker (WindyCityRails 2014)](https://vimeo.com/106759024)\r\n* [My Dog Taught Me to Code - Dave Thomas (Dave Thomas)](http://confreaks.tv/videos/lonestarruby2015-my-dog-taught-me-to-code)\r\n* [Finder Objects - Janko Marohnić](http://twin.github.io/finder-objects/)\r\n* [Eastward Ho! A Clear Path Through Ruby With OO - Jim Gay (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-eastward-ho-a-clear-path-through-ruby-with-oo)\r\n* [Build Complex Domains in Rails - Mike AbiEzzi (Rocky Mountain Ruby 2014)](http://confreaks.tv/videos/4177-rmr2014-build-complex-domains-in-rails)\r\n* [Hexagonal Rails - Matt Wynne (GoRuCo 2012)](https://www.youtube.com/watch?v=CGN4RFkhH2M)\r\n* [Domain Driven Design and Hexagonal Architecture with Rails - Declan Whelan, Eric Roberts (RailsConf 2014)](http://confreaks.tv/videos/3316-railsconf-domain-driven-design-and-hexagonal-architecture-with-rails)\r\n* [Building Extractable Libraries in Rails - Patrick S. Robertson (RailsConf 2013)](http://confreaks.tv/videos/2444-railsconf2013-building-extractable-libraries-in-rails)\r\n* [7 Ways to Decompose Fat ActiveRecord Models](http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/)\r\n* [The Right Way to Code DCI in Ruby - Mike Pack](http://mikepackdev.com/blog_posts/24-the-right-way-to-code-dci-in-ruby)\r\n* [Mega Rails - Jack Danger Canty (GoGaRuCo 2012)](http://confreaks.tv/videos/1125-gogaruco2012-mega-rails)\r\n* [Powerful Interfaces (Rails) - Caike Souza](http://confreaks.tv/videos/902-railsconf2012-powerful-interfaces)\r\n* [Code to Joy - Avdi Grimm (GoGaRuCo 2012)](http://confreaks.tv/videos/1117-gogaruco2012-code-to-joy)\r\n* [Break It Down - Ben Scofield (Ruby Midwest 2011)](http://confreaks.tv/videos/756-rubymidwest2011-break-it-down)\r\n* [Patterns of Basecamp's Application Architecture - DHH (RailsConf 2013)](http://confreaks.tv/videos/2422-railsconf2013-opening-keynote-patterns-of-basecamp-s-application-architecture)\r\n\r\n### RAILS - CONCERNS\r\n\r\n* [Stop Worrying and Start Being Concerned: ActiveSupport Concerns - Vaidehi Joshi](http://vaidehijoshi.github.io/blog/2015/10/13/stop-worrying-and-start-being-concerned-activesupport-concerns/)\r\n\r\n### RAILS - DEBUGGING\r\n\r\n* [Debugging Rails Applications (RailsGuides)](http://edgeguides.rubyonrails.org/debugging_rails_applications.html)\r\n* [RUBY - DEBUGGING](https://github.com/jameslavin/my_tech_resources#ruby---debugging)\r\n\r\n### RAILS - ENGINES, COMPONENTS & SERVICES, OH, MY!\r\n\r\n* [An Incremental Migration from Rails Monolithic to Microservices - Erin Swenson-Healey](http://blog.carbonfive.com/2014/05/29/an-incremental-migration-from-rails-monolithic-to-microservices/)\r\n* [Rails Engines - BostonRb.org](http://bostonrb.org/presentations/rails-engines)\r\n* [Component-Based Rails Applications Resources](http://cbra.info/)\r\n* [Ruby-Toolbox - Testing Rails Engines](https://www.ruby-toolbox.com/categories/Testing_Rails_Engines)\r\n* [Carson: On the Path from Big-Ball-of-Mud to SOA - James Rosen (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1234-aloharuby2012-carson-on-the-path-from-big-ball-of-mud-to-soa)\r\n* [Smash the Monolith: Refactoring into SOAs - Corey Ehmke (Nickel City Ruby 2013)](https://www.youtube.com/watch?v=Mfogs7jxd5Y)\r\n* [Writing a Rails Engine - Erik Michaels-Ober (GoGaRuCo 2012)](http://confreaks.tv/videos/1109-gogaruco2012-writing-a-rails-engine)\r\n* [Rails Engines Patterns - Andy Maleh (RailsConf 2012)](http://www.youtube.com/watch?v=pm94BsoMGik)\r\n* [Start Your Engines! - Ryan Bigg (Ruby On Ales 2012)](http://confreaks.tv/videos/832-roa2012-start-your-engines)\r\n* [Feature flagging portions of your Ruby on Rails application with engines - Enrico Teotti](http://teotti.com/feature-flagging-portions-of-your-ruby-on-rails-application-with-engines/) & [NYC.rb talk](https://www.youtube.com/watch?v=rMOn2H7h3oY)\r\n\r\n### RAILS - EVENT SOURCING\r\n\r\n* [Rails Disco: Get Down with Event Sourcing - Glenn Goodrich](http://www.sitepoint.com/rails-disco-get-event-sourcing/)\r\n* [Rails-disco gem](https://github.com/hicknhack-software/rails-disco)\r\n\r\n### RAILS - ENVIRONMENT VARIABLES\r\n\r\n* [Environment variables in Rails - Andrey Koleshko](http://railsguides.net/how-to-define-environment-variables-in-rails/)\r\n\r\n### RAILS - FEATURES\r\n\r\n* [An Introduction to Procs, Lambdas and Closures in Ruby - Peter Cooper](https://www.youtube.com/watch?v=VBC-G6hahWA)\r\n* [Ten Things You Didn't Know Rails Could Do - James Edward Gray II (RailsConf 2012)](http://confreaks.tv/videos/889-railsconf2012-ten-things-you-didn-t-know-rails-could-do) & [slides](https://speakerdeck.com/u/jeg2/p/10-things-you-didnt-know-rails-could-do)\r\n* [Constant Autoloading in Ruby on Rails - Xavier Noria (Barcelona RuCo 2012)](http://confreaks.tv/videos/1334-baruco2012-constant-autoloading-in-ruby-on-rails) & [alt version](http://www.youtube.com/watch?v=8lYR9WxIRH0)\r\n* [Client Side Validations](https://github.com/bcardarella/client_side_validations)\r\n* [Nought to real-time, multiplayer game in 16 hours with Pusher (Philip Roberts)](http://vimeo.com/45119844)\r\n* [Rails: The Next Five Years - Yehuda Katz](http://confreaks.tv/videos/907-railsconf2012-rails-the-next-five-years)\r\n* [Railscasts (more non-free than free)](http://railscasts.com/)\r\n* [Rails is the New Rails - Michael Bleigh (Ruby Midwest 2011)](http://confreaks.tv/videos/751-rubymidwest2011-rails-is-the-new-rails)\r\n* [Chanko - How Cookpad safely releases multiple feature prototypes - in production](http://confreaks.tv/videos/909-railsconf2012-chanko-how-cookpad-safely-releases-multiple-feature-prototypes-in-production-for-test-segments-of-their-15-million-engaged-users)\r\n\r\n### RAILS - GEMS\r\n\r\n* [BetterErrors](https://github.com/charliesome/better_errors)\r\n* [Bullet](https://github.com/flyerhzm/bullet)\r\n* [CanCanCan](https://github.com/CanCanCommunity/cancancan) (successor to the original [CanCan](https://github.com/ryanb/cancan))\r\n* Carrierwave: [Github](https://github.com/carrierwaveuploader/carrierwave) | [docs](http://www.rubydoc.info/gems/carrierwave/frames) | [wiki](https://github.com/carrierwaveuploader/carrierwave/wiki) | [How to use Carrierwave to upload - LearnCode](https://www.youtube.com/watch?v=LNyR8grIPuM)\r\n* [DelayedJob](https://github.com/collectiveidea/delayed_job)\r\n* [Devise](https://github.com/plataformatec/devise)\r\n* [DeviseInvitable](https://github.com/scambra/devise_invitable)\r\n* [Fabrication](http://www.fabricationgem.org/) [Github](https://github.com/paulelliott/fabrication)\r\n* [FactoryGirl Rails](https://github.com/thoughtbot/factory_girl_rails)\r\n* [Kaminari](https://github.com/amatsuda/kaminari)\r\n* [LetterOpener](https://github.com/ryanb/letter_opener)\r\n* [LOL_DBA](https://github.com/plentz/lol_dba)\r\n* [Mina (for fast redeployer](https://github.com/mina-deploy/mina)\r\n* [Paperclip (file uploading)](https://github.com/thoughtbot/paperclip)\r\n* [Pry-Rails](https://github.com/rweng/pry-rails) & [Pry documentation](http://pryrepl.org/)\r\n* [Pundit (authorization)](https://github.com/elabs/pundit)\r\n* [Rack-Mini-Profiler](https://github.com/MiniProfiler/rack-mini-profiler) & [Flamegraph](https://github.com/SamSaffron/flamegraph)\r\n* [Rails Panel](https://github.com/dejan/rails_panel)\r\n* [Rspec-Rails](https://github.com/rspec/rspec-rails)\r\n* [Scenic](https://github.com/thoughtbot/scenic) & [Announcing Scenic - Versioned Database Views for Rails - Derek Prior](https://robots.thoughtbot.com/announcing-scenic--versioned-database-views-for-rails)\r\n* [SimpleForm](https://github.com/plataformatec/simple_form)\r\n* [Spring](https://github.com/rails/spring) & [spring-commands-rspec](https://github.com/jonleighton/spring-commands-rspec)\r\n* [Virtus](https://github.com/solnic/virtus) & [Be nice to others and your future-self: use Data Objects - Philippe Creux](http://brewhouse.io/2015/07/31/be-nice-to-others-and-your-future-self-use-data-objects.html)\r\n\r\n#### RAILS - GEMS - CREATING\r\n\r\n* [Pluck It - Adam Cuppy (RubyConf 2015)](https://www.youtube.com/watch?v=r5l0CaxqSvA)\r\n* [Crafting Gems - Pat Allan (RailsConf 2013)](http://confreaks.tv/videos/2482-railsconf2013-crafting-gems)\r\n\r\n### RAILS - GENERATORS\r\n\r\n* [rails_apps_composer](https://github.com/RailsApps/rails_apps_composer) & [Rails Composer](http://railsapps.github.com/rails-composer/)\r\n\r\n### RAILS - INTERACTIVE RAILS\r\n\r\n* [Mini-Chat with Rails - Ilya Bodrov](http://www.sitepoint.com/mini-chat-rails/)\r\n* [Realtime Mini-Chat with Rails and Faye - Ilya Bodrov](http://www.sitepoint.com/realtime-mini-chat-rails-faye/)\r\n* [Mini-chat with Rails and Server-Sent Events - Ilya Bodrov](http://www.sitepoint.com/mini-chat-rails-server-sent-events/)\r\n\r\n\r\n### RAILS - PERFORMANCE\r\n\r\n* [How to Performance - Eileen Uchitelle (GoRuCo 2015)](http://confreaks.tv/videos/goruco2015-how-to-performance)\r\n* [Building RailsPerf, a toolkit to detect performance regressions in Ruby on Rails core - Kir Shatrov (RailsConf 2015)](http://confreaks.tv/videos/railsconf2015-building-railsperf-a-toolkit-to-detect-performance-regressions-in-ruby-on-rails-core)\r\n\r\n### RAILS - PJAX\r\n\r\n* [Pjax on Rails (BigBinary.com)](http://blog.bigbinary.com/2012/08/13/pjax-on-rails.html)\r\n* [PJAX Use Case On Intridea.com](http://www.intridea.com/blog/2012/6/28/pjax-use-case-on-intridea-com)\r\n* [Railscasts - Playing With PJAX](http://railscasts.com/episodes/294-playing-with-pjax)\r\n* [Learning pjax – Tutorial and Screencast](http://theadmin.org/articles/learning-pjax/)\r\n\r\n### RAILS - SCALING & DEVOPS\r\n\r\n* [DevOps for the Rubyist Soul - John Downey (SteelCityRuby 2013](http://steelcityruby.confbots.com/video/72791610)\r\n* [DevOps for the Rubyist Soul (capistrano, puppet, puppet, git & vagrant)](http://confreaks.tv/videos/2297-bigruby2013-devops-for-the-rubyist-soul)\r\n* [Scaling Groupon - Tyler Jennings, Michael Cerna (Scotland Ruby Conf 2011)](http://confreaks.tv/videos/554-scotlandruby2011-scaling-groupon)\r\n* [How Github (No Longer) Works - Zach Holman (Ruby Australia 2014)](http://vimeo.com/90175385)\r\n* [How I Architected My Big Rails App For Success - Benjamin Smith (Ruby Australia 2014)](http://vimeo.com/89493173)\r\n* [How Shopify Scales Rails - John Duff (BigRuby 2013)](http://confreaks.tv/videos/2303-bigruby2013-how-shopify-scales-rails) & [RailsConf 2013](http://confreaks.tv/videos/2423-railsconf2013-how-shopify-scales-rails)\r\n* [Web Scale for the Rest of Us - John Barton (Ruby Australia 2013)](http://vimeo.com/61342269)\r\n* [Scaling With Friends](http://confreaks.tv/videos/2307-bigruby2013-scaling-with-friends)\r\n* [Keith and Mario's Guide to Fast Websites - Keith Pitt & Mario Visic (Ruby Australia 2013)](http://vimeo.com/61342267)\r\n* [From Stubbies to Longnecks: Finding and Curing Scaling Bottlenecks - Geoffrey Giesmann (Ruby Australia 2013)](http://vimeo.com/61255734)\r\n* [Services and Rails: The Shit They Don't Tell You - Brian Morton (BigRuby 2013)](http://confreaks.tv/videos/2299-bigruby2013-services-and-rails-the-shit-they-don-t-tell-you) & [Ruby On Ales 2013](http://confreaks.tv/videos/2319-roa2013-services-and-rails-the-shit-they-don-t-tell-you)\r\n* [Uptime == Money: High Availability at Braintree - Paul Gross (Ruby Australia 2013)](http://vimeo.com/61255649)\r\n\r\n### RAILS - SECURITY\r\n\r\n* [Rails Application Security in Practice - Bryan Helmkamp (Ruby MidWest 2013)](http://confreaks.tv/videos/2375-rmw2013-rails-application-security-in-practice)\r\n* [Ruby on Rails Cheatsheet - OWASP (Open Web Application Security Project)](https://www.owasp.org/index.php/Ruby_on_Rails_Cheatsheet)\r\n* [Rails SQL Injection examples](http://rails-sqli.org/)\r\n\r\n### RAILS - SESSIONS\r\n\r\n* [How Rails Sessions Work - Justin Weiss](http://www.justinweiss.com/blog/2015/03/17/how-rails-sessions-work/)\r\n\r\n### RAILS - TESTING\r\n\r\n* [Locally Sourced Issue 1: Adding A Feature To Rails - Noel Rappin](https://s3-us-west-1.amazonaws.com/patreon.posts/tY26bgjQF6VWOuPnsNj6mn8y6zBow0brqFVCjVOQhQ5QKOk4LvPob3K6b7IjcePG/locally_sourced.pdf)\r\n* [Best Practices for Testing in Rails - Andrei Gridnev (Ruby Melbourne March 2014)](http://vimeo.com/90286264)\r\n* [TDD Workshop: Outward-in Development, Unit Tests, and Fixture Data - Harlow Ward and Adarsh Pandit (RailsConf 2013)](http://confreaks.tv/videos/2450-railsconf2013-tdd-workshop-outward-in-development-unit-tests-and-fixture-data)\r\n* [Behavior Driven Development Using Ruby, Cucumber, and rSpec - Steve Ross](http://www.sdruby.org/podcast/82)\r\n\r\n#### RAILS - TESTING - FACTORY GIRL\r\n\r\n* [FactoryGirl build_stubbed strategy with a has_many association - Aaron Kromer](http://stackoverflow.com/questions/17754770/factorygirl-build-stubbed-strategy-with-a-has-many-association)\r\n* [FactoryGirl documentation](https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md)\r\n* [Using FactoryGirl to easily create complex data sets in Rails - Jordan Maguire](http://blog.thefrontiergroup.com.au/2014/12/using-factorygirl-easily-create-complex-data-sets-rails/)\r\n\r\n#### RAILS - TESTING - MOCHA\r\n\r\n* [Mocha readme](https://github.com/freerange/mocha)\r\n* [Mocha::API](http://gofreerange.com/mocha/docs/Mocha/API.html)\r\n* [Mocha::ClassMethods](http://gofreerange.com/mocha/docs/Mocha/ClassMethods.html)\r\n* [Mocha::Expectation](http://gofreerange.com/mocha/docs/Mocha/Expectation.html)\r\n* [Mocha::Mock](http://gofreerange.com/mocha/docs/Mocha/Mock.html)\r\n* [Mocha::Object](http://gofreerange.com/mocha/docs/Mocha/ObjectMethods.html)\r\n* [Mocha::ParameterMatchers](http://gofreerange.com/mocha/docs/Mocha/ParameterMatchers.html)\r\n\r\n#### RAILS - TESTING - RSPEC\r\n\r\n##### RAILS - TESTING - RSPEC - REQUEST SPECS\r\n\r\n* [Rails API Testing Best Practices - Matthew Lehner](http://matthewlehner.net/rails-api-testing-guidelines/)\r\n* [RSpec Testing for a JSON API](http://blog.ianmiller.nyc/blog/2014/04/18/rspec-testing-for-a-json-api/)\r\n* [Test Driving a JSON API in Rails](http://commandercoriander.net/blog/2014/01/04/test-driving-a-json-api-in-rails/)\r\n\r\n#### RAILS - TESTING - SPEED\r\n\r\n* [Running three hours of Ruby tests in under three minutes - Nelson Elhage](https://stripe.com/blog/distributed-ruby-testing)\r\n\r\n### RAILS - TIME\r\n\r\n* [Strfti.me](https://gorails.com/episodes/pdf-receipt://gorails.com/episodes/pdf-receipts)\r\n* [Stamp gem](https://github.com/jeremyw/stamp)\r\n\r\n### RAILS - UI\r\n\r\n* [Twitter-Bootstrap-Rails gem](http://confreaks.tv/videos/287-lsrc2010-how-to-build-a-sustainably-awesome-development-team) [How to](http://railsapps.github.com/twitter-bootstrap-rails.html)\r\n\r\n### RAILS - UPGRADING\r\n\r\n* [Guide for Upgrading Ruby on Rails](http://guides.rubyonrails.org/upgrading_ruby_on_rails.html) \r\n* [Rails-Upgrade-Checklist](www.rails-upgrade-checklist.com)\r\n* [Tips and Strategies for Upgrading Ruby Gems](https://hackhands.com/tips-strategies-upgrading-ruby-gems/)\r\n\r\n### RAILS - VIDEOS\r\n\r\n* [RailsConf 2016](http://confreaks.tv/events/railsconf2016)\r\n\r\n### RAILS - VIEWS\r\n\r\n* [Concerns, Decorators, Presenters, Service Objects, Helpers, Help Me Decide! - Justin Gordon (RailsConf 2014)](https://www.youtube.com/watch?v=bHpVdOzrvkE)\r\n* [Maintainable Templates - Brendan Loudermilk (RailsConf 2013)](http://confreaks.tv/videos/2429-railsconf2013-maintainable-templates) & [slides](https://github.com/bloudermilk/maintainable_templates/blob/master/slides.md)\r\n* [A Pattern for Rails Presenters - Derek Hammer](http://www.derekhammer.com/2012/11/06/a-pattern-for-rails-presenters)\r\n* [Tidy Views and Beyond With Decorators - Dan Croak (Thoughtbot)](http://robots.thoughtbot.com/post/13641910701/tidy-views-and-beyond-with-decorators)\r\n* [Decorators in Rails - Dan Croak (BostonRB.org)](http://bostonrb.org/presentations/decorators-in-rails)\r\n* [Decorator and Presenter Patterns in Rails 3.2.x - Michael de Silva](http://mwdesilva.com/posts/63-decorator-and-presenter-patterns-in-rails-3-2-x)\r\n* [Evaluating alternative Decorator implementations in Ruby - Thoughtbot](http://robots.thoughtbot.com/post/14825364877/evaluating-alternative-decorator-implementations-in)\r\n* [Exhibit vs Presenter - Mike Pack](http://mikepackdev.com/blog_posts/31-exhibit-vs-presenter)\r\n* [Draper - Railscasts](http://railscasts.com/episodes/286-draper) & [Presenters from Scratch - Railscasts (non-free)](http://railscasts.com/episodes/287-presenters-from-scratch)\r\n* [Ruby-Toolbox - Presenters](https://www.ruby-toolbox.com/categories/rails_presenters)\r\n* [Ruby-Toolbox - Template Engines](https://www.ruby-toolbox.com/categories/template_engines)\r\n\r\n### RAILS - WEBSERVERS\r\n\r\n* [Grow Your Unix Beard Using Ruby (tour through features/internals of the Unicorn web server) - Jesse Storimer (RubyConf 2012)](http://confreaks.tv/videos/1289-rubyconf2012-grow-your-unix-beard-using-ruby)\r\n\r\n## REDIS & RESQUE\r\n\r\n* Redis.io: [Documentation](http://redis.io/documentation) | [Intro](http://redis.io/topics/introduction) | [Clients](http://redis.io/clients)\r\n* [Andrew Glover: Asynchronous Processing, Messaging, and Redis/Resque](http://blip.tv/rubynation/andrew-glover-asynchronous-processing-messaging-and-redis-with-resque-6558320)\r\n* [The Little Redis Book - Karl Seguin](http://openmymind.net/redis.pdf)\r\n* [Redis Tutorials: Zero to Hero with NoSQL Redis: \"You've Got Key Values! A Redis Jump Start\"](https://www.youtube.com/watch?v=A4gRg-9jNF4)\r\n* [Redis Labs' Youtube videos](https://www.youtube.com/channel/UCD78lHSwYqMlyetR0_P4Vig)\r\n* Getting Started With Redis: [Part 1](https://www.youtube.com/watch?v=7W1n_SwTw14) | [Part 2](https://www.youtube.com/watch?v=nSW4xaQ4eEI) | [Part 3](https://www.youtube.com/watch?v=h-jB2jpywnE) | [Part 4](https://www.youtube.com/watch?v=rXQRqek3kLw) | [Part 5](https://www.youtube.com/watch?v=YB62-F31l1c)\r\n* [Fun with Ruby and Redis - Javier Ramirez (ArrrCamp 2013)](https://www.youtube.com/watch?v=eVnvQULI1Cc)\r\n\r\n### REDIS - GUIS\r\n\r\n* Medis (currently Mac-only): [GetMedis.com](http://getmedis.com/) | [Github](https://github.com/luin/medis)\r\n\r\n## REGULAR EXPRESSIONS\r\n\r\n* [RegEx101.com](https://regex101.com/)\r\n* [Rubular.com](http://rubular.com/)\r\n* [LearnPython.org](http://www.learnpython.org/en/Regular_Expressions)\r\n* [EloquentJavascript.net](http://eloquentjavascript.net/09_regexp.html)\r\n* [Ruby regular expressions cheatsheet](http://doc.infosnel.nl/ruby_regular_expressions.html)\r\n\r\n## RUBY\r\n\r\n* [Learn Ruby - Ruby Koans - Jim Weirich & friends](http://rubykoans.com/)\r\n* [Visualize Ruby code execution](http://www.pythontutor.com/visualize.html)\r\n* [Ruby Bookmarks - Alex Musayev](https://github.com/dreikanter/ruby-bookmarks)\r\n* [Github's style guide](https://github.com/styleguide/ruby)\r\n* [Read Ruby](http://readruby.io/)\r\n* [Ten Things You Didn't Know Ruby Could Do - James Edward Gray II (Aloha RubyConf 2012)](http://confreaks.tv/videos/1244-aloharuby2012-ten-things-you-didn-t-know-ruby-could-do)\r\n* [Davetron5000's Ruby Style Guide - David Copeland](http://davetron5000.github.com/ruby-style/)\r\n* [Ruby Rogues (podcasts)](http://devchat.tv/ruby-rogues)\r\n* [The Ruby Show (podcasts)](http://rubyshow.com/)\r\n* [Unblocked - James Edward Gray II (RubyConf 2010)](http://www.confreaks.tv/videos/468-rubyconf2010-unblocked)\r\n* [Tracing Your Way Through Ruby - Elise Huard (BaRuCo 2012)](http://www.youtube.com/watch?v=CvzEibqrriM)i\r\n* [10 Things You Didn't Know Ruby Could Do - @JEG2](https://speakerdeck.com/u/jeg2/p/10-things-you-didnt-know-ruby-could-do)\r\n* [The Dark Side of Ruby - Gautam Rege (Garden City Ruby 2014)](http://confreaks.tv/videos/2916-gardencityruby-the-dark-side-of-ruby)\r\n* [Ruby Safari - Ola Bini (Ruby Midwest 2011)](http://confreaks.tv/videos/750-rubymidwest2011-ruby-safari)\r\n* [APIDock - Ruby (good for legacy Ruby)](http://apidock.com/ruby/browse)\r\n* [SD Ruby screencasts](http://www.sdruby.org/podcast)\r\n\r\n### RUBY - 2.0\r\n\r\n* [Ruby 2.0 on Rails - Akira Matsuda (RubyConf 2012)](http://confreaks.tv/videos/1275-rubyconf2012-ruby-2-0-on-rails)\r\n* [Ruby 2.0 - Matz (MountainWest RubyConf 2013)](http://confreaks.tv/videos/2334-mwrc2013-ruby-2-0)\r\n* [What's new in Ruby 2.0 - Patrick Robertson (BostonRB.org)](http://bostonrb.org/presentations/whats-new-in-ruby-20)\r\n* [Intro to Ruby 2.0 - Matt Aimonetti](http://www.sdruby.org/podcast/132)\r\n\r\n### RUBY - 2.1\r\n\r\n* [Ruby keyword args and the options hash, from the parser to the virtual machine - Étienne Barrié (ArrrrCamp 2015)](https://www.youtube.com/watch?v=e4t9dts_07g)\r\n* [Why I am excited about Ruby 2.1 - Sam Saffron (Ruby Australia 2014)](http://vimeo.com/89491942)\r\n* [New Ruby 2.1 Awesomeness: Pro Object Allocation Tracing - Sam Rawlins (MountainWest Ruby 2014)](http://confreaks.tv/videos/3272-mwrc-new-ruby-2-1-awesomeness-pro-object-allocation-tracing)\r\n\r\n### RUBY - 3.0\r\n\r\n* [Ruby 3.0 - Yukihiro \"Matz\" Matsumoto (Full Stack Fest 2015)](https://www.youtube.com/watch?v=48iKjUcENRE)\r\n\r\n### RUBY - ACTIVE RECORD\r\n\r\n* [Twenty Thousand Leagues Under ActiveRecord - Pat Shaughnessy (BaRuCo 2014)](https://www.youtube.com/watch?v=rnLnRPZZ1Q4) & [Blog post 1](http://blog.codeship.com/20000-leagues-under-active-record/) | [2](http://patshaughnessy.net/2014/9/23/how-arel-converts-ruby-queries-into-sql-statements) | [3](http://patshaughnessy.net/2014/10/13/following-a-select-statement-through-postgres-internals) | [4](http://patshaughnessy.net/2014/11/11/discovering-the-computer-science-behind-postgres-indexes)\r\n* [Advanced ActiveRecord Lecture - Matthew Bunday](https://www.youtube.com/watch?v=l2d_ansazbc)\r\n* [ActiveRecord can't do it? Arel can! - Vipul A M, Prathamesh Sonpatki (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-activerecord-can-t-do-it-arel-can)\r\n* [WAT!! ActiveRecord Callbacks - Monika M (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-wat-activerecord-callbacks)\r\n* [The Littlest ORM - Noah Gibbs (GoGaRuCo 2013)](http://confreaks.tv/videos/2669-gogaruco2013-the-littlest-orm)\r\n* [ActiveRecord Anti-Patterns for Fun and Profit - Ethan Gunderson (Ruby Midwest 2011)](http://confreaks.tv/videos/752-rubymidwest2011-activerecord-anti-patterns-for-fun-and-profit)\r\n* [Rails Active Record Associations - Sang Shin](https://www.youtube.com/watch?v=rjXGDISeMz4)\r\n* [Databases & Rails: Table Relationships & Joins - Richard Shneeman (2012)](https://www.youtube.com/watch?v=EcrO7hz-nfM)\r\n* [Database-Backed Models with ActiveRecord - Richard Shneeman (2012)](https://www.youtube.com/watch?v=EU98yHB-_7A)\r\n* Active Record - Richard Schneeman: [Where](https://www.youtube.com/watch?v=JUTXqWlqGHY) | [Find](https://www.youtube.com/watch?v=RIxolY196b0) | [Includes](https://www.youtube.com/watch?v=Qplus6HoFb8) | [Joins](https://www.youtube.com/watch?v=wjEeLjGkBeA) | [Group](https://www.youtube.com/watch?v=s0KTEtVQ_AY) | [Having](https://www.youtube.com/watch?v=DaTbG91yZ30) | [Order](https://www.youtube.com/watch?v=Rio_ES75xuA) | [Limit](https://www.youtube.com/watch?v=Mwqsg3BEaig) | [Offset](https://www.youtube.com/watch?v=X8TyHMPiE_8)\r\n* [Named Scopes in Rails with ActiveRecord Merge ](https://www.youtube.com/watch?v=5Vycty6-m2A)\r\n* [Search and Filter Rails Models Without Bloating Your Controller - Justin Weiss](http://www.justinweiss.com/blog/2014/02/17/search-and-filter-rails-models-without-bloating-your-controller/)\r\n* [Just in Time SQL Queries - Richard Schneeman](https://www.youtube.com/watch?v=8JhKYbxdgck)\r\n* [Advanced aRel: When ActiveRecord Just Isn't Enough - Cameron Dutro (RailsConf 2014)](https://www.youtube.com/watch?v=ShPAxNcLm3o)\r\n* [Preventing SQL Injection Attacks - Richard Schneeman](https://www.youtube.com/watch?v=s4QxOxGL1tI)\r\n* [Eager Loading - Railscasts](https://www.youtube.com/watch?v=s2EPVMqOsTQ)\r\n* [N+1 Problem: Eager Loading with Active Record - Codemy School](https://www.youtube.com/watch?v=wLMRzdOztUY)\r\n\r\n### RUBY - AI, NATURAL LANGUAGE PROCESSING, STATISTICAL ANALYSIS, ETC.\r\n\r\n* [Sentiment Analysis using Support Vector Machines in Ruby - Matthew Kirk (CascadiaRuby 2013)](http://confreaks.tv/videos/2781-cascadiaruby2013-sentiment-analysis-using-support-vector-machines-in-ruby), which references [the rb-libsvm gem](https://github.com/febeling/rb-libsvm)\r\n* [Natural Language Processing with Ruby - Brandon Black (RailsConf 2013)](http://confreaks.tv/videos/2440-railsconf2013-natural-language-processing-with-ruby)\r\n\r\n### RUBY - APIS\r\n\r\n* [Building Your API for Longevity - Mike Stowe (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-building-your-api-for-longevity)\r\n* [Future-Proofing Your 3rd Party Integrations - Jeffrey Matthias (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-future-proofing-your-3rd-party-integrations)\r\n* [Writing APIs - James Miller](http://www.sdruby.org/podcast/128)\r\n* [Designing Great APIs: Learning from Jony Ive, Orwell and the Kano Model (RailsConf 2013)](https://www.youtube.com/watch?v=RfueDq8-Wwg)\r\n\r\n### RUBY - ASYNCHRONOUS/EVENTED/THREADED\r\n\r\n* [event_sourced_record (gem from fhwang)](https://github.com/fhwang/event_sourced_record)\r\n* [Letting Concurrency Help You Today - Richard Bishop (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-letting-concurrency-help-you-today)\r\n* [Promises in Ruby - Dinshaw Gobhai (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-promises-in-ruby)\r\n* [Immutability Matters - Ranjeet Singh (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-immutability-matters)\r\n* [Refactoring Ruby with Monads - Tom Stuart (GoGaRuCo 2014)](http://www.confreaks.tv/videos/4154-gogaruco2014-refactoring-ruby-with-monads)\r\n* [How to Consume Lots of Data - Doug Alcorn (Burlington Ruby Conf 2014)](http://vimeo.com/album/2996485/video/103475219)\r\n* [Concurrent-ruby gem](https://github.com/jdantonio/concurrent-ruby)\r\n* [Confreaks threading videos](http://www.confreaks.tv/search?utf8=%E2%9C%93&query=thread&commit=go) & [Confreaks asynchronous videos](http://www.confreaks.tv/search?utf8=%E2%9C%93&query=async&commit=go)\r\n* [The Celluloid Ecosystem - Tony Arcieri (RubyConf 2012)](http://confreaks.tv/videos/1302-rubyconf2012-the-celluloid-ecosystem)\r\n* [Faye - Simple Pub/Sub](http://faye.jcoglan.com/) & [Github](https://github.com/faye/faye)\r\n* [Ruby-Toolbox - Background Jobs](https://www.ruby-toolbox.com/categories/Background_Jobs)\r\n* [Ruby-Toolbox - Concurrent Processing](https://www.ruby-toolbox.com/categories/Concurrent_Processing)\r\n* [Ruby-Toolbox - Recurring Events](https://www.ruby-toolbox.com/categories/recurring_events)\r\n* [Ruby-Toolbox - Scheduling](https://www.ruby-toolbox.com/categories/scheduling)\r\n* [Modern Concurrency Practices in Ruby - Arnab Deka (Ruby Australia 2014)](http://vimeo.com/89489939)\r\n* [Immutable Ruby - Michael Fairley (Ruby Australia 2013)](http://vimeo.com/61231676)\r\n* [Dear God What Am I Doing? Concurrency and Parallel Processing - Adam Hawkins (Ruby Australia 2013)](http://vimeo.com/61342268)\r\n* [What All Rubyists Should Know About Threads - Jim Weirich (RubyConf 2008)](http://www.confreaks.tv/videos/1154-rubyconf2008-what-all-rubyists-should-know-about-threads)\r\n* [Brian Shirai on Rubinius 2.0, the GIL, and thread-safe Ruby code](http://www.jstorimer.com/2013/03/26/brian-shirai-threads.html)\r\n* [Evented Ruby vs Node.js - Jerry Cheung (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1231-aloharuby2012-evented-ruby-vs-node-js) & [RailsConf 2012](http://confreaks.tv/videos/894-railsconf2012-evented-ruby-vs-node-js)\r\n* [Sending async data from Rails into the world - Part Ⅰ](http://blog.arkency.com/2012/10/sending-async-data-from-rails-into-the-world/)\r\n* [Async Everything - Anthony Eden (MadisonRuby 2012)](http://confreaks.tv/videos/1099-madisonruby2012-async-everything)\r\n* [Evented Ruby vs Node.js - Jerry Cheung (RailsConf 2012)](http://confreaks.tv/videos/894-railsconf2012-evented-ruby-vs-node-js)\r\n* [Introduction to EventMachine and Evented Programming - Mathias Meyer (Scotland Ruby Conf 2011)](http://confreaks.tv/videos/555-scotlandruby2011-introduction-to-eventmachine-and-evented-programming)\r\n* [High Performance Ruby: Threading versus Evented - Dr. Nic Williams (Ruby Midwest 2011)](http://confreaks.tv/videos/768-rubymidwest2011-high-performance-ruby-threading-versus-evented)\r\n* [Asynchronous Processing for Fun and Profit - Mike Perham (RubyConf 2012)](http://confreaks.tv/videos/1290-rubyconf2012-asynchronous-processing-for-fun-and-profit)\r\n* [Ruby, Code, Threads, Events and Flying Robots using EventMachine & Celluloid - Jim Weirich (BigRuby 2013)](http://confreaks.tv/videos/2296-bigruby2013-keynote)\r\n* [Friendly Flying Robots With Ruby - Jim Weirich (SteelCityRuby 2013)](http://steelcityruby.confbots.com/video/72709097)\r\n\r\n### RUBY - BACKUP & DISASTER RECOVERY\r\n\r\n* [Ruby-Toolbox - Backups](https://www.ruby-toolbox.com/categories/backups)\r\n\r\n### RUBY - BLOCKS\r\n\r\n* [Code Blocks in Ruby - Alex Chaffee](https://www.youtube.com/watch?v=K8uhD8mtorE)\r\n* [Dissecting a Ruby Block - Pat Shaughnessy (RubyConf 2012)](http://confreaks.tv/videos/1286-rubyconf2012-dissecting-a-ruby-block) & [BostonRB.org](http://bostonrb.org/presentations/dissecting-a-ruby-block)\r\n* [Ruby Monsters Go Bump in the Night - Jonan Scheffler (Keep Ruby Weird 2014)](http://confreaks.tv/videos/4789-KeepRubyWeird14-ruby-monsters-go-bump-in-the-night)\r\n\r\n### RUBY - BLOGS\r\n\r\n* [Writing a compiler in Ruby, bottom up (Vidar Hokstad)](http://www.hokstad.com/compiler/)\r\n* [A Fresh Cup (Mike Gunderloy)](http://afreshcup.com/)\r\n* [Avdi Grimm](http://devblog.avdi.org/)\r\n* [Green Ruby](http://greenruby.org/)\r\n* [Mike Perham](http://www.mikeperham.com/)\r\n* [Planet Ruby on Rails](http://planetrubyonrails.com/)\r\n* [RubyInside](http://www.rubyinside.com/)\r\n* [RubyFlow](http://www.rubyflow.com/)\r\n* [The Ruby Show (podcasts)](http://rubyshow.com/)\r\n* [Thoughtbot (podcasts)](http://learn.thoughtbot.com/podcast)\r\n* [TableXI.com](http://www.tablexi.com/blog/)\r\n\r\n### RUBY - BUNDLER\r\n\r\n* [Bundler 1.1 - Pat Shaughnessy (BostonRB.org)](http://bostonrb.org/presentations/bundler-11)\r\n\r\n### RUBY - CLEAN CODE\r\n\r\n* [Rubycop](https://github.com/bbatsov/rubocop)\r\n* [bbatsov / ruby-style-guide](https://github.com/bbatsov/ruby-style-guide)\r\n* [Nothing is Something - Sandi Metz (BathRuby 2015)](https://www.youtube.com/watch?v=9lv2lBq6x4A) & [RailsConf 2015](https://www.youtube.com/watch?v=OMPfEXIlTVE)\r\n* [Write Small Things - Mark Menard (LA Ruby Conf 2014)](https://www.youtube.com/watch?v=A0aZLDaGozM)\r\n* [That's Not Very Ruby of You - Ernie Miller (RubyConf 2013)](https://www.youtube.com/watch?v=OB-xFC8AN_s)\r\n* [Avdi Grimm's \"Naught\" gem](https://github.com/avdi/naught), [\"Null Objects and Falsiness\"](http://devblog.avdi.org/2011/05/30/null-objects-and-falsiness/), and [two papers](http://www.two-sdg.demon.co.uk/curbralan/papers/europlop/NullObject.pdf) & [explaining the null object pattern](http://www.two-sdg.demon.co.uk/curbralan/papers/europlop/NullObject.pdf)\r\n* [All the Little Things - Sandi Metz (RailsConf 2014)](https://www.youtube.com/watch?v=8bZh5LMaSmE)\r\n* [Component-based Architectures in Ruby and Rails - Stephan Hagemann (MountainWest RubyConf 2013)](http://confreaks.tv/videos/2350-mwrc2013-component-based-architectures-in-ruby-and-rails)\r\n* [Refactoring Fat Models with Patterns](http://www.confreaks.tv/videos/2290-larubyconf2013-refactoring-fat-models-with-patterns)\r\n* [So You Want to Start Refactoring? - Jilliam Foley](https://www.youtube.com/watch?v=HFaXuMQTnOc)\r\n* [Rules - Sandi Metz (BaRuCo 2013)](http://www.youtube.com/watch?v=npOGOmkxuio)\r\n* [Building a Ruby Library, the Parts No One Talks About - Mitchell Hashimoto (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1246-aloharuby2012-building-a-ruby-library-the-parts-no-one-talks-about)\r\n* [High-Performance Ruby - Charles Nutter (Ruby Australia 2013)](http://vimeo.com/61255646)\r\n* [Here Be Dragons - Katrina Owen (Rocky Mountain Ruby 2013)](http://confreaks.tv/videos/2649-rockymountainruby2013-here-be-dragons)\r\n* [Strong Duck Type Driven Development - John Cinnamond (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-strong-duck-type-driven-development)\r\n* [Kata and Analysis - Jim Weirich (BostonRB.org)](http://bostonrb.org/presentations/kata-and-analysis)\r\n* [The Value of Value Objects - Jeremy Weiskotten (BostonRB.org)](http://bostonrb.org/presentations/the-value-of-value-objects)\r\n* [Life on the Edge - James Edward Gray II (Ruby Midwest 2011)](http://confreaks.tv/videos/767-rubymidwest2011-life-on-the-edge)\r\n* [Confident Code - Avdi Grimm (Ruby Midwest 2011)](http://confreaks.tv/videos/763-rubymidwest2011-confident-code)\r\n* [Thinking in Objects - Josh Susser (Steel City Ruby 2012)](http://confreaks.tv/videos/1133-scrc2012-thinking-in-objects) & [RailsConf 2012](http://confreaks.tv/videos/1315-rubyconf2012-thinking-in-objects)\r\n* [Making Little Classes out of Big Ones - Avdi Grimm (Hashrocket Lunch n' Learn)](http://vimeo.com/42622511)\r\n* [How to build, use and grow internal tools - Keavy McMinn (RubyConf 2012)](http://confreaks.tv/videos/1292-rubyconf2012-how-to-build-use-and-grow-internal-tools)\r\n* [Better Ruby Through Design Principles - Mike Gehard (MountainWest Ruby Conf 2012)](http://confreaks.tv/videos/957-mwrc2012-better-ruby-through-design-principles)\r\n* [Go Ahead, Make a Mess - Sandi Metz (GoGaRuCo 2012)](http://confreaks.tv/videos/1115-gogaruco2012-go-ahead-make-a-mess)\r\n* [It's the Little Things - Jamis Buck (MountainWest RubyConf 2012)](http://confreaks.tv/videos/965-mwrc2012-it-s-the-little-things)\r\n* [Maintaining Balance While Reducing Duplication - David Chelimsky (RubyConf 2010)](http://www.confreaks.tv/videos/434-rubyconf2010-maintaining-balance-while-reducing-duplication)\r\n* [The Polite Programmer's Guide to Ruby Etiquette - Jim Weirich, Ed Sumerfield, Chris Nelson (RubyConf 2010)](http://www.confreaks.tv/videos/374-rubyconf2010-the-polite-programmer-s-guide-to-ruby-etiquette)\r\n* [Raise the bar, lower the pressure - Durran Jordan (Scotland Ruby 2011)](http://confreaks.tv/videos/543-scotlandruby2011-raise-the-bar-lower-the-pressure)\r\n* [What's Wrong With Ruby's Object Model (And Why That's a Good Thing) - David Brady (MountainWest RubyConf 2012)](http://confreaks.tv/videos/958-mwrc2012-what-s-wrong-with-ruby-s-object-model-and-why-that-s-a-good-thing)\r\n* [Simulating the World with Ruby - Bryan Liles (MadisonRuby 2012)](http://confreaks.tv/videos/1088-madisonruby2012-simulating-the-world-with-ruby)\r\n* [Literary Criticism for the Idle Programmer - Roland Swingler (Scotland Ruby Conf 2011)](http://confreaks.tv/videos/548-scotlandruby2011-literary-criticism-for-the-idle-programmer)\r\n* [Building Blocks of Modularity - Jim Weirich (Scotland on Rails 2009)](http://scotland-on-rails.s3.amazonaws.com/1A03_JimWeirich-SOR.mp4)\r\n* [The Insufficiency of Good Design - Sarah Mei (RubyConf 2012)](http://confreaks.tv/videos/1304-rubyconf2012-the-insufficiency-of-good-design)\r\n* [Insight, Intuition and Programming - Russ Olsen (Ancient City Ruby 2013)](http://www.youtube.com/watch?v=rQp1CFJxgs0)\r\n* [Extending Ruby with Ruby - Michael Fairley (RailsConf 2012)](https://www.youtube.com/watch?v=ZjYgNnCtpg4) & [his method_decorators gem](https://github.com/michaelfairley/method_decorators)\r\n\r\n### RUBY - COMMAND LINE APPS\r\n\r\n* [Command Line Applications in Ruby: the Good Stuff - Mark Ranallo](http://www.sdruby.org/podcast/117)\r\n\r\n### RUBY - CRUBY\r\n\r\n* [Intro to CRuby Source Code - Andy Pliszka (MountainWest Ruby 2014)](http://confreaks.tv/videos/3271-mwrc-introduction-to-cruby-source-code)\r\n\r\n### RUBY - DEBUGGING\r\n\r\n* [Peeking into Ruby: Tracing Running Code - Jason Clark (ArrrrCamp 2015)](http://confreaks.tv/videos/arrrrcamp2015-peeking-into-ruby-tracing-running-code)\r\n* [What’s happening in your Rails app? Introduction to Introspection features of Ruby - Koichi Sasada (RailsConf 2015)](http://confreaks.tv/videos/railsconf2015-what-s-happening-in-your-rails-app-introduction-to-introspection-features-of-ruby)\r\n* [The Scientific Method of Troubleshooting - Blithe Rocher (GoGaRuCo 2014)](http://www.confreaks.tv/videos/4161-gogaruco2014-the-scientific-method-of-troubleshooting)\r\n* [We're sorry, but something went wrong - Aja Hammerly (CascadiaRuby 2013)](http://confreaks.tv/videos/2783-cascadiaruby2013-we-re-sorry-but-something-went-wrong)\r\n* [Better_errors gem](https://github.com/charliesome/better_errors) & [Railscast](http://railscasts.com/episodes/402-better-errors-railspanel)\r\n* [Dissecting Ruby with Ruby - Richard Schneeman (LoneStarRuby 2013)](http://confreaks.tv/videos/2586-lonestarruby2013-dissecting-ruby-with-ruby)\r\n* [Tracing your way through ruby - Elise Huard (BaRuCo 2012)](http://confreaks.tv/videos/1330-baruco2012-tracing-your-way-through-ruby)\r\n* [Code Climate (free only for open-source)](https://codeclimate.com/) [Free for public Github repos](https://codeclimate.com/github/signup)\r\n* [Debugging Ruby - Aman Gupta (RubyConf 2010)](http://www.confreaks.tv/videos/371-rubyconf2010-debugging-ruby)\r\n* [Ruby Debugger - Jumpstart Lab](http://tutorials.jumpstartlab.com/topics/debugging/debugger.html)\r\n* [Mastering the Ruby Debugger - Jim Weirich (Ruby Midwest 2011)](http://confreaks.tv/videos/760-rubymidwest2011-mastering-the-ruby-debugger) (covers Pry, then Ruby Debugger)\r\n* [Debugging Ruby - Hemant Kumar](http://www.youtube.com/watch?v=F57J1vedlx0)\r\n* [Effective Debugging - Jonathan Wallace (RubyConf India 2013)](http://www.youtube.com/watch?v=T9JRsNJSpcs)\r\n\r\n#### RUBY - DEBUGGING - BYEBUG\r\n\r\n* [Byebug](https://github.com/deivid-rodriguez/byebug)\r\n* [Debugging with the byebug gem (RailsGuides)](http://edgeguides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-byebug-gem)\r\n* [Byebug Cheatsheet](http://fleeblewidget.co.uk/2014/05/byebug-cheatsheet/)\r\n\r\n#### RUBY - DEBUGGING - PRY\r\n\r\n* Pry: [Website](http://pryrepl.org/) | [API docs](http://www.rubydoc.info/github/pry/pry/master/Pry) | [Screencasts](http://pryrepl.org/screencasts.html) | [Github](https://github.com/pry/pry) | [Pry Wiki](https://github.com/pry/pry/wiki) | [Documentation browsing](https://github.com/pry/pry/wiki/Documentation-browsing) | [Source browsing](https://github.com/pry/pry/wiki/Source-browsing) | [Shell access](https://github.com/pry/pry/wiki/Shell-Integration) | [Live help](https://github.com/pry/pry/wiki/Live-help)\r\n* [State navigation](https://github.com/pry/pry/wiki/State-navigation)\r\n* [The Great Cheatsheet for Pry - Rico Sta. Cruz](http://ricostacruz.com/cheatsheets/pry.html)\r\n* [Prying Open The Black Box - Godfrey Chan (RailsConf 2015)](https://youtu.be/IjbYhE9mWuk)\r\n* [Debugger Driven Developement with Pry - Joel Turnbull (RailsConf 2014)](https://www.youtube.com/watch?v=4hfMUP5iTq8)\r\n* [Pry Railscast](http://railscasts.com/episodes/280-pry-with-rails)\r\n* [Pry API docs](http://rdoc.info/github/pry/pry/master/Pry)\r\n* [Rubyists, It’s Time to PRY Yourself Off IRB! - Benjamin Tan Wei Hao](http://www.sitepoint.com/rubyists-time-pry-irb/)\r\n* [Pry - The Good Parts! - Conrad Irwin (RailsConf 2013)](https://www.youtube.com/watch?v=jDXsEzOHb2M)\r\n* [REPL-driven development with Pry - Conrad Irwin (RubyConf 2013)](https://www.youtube.com/watch?v=D9j_Mf91M0I)\r\n* [Prying into your app's private life - Corey Woodcox (MountainWest RubyConf 2012)](http://confreaks.tv/videos/959-mwrc2012-prying-into-your-app-s-private-life)\r\n* [PryRepl.org screencasts](http://pryrepl.org/screencasts.html)\r\n* [Pry screencast - Joshua Cheek](http://www.vimeo.com/26391171)\r\n* [jazz_hands](https://github.com/nixme/jazz_hands) adds [AwesomePrint](https://github.com/michaeldv/awesome_print), [Hirb](https://github.com/cldwalker/hirb), [Pry Rails](https://github.com/rweng/pry-rails), [Pry Doc](https://github.com/pry/pry-doc), [Pry Git](https://github.com/pry/pry-git), [Pry Remote](https://github.com/Mon-Ouie/pry-remote), [Pry Debugger](https://github.com/nixme/pry-debugger), [Pry Stack Explorer](https://github.com/pry/pry-stack_explorer), [Coolline](https://github.com/Mon-Ouie/coolline) and [Coderay](https://github.com/rubychan/coderay)\r\n* [Better Rails Debugging with better_errors and jazz_hands - Ross Hunter](http://www.mutuallyhuman.com/blog/2013/05/17/better-rails-debugging-with-better_errors-and-jazz_hands/)\r\n* [Interactive Debugging With Pry](http://www.alanmacdougall.com/blog/2012/06/08/interactive-debugging-with-pry/)\r\n\r\n#### RUBY - DEBUGGING - RUBY-DEBUG\r\n\r\n* [Getting to know Ruby debugger - Cameron Dykes](http://object.io/site/2011/getting-to-know-ruby-debugger/)\r\n* [Ruby Debugging: Life After \"Puts\" - Rob Kaufman (SDRuby)](http://www.sdruby.org/podcast/111)\r\n* [Debugging with ruby-debug](http://bashdb.sourceforge.net/ruby-debug.html)\r\n\r\n### RUBY - DISTRIBUTED/SOA/SERVICES\r\n\r\n* [Conventions Between Applications - Michael Ries (MountainWest RubyConf 2015)](http://confreaks.tv/videos/mwrc2015-conventions-between-applications)\r\n* [Services, Services, Everywhere! - Evan Phoenix (Barcelona RubyConf 2014)](https://www.youtube.com/watch?v=msxQqvPFTXE)\r\n* [Facing the Monolith: Overcoming Monolithic Applications with SOA - Charles Max Wood (Aloha RubyConf 2012)](http://confreaks.tv/videos/1249-aloharuby2012-facing-the-monolith-overcoming-monolithic-applications-with-soa)\r\n* [Distributed Patterns in Ruby - Eric Redmond (Ancient City Ruby 2013)](http://www.youtube.com/watch?v=Adu_dbcnUHA)\r\n* [Far and Away (A Tour of Distributed Programming with Ruby) - Mark Bates (RubyConf 2010)](http://www.confreaks.tv/videos/455-rubyconf2010-far-and-away-a-tour-of-distributed-programming-with-ruby)\r\n* [Debugging Large Scale Service Oriented Systems - Andy Delcambre (CascadiaRuby 2012)](http://confreaks.tv/videos/1068-cascadiaruby2012-debugging-large-scale-service-oriented-systems)\r\n* [Service Oriented Architecture at Square - Chris Hunt (RubyConf 2012)](http://confreaks.tv/videos/1273-rubyconf2012-service-oriented-architecture-at-square)\r\n\r\n### RUBY - DOCUMENTATION\r\n\r\n* [Reading Ruby Documentation (Arrays) - Richard Schneems](https://www.youtube.com/watch?v=pNWqAcWMMQE)\r\n\r\n#### RUBY - DOCUMENTATION - YARD\r\n\r\n* [Yard docs](http://rubydoc.info/docs/yard/index)\r\n* [Yard - Getting started](http://rubydoc.info/docs/yard/file/docs/GettingStarted.md)\r\n\r\n### RUBY - FEATURES\r\n\r\n* [Beneath the Surface: Regular Expressions in Ruby - Nell Shamrell (GoGaRuCo 2013)](http://confreaks.tv/videos/2678-gogaruco2013-beneath-the-surface-regular-expressions-in-ruby)\r\n* [Ruby Trick Shots: 24 Ruby Language Tips and Tricks - Peter Cooper](http://www.youtube.com/watch?v=gIEMKOI_Y-4)\r\n* [Ruby Tips, Pt 1 - Mat Sadler](http://globaldev.co.uk/2013/09/ruby-tips-part-1/) & [Pt 2](http://globaldev.co.uk/2013/09/ruby-tips-part-2/) & [Pt 3](http://globaldev.co.uk/2013/09/ruby-tips-part-3/)\r\n* [Ruby Idioms You're Not Using Yet - Craig Buchek (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-ruby-idioms-you-re-not-using-yet)\r\n* [Building a Mocking Library - Andy Lindeman (Ancient City Ruby 2013)](http://www.youtube.com/watch?v=2aYdtS7FZJA)\r\n* [Building modular, scalable web apps? Of CORS! (Cross-domain AJAX requests) - Michael Bleigh (RubyConf 2012)](http://confreaks.tv/videos/1285-rubyconf2012-building-modular-scalable-web-apps-of-cors)\r\n* [RubyTapas.com (only some free) - Avdi Grimm](http://www.rubytapas.com/episodes)\r\n* [The Well-Grounded Nuby - David A. Black (BostonRB.org)](http://bostonrb.org/presentations/the-well-grounded-nuby)\r\n\r\n### RUBY - FEATURES - ENUMERABLES\r\n\r\n* [Enumerable for Fun & Profit - Michael Hartl (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-enumerable-for-fun-profit)\r\n\r\n### RUBY - FUN\r\n\r\n* [A Magical Gathering - Aaron Patterson (MountainWest Ruby 2014)](http://confreaks.tv/videos/3269-mwrc-a-magical-gathering), uses [OpenCV (for real-time computer vision)](http://opencv.org/)\r\n* [decaf - Webkit modified to run Ruby in the browser](https://github.com/timahoney/decaf)\r\n* [Hardware Hacking and M2M Websites with Ruby - Steve Morss (BostonRb 2013)](http://bostonrb.org/presentations/hardware-hacking-and-m2m-websites-with-ruby)\r\n\r\n### RUBY - FUTURE (AND CURRENT PROBLEMS)\r\n\r\n* [Keynote: The Soul of Software - Avdi Grimm (Tropical Ruby 2015)](http://tropicalrb.com/en/videos/) & [LoneStarRuby 2015](https://www.youtube.com/watch?v=zs0E4E83_X8)\r\n* [3 Reasons Not to Use Ruby - Sarah Allen (GoGaRuCo 2014)](http://confreaks.tv/videos/gogaruco2014-3-reasons-not-to-use-ruby)\r\n* [Panel: The Future of Ruby - Mark Bates, Sandi Metz, Ernie Miller, and Johnny Bourisquot (Burlington Ruby Conf 2014)](http://vimeo.com/album/2996485/video/103590400)\r\n* [Keynote - Ernie Miller (Burlington Ruby Conference 2014)](http://vimeo.com/album/2996485/video/103529608)\r\n* [Panel: Future of Rails Jobs - Obie Fernandez, Allan Grant, Chad Pytel, Jeff Casimir and Corey Haines (RailsConf 2014)](https://www.youtube.com/watch?v=4OCnxb0CoUo)\r\n* [Rescuing Ruby - Greg Brockman (Ruby Australia 2014)](http://vimeo.com/89494987)\r\n\r\n### RUBY - GEMS, TOOLS & LIBRARIES\r\n\r\n* Rubygems.org: [Guides](http://guides.rubygems.org/) & [Gem search](https://rubygems.org/gems)\r\n* [Awesome Ruby](https://github.com/markets/awesome-ruby)\r\n* [Make Awesome Command-Line Apps with Ruby - David Copeland (Ruby Midwest 2011)](http://confreaks.tv/videos/762-rubymidwest2011-make-awesome-command-line-apps-with-ruby)\r\n* [Ruby Libraries Important for Rails by Michael Hartl (RailsConf 2013)](https://www.youtube.com/watch?v=noWORpSTQGE)\r\n* [Hacking With Gems - Benjamin Smith (Ruby Australia 2013)](http://vimeo.com/61255737)\r\n* [Extreme Makeover - Rubygems Edition - André Arko (Ruby Australia 2014)](http://vimeo.com/88941448)\r\n\r\n### RUBY - INTERNALS\r\n\r\n* [Ruby Hacking Guide (MRI)](http://ruby-hacking-guide.github.io/)\r\n* [Complex Ruby concepts dummified - Matt Aimonetti (RubyConf 2011)](https://www.youtube.com/watch?v=Qxoc1wrjBuE)\r\n\r\n### RUBY - IRUBY NOTEBOOK\r\n\r\n* [iRuby notebook](http://nbviewer.ipython.org/github/minad/iruby/blob/master/IRuby-Example.ipynb)\r\n\r\n### RUBY - JUBILEE\r\n\r\n* [Jubilee](https://github.com/isaiah/jubilee)\r\n* [6 Reasons Jubilee Could be a Rubyist's New Best Friend - Forrest Chang (RubyConf 2014)](http://confreaks.tv/videos/5014-RubyConf2014-6-reasons-jubilee-could-be-a-rubyist-s-new-best-friend)\r\n\r\n### RUBY - LOGGING & PROBLEM DETECTION\r\n\r\n* [It’s Not in Production Unless it’s Monitored - Joseph Ruscio (RailsConf 2012)](http://confreaks.tv/videos/906-railsconf2012-its-not-in-production-unless-its-monitored)\r\n* [Ruby-Toolbox - Exception notification](https://www.ruby-toolbox.com/categories/exception_notification)\r\n* [Ruby-Toolbox - Rails instrumentation](https://www.ruby-toolbox.com/categories/rails_instrumentation)\r\n* [Ruby-Toolbox - Log analysis](https://www.ruby-toolbox.com/categories/Log_Analysis)\r\n* [Ruby-Toolbox - Logging](https://www.ruby-toolbox.com/categories/Logging)\r\n* [Ruby-Toolbox - Rails admin interfaces](https://www.ruby-toolbox.com/categories/rails_admin_interfaces)\r\n* [Ruby-Toolbox - Reporting](https://www.ruby-toolbox.com/categories/reporting)\r\n* [Ruby-Toolbox - Server monitoring](https://www.ruby-toolbox.com/categories/server_monitoring)\r\n\r\n### RUBY - METAPROGRAMMING\r\n\r\n* Metaprogramming Tutorial (Matt Stopa): [I - send](https://www.youtube.com/watch?v=kNpcaaL_dZA) | [II - define_method](https://www.youtube.com/watch?v=lK8pGCu46nM) | [III - ORM example](https://www.youtube.com/watch?v=pvn0ZHPTUSI)\r\n* [Class's Class is Class (Metaprogramming is Trolling You) - Chris Kelly](http://www.sdruby.org/podcast/129)\r\n* [Your Bright Metaprogramming Future: Mistakes You'll Make (and How to Fix Them) - Betsy Haibel (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-your-bright-metaprogramming-future-mistakes-you-ll-make-and-how-to-fix-them)\r\n\r\n### RUBY - METRICS (MONITORING WHAT MATTERS)\r\n\r\n* [Your app is not a black box - Josh Kalderimis (RubyConf 2012)](http://confreaks.tv/videos/1282-rubyconf2012-your-app-is-not-a-black-box)\r\n* [Ruby Monitoring State of the Union - Joseph Ruscio (RubyConf 2012)](http://confreaks.tv/videos/1276-rubyconf2012-ruby-monitoring-state-of-the-union)\r\n* [Ruby-Toolbox - Reporting](https://www.ruby-toolbox.com/categories/reporting)\r\n* [Ruby-Toolbox - Visualizing Data](https://www.ruby-toolbox.com/categories/visualizing_data)\r\n* [Ruby-Toolbox - Web Analytics](https://www.ruby-toolbox.com/categories/Web_Analytics)\r\n\r\n### RUBY - OBJECTS\r\n\r\n* [A Deep Dive into the Ruby Object Model - Peter Cooper](https://www.youtube.com/watch?v=by5fFOBhtPQ)\r\n* [The Ruby Object Model - Dave Thomas (Scotland on Rails 2009)](https://www.youtube.com/watch?v=X2sgQ38UDVY)\r\n\r\n### RUBY - OPAL\r\n\r\n* [Opal: Ruby to Javascript Compiler](http://opalrb.org/) & [Github](https://github.com/opal/opal)\r\n* [Try Opal](http://opalrb.org/try/)\r\n* [Opal Robots](http://4r2r.github.io/opal-robots/)\r\n* [Opal: Ruby in Your Browser, the Basics - Benjamin Tan Wei Hao](http://www.sitepoint.com/opal-ruby-browser-basics/) & [Opal: Ruby in the Browser and the Game of Life](http://www.sitepoint.com/opal-ruby-browser-game-life/)\r\n\r\n### RUBY - PERFORMANCE & LOAD TESTING\r\n\r\n* [The Recipe for the World's Largest Rails Monolith - Akira Matsuda (RubyOnAles 2015)](https://www.youtube.com/watch?v=naTRzjHaIhE)\r\n* [Ruby Objects: A Walkabout - Terence Lee (Ruby on Ales 2015)](http://confreaks.tv/videos/roa2015-ruby-objects-a-walkabout)\r\n* [Real World Ruby Performance at Scale - Aaron Quint (RubyConf 2014)](https://www.youtube.com/watch?v=qlS3yr1oncQ)\r\n* [The Future of Ruby Performance Tooling - Aaron Quint (GoRuCo 2014)](http://goruco.com/speakers/2014/aaron-quint/)\r\n* [Smoke & Mirrors: The Primitives of High Availability - Paul Hinze (MountainWest RubyConf 2015)](http://confreaks.tv/videos/mwrc2015-smoke-mirrors-the-primitives-of-high-availability)\r\n* [Giant Pile of Data - Aja Hammerly (GoGaRuCo 2014)](http://confreaks.tv/videos/gogaruco2014-giant-pile-of-data)\r\n* [Writing Fast Ruby - Erik Michaels-Ober (Barcelona RubyConf)](http://rubyvideos.com/videos/writing-fast-ruby)\r\n* [Deoptimizing Ruby - Chris Seaton (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-deoptimizing-ruby)\r\n* [Benchmarking Ruby - Davy Stevenson (Portland Ruby Brigade Dec 2014)](http://confreaks.tv/videos/pdxrbdec2015-benchmarking-ruby)\r\n* [Oktoperfest: Ruby Performance Tooling - Aaron Quint](http://dev.paperlesspost.com/blog/2013/10/28/oktoperfest-ruby-performance-tooling/)\r\n* [Ruby Performance Secrets and How to Uncover Them - Alexander Dymo (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-ruby-performance-secrets-and-how-to-uncover-them)\r\n* [Capacity planning with Capybara and RabbitMQ - Vijayanand Nandam (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-capacity-planning-with-capybara-and-rabbitmq)\r\n* [Resilient by Design - Smit Shah (Garden City Ruby 2015)](http://confreaks.tv/videos/gardencityrb2015-resilient-by-design)\r\n* [Eliminating the Global Interpreter Lock (GIL)](http://researcher.watson.ibm.com/researcher/view_person_subpage.php?id=5206)\r\n* [Ruby-Toolbox - Benchmarking](https://www.ruby-toolbox.com/categories/Benchmarking)\r\n* [Measuring Ruby - Sam Saffron & Jeff Atwood (GoGaRuCo 2013)](http://confreaks.tv/videos/2668-gogaruco2013-measuring-ruby)\r\n* [Frequently Asked Questions - Ben Orenstein (GoGaRuCo 2013)](http://confreaks.tv/videos/2677-gogaruco2013-frequently-asked-questions)\r\n* [Cargo Cult Web Performance Optimization - Ilya Grigorik (GoGaRuCo 2012)](http://confreaks.tv/videos/1111-gogaruco2012-cargo-cult-web-performance-optimization)\r\n* [The Short and Happy LIves of TCP and HTTP Requests - Starr Horne (GoGaRuCo 2014)](http://confreaks.tv/videos/gogaruco2014-the-short-and-happy-lives-of-tcp-and-http-requests)\r\n* [Services, Scale, Backgrounding and WTF is going on here?!??! - David Copeland (GoGaRuCo 2012)](http://confreaks.tv/videos/1119-gogaruco2012-services-scale-backgrounding-and-wtf-is-going-on-here)\r\n* [From Profiling Ruby to Frankenstein Programming - Piotr Szotkowski (Scotland Ruby Conference 2011)](http://confreaks.tv/videos/547-scotlandruby2011-from-profiling-ruby-to-frankenstein-programming)\r\n* [Message in a Bottle - Konstantin Haase (BaRuCo 2012)](http://confreaks.tv/videos/1335-baruco2012-message-in-a-bottle) & [Aloha Ruby Conf 2012](http://confreaks.tv/videos/1236-aloharuby2012-message-in-a-bottle)\r\n* [Ensuring High Performance For Your Ruby App - Kowsik Guruswamy (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1238-aloharuby2012-ensuring-high-performance-for-your-ruby-app)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - BENCHMARK\r\n\r\n* Benchmark module: [Ruby 1.9](http://ruby-doc.org/stdlib-1.9.3/libdoc/benchmark/rdoc/Benchmark.html) | [Ruby 2.0](http://ruby-doc.org/stdlib-2.0/libdoc/benchmark/rdoc/Benchmark.html)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - BENCHMARK-IPS\r\n\r\n* [Benchmark-ips](https://github.com/evanphx/benchmark-ips)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - PPROFILER\r\n\r\n* [ppprofiler (PaperlessPost profiler)](https://gist.github.com/quirkey/7191119)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - RACK-MINI-PROFILER\r\n\r\n* [rack-mini-profiler - the Secret Weapon of Ruby and Rails Speed - Nate Berkopec](http://www.nateberkopec.com/2015/08/05/rack-mini-profiler-the-secret-weapon.html)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - RBLINEPROF\r\n\r\n* [rblineprof - Ruby line profiler](https://github.com/tmm1/rblineprof)\r\n* [peek-rblineprof (Rails integration)](https://github.com/peek/peek-rblineprof)\r\n\r\n#### RUBY - PERFORMANCE & LOAD TESTING - STACKPROF\r\n\r\n* [Stackprof - sampling call-stack profiler for Ruby 2.1+](https://github.com/tmm1/stackprof)\r\n\r\n### RUBY - PROJECTS\r\n\r\n* [Building Board Games with Ruby - Yonatan Bergman (GoGaRuCo 2014)](http://confreaks.tv/videos/4158-gogaruco2014-building-board-games-with-ruby)\r\n\r\n### RUBY - RAKE\r\n\r\n* [Rake](https://github.com/jimweirich/rake)\r\n* [Basic Rake - Jim Weirich](http://www.youtube.com/watch?v=AFPWDzHWjEY)\r\n* [Power Rake - Jim Weirich](http://confreaks.tv/videos/1139-scrc2012-power-rake)\r\n* [Using Rake to Automate Tasks - Stuart Ellis](http://www.stuartellis.eu/articles/rake/)\r\n\r\n### RUBY - REFACTORING\r\n\r\n* [Suture: Ruby gem that helps you refactor legacy code](https://github.com/testdouble/suture) | [Surgical Refactors (slides) - Justin Searls](https://speakerdeck.com/searls/surgical-refactors)\r\n* [Scientist: A Ruby library for carefully refactoring critical paths (open-sourced by Github)](https://github.com/github/scientist) & [explanatory article](http://githubengineering.com/move-fast/)\r\n* [Refactoring - SourceMaking.com](http://sourcemaking.com/refactoring)\r\n* [Live Refactoring - Ben Orenstein (BathRuby 2015)](https://www.youtube.com/watch?v=gr97FrX2WiQ)\r\n* [Data-Driven Refactoring - Coraline Ada Ehmke (MountainWest RubyConf 2015)](http://confreaks.tv/videos/mwrc2015-data-driven-refactoring)\r\n* [Fluent Refactoring - Sam Livingston-Gray (LoneStarRubyConf 2013)](http://www.youtube.com/watch?v=xJZrMbS2dDk) & [(CascadiaRuby 2013)](http://confreaks.tv/videos/2792-cascadiaruby2013-fluent-refactoring)\r\n* [Refactoring Fat Models With Patterns - Bryan Helmkamp (wroc_love.rb 2013)](http://www.youtube.com/watch?v=IqajIYxbPOI)\r\n* [Refactoring Legacy Apps with APIs and Messages - Corey Ehmke (LoneStarRubyConf 2013)](http://confreaks.tv/videos/2594-lonestarruby2013-refactoring-legacy-apps-with-apis-and-messages)\r\n* [Refactoring talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=refactoring&commit=go)\r\n* [Code Smells: Your Refactoring Cheat Codes - John Pignata (MountainWest RubyConf 2013)](http://confreaks.tv/videos/2336-mwrc2013-code-smells-your-refactoring-cheat-codes)\r\n* [Transforming Ruby Code - Ben Hughes (BostonRB.org)](http://bostonrb.org/presentations/transforming-ruby-code)\r\n* [Refactoring - A Live Coding Odyssey - Ben Orenstein (BostonRB.org)](http://bostonrb.org/presentations/refactoring-a-live-coding-odyssey)\r\n* [Live Coding With Ben - Ben Orenstein (Ancient City Ruby 2013)](http://www.youtube.com/watch?v=C0H-LyZy9Ko)\r\n* [Therapeutic Refactoring - Katrina Owen (CascadiaRuby 2012)](http://confreaks.tv/videos/1071-cascadiaruby2012-therapeutic-refactoring)\r\n* [Refactoring from Good to Great - Ben Orenstein (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1233-aloharuby2012-refactoring-from-good-to-great) & [RubyConf 2012](http://confreaks.tv/videos/1283-rubyconf2012-refactoring-from-good-to-great)\r\n\r\n### RUBY - RODA\r\n\r\n* [Introduction to Roda - Janko Marohnić](http://twin.github.io/introduction-to-roda/)\r\n* [The plugin system of Sequel and Roda - Janko Marohnić](http://twin.github.io/the-plugin-system-of-sequel-and-roda/)\r\n\r\n### RUBY - SECURITY\r\n\r\n* [Brakeman](https://github.com/presidentbeef/brakeman)\r\n* [Keeping Rails Applications on Track with Brakeman - Justin Collins (RailsConf 2012)](http://confreaks.tv/videos/890-railsconf2012-keeping-rails-applications-on-track-with-brakeman)\r\n* [Generate Parsers! Prevent Exploits! - Nick Howard (MountainWest Ruby 2014)](http://confreaks.tv/videos/3270-mwrc-generate-parsers-prevent-exploits)\r\n* [Ruby Security Guide](https://code.google.com/p/ruby-security/wiki/Guide)\r\n* [Cryptography for Rails Developers - Christopher Rigor (Tropical Ruby 2015)](https://youtu.be/QUV1k134YB4)\r\n* [Modern Cryptography - John Downey (GoGaRuCo 2012)](http://confreaks.tv/videos/1114-gogaruco2012-modern-cryptography)\r\n* [Hacking with Gems - Ben Smith (Aloha RubyConf 2012)](http://confreaks.tv/videos/1243-aloharuby2012-hacking-with-gems)\r\n* [Good ol' shell injection](https://code.google.com/p/ruby-security/wiki/Guide#Good_ol%27_shell_injection)\r\n* [Ruby-Toolbox - Encryption](https://www.ruby-toolbox.com/categories/encryption)\r\n* [Ruby-Toolbox - Rails Authentication](https://www.ruby-toolbox.com/categories/rails_authentication)\r\n* [Ruby-Toolbox - Rails Authorization](https://www.ruby-toolbox.com/categories/rails_authorization)\r\n* [Ruby-Toolbox - Security Tools](https://www.ruby-toolbox.com/categories/security_tools)\r\n* [Ruby-Toolbox - Spam Detection](https://www.ruby-toolbox.com/categories/spam_detection)\r\n\r\n### RUBY - SEQUEL\r\n\r\n* Sequel: The Database Toolkit for Ruby: [Intro](http://sequel.jeremyevans.net/) | [Documentation](http://sequel.jeremyevans.net/documentation.html) | [Plugins](http://sequel.jeremyevans.net/plugins.html)\r\n* [Ode to Sequel - Janko Marohnić](http://twin.github.io/ode-to-sequel/)\r\n* [RubyTapas Freebie: Sequel - Avdi Grimm](http://devblog.avdi.org/2015/05/26/rubytapas-freebie-sequel/)\r\n* [Sequel for ActiveRecord Users](http://sequel.jeremyevans.net/rdoc/files/doc/active_record_rdoc.html)\r\n\r\n### RUBY - STATE MACHINES\r\n\r\n* [A Machine State of Mind, Part 1: Understanding State Machines - Vaidehi Joshi](http://vaidehijoshi.github.io/blog/2015/03/17/a-machine-state-of-mind-part-1-understanding-state-machines/) & [Part 2: Implementing State Machines](http://vaidehijoshi.github.io/blog/2015/03/24/a-machine-state-of-mind-part-2-implementing-state-machines/)\r\n\r\n### RUBY - SYMBOLS\r\n\r\n* [Ruby's Symbols Explained - Peter Cooper](https://www.youtube.com/watch?v=mBXGBbEbXZY)\r\n\r\n### RUBY - TEACHING KIDS\r\n\r\n* [Programming in the Small - Teaching my 5 Year Old Ruby - Jason Clark (Cascadia Ruby 2014)](https://www.youtube.com/watch?v=jAnSsNga5Nk)\r\n* [Kids Ruby](http://kidsruby.com)\r\n* [Shoes](http://shoesrb.com/), [Github](https://github.com/shoes/shoes) & [Github for Shoes 4](https://github.com/shoes/shoes4)\r\n* [Get Your Shoes Back On - Jason Clark (JRubyConf.eu 2015)](http://confreaks.tv/videos/jrubyconf2015-get-your-shoes-back-on)\r\n* [Hackety Hack](http://hackety.com/) & [Github](https://github.com/hacketyhack/hacketyhack)\r\n\r\n### RUBY - TESTING\r\n\r\n* [Testing Isn't Enough: Fighting Bugs with Hacks - Paul Gross (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-testing-isn-t-enough-fighting-bugs-with-hacks)\r\n* [The Other Junk Drawer: My Tests are a Mess - Christopher Sexton (MountainWest Ruby 2014)](http://confreaks.tv/videos/3273-mwrc-the-other-junk-drawer-my-tests-are-a-mess)\r\n* [TDD For Your Soul: Virtue and Software Engineering - Abraham Sangha (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-tdd-for-your-soul-virtue-and-software-engineering)\r\n* [Re-thinking Regression Testing - Mario Gonzalez (MountainWest Ruby 2014)](http://confreaks.tv/videos/3274-mwrc-re-thinking-regression-testing)\r\n* [SOLID and TDD, Sitting in a Tree - Mike Nicholaides (Rocky Mountain Ruby 2013)](http://confreaks.tv/videos/2653-rockymountainruby2013-solid-and-tdd-sitting-in-a-tree)\r\n* [It's not your test framework, it's you - Robbie Clutton & Matt Parker (LA Ruby Conf 2013)](http://confreaks.tv/videos/2313-larubyconf2013-it-s-not-your-test-framework-it-s-you)\r\n* [TDD: It's More Than Just \"Testing\" - Evan Light (Scotland on Rails 2009)](http://scotland-on-rails.s3.amazonaws.com/1A05_EvanLight-SOR.mp4)\r\n* [Magic Tricks of Testing - Sandi Metz (RailsConf 2013)](http://confreaks.tv/videos/2452-railsconf2013-the-magic-tricks-of-testing) & [slides](https://speakerdeck.com/skmetz/magic-tricks-of-testing-railsconf)\r\n* [DRYing up RSpec - Dan Sharp (Rocky Mountain Ruby 2013)](http://confreaks.tv/videos/2777-rockymountainruby2013-lightning-talk-drying-up-rspec)\r\n* [Testing Should Be Fun - Noel Rappin (RailsConf 2012)](http://confreaks.tv/videos/1306-rubyconf2012-testing-should-be-fun)\r\n* [Testing HTTP APIs in Ruby - Shai Rosenfeld (RailsConf 2013)](http://confreaks.tv/videos/2432-railsconf2013-testing-http-apis-in-ruby)\r\n* [Boundaries - Gary Bernhardt (RailsConf 2012)](http://confreaks.tv/videos/1314-rubyconf2012-boundaries)\r\n* [Going on a Testing Anti-Pattern Safari - Aja Hammerly (MountainWest RubyConf 2013)](http://confreaks.tv/videos/2345-mwrc2013-going-on-a-testing-anti-pattern-safari)\r\n* [Tddium - William Josephson (BostonRB.org)](http://bostonrb.org/presentations/tddium)\r\n* [CodeShip.io blog & videos](http://blog.codeship.io/)\r\n\r\n#### RUBY - TESTING - CAPYBARA\r\n\r\n* Capybara: [Docs](http://www.rubydoc.info/github/jnicklas/capybara) | [Missing API - Makandra](http://makandracards.com/makandra/1422-capybara-the-missing-api) | [Github](https://github.com/jnicklas/capybara)\r\n* [Introduction To Integration Testing - Jason Draper (BostonRB.org)](http://bostonrb.org/presentations/introduction-to-integration-testing)\r\n\r\n#### RUBY - TESTING - CUCUMBER\r\n\r\n* [Cucumber backgrounder](https://github.com/cucumber/cucumber/wiki/Cucumber-Backgrounder)\r\n* [Keynote: Kind of Green - Aslak Helleoy](https://skillsmatter.com/skillscasts/7361-keynote-kind-of-green)\r\n* [The Cucumber/RSpec cycle](http://www.youtube.com/watch?v=8ZmawOCDeyo&list=PLAD5A45605AEDDA40)\r\n* [Intro to Outside-In Development With Cucumber - Charles Wood](http://www.youtube.com/watch?v=8I1_siXLTN0)\r\n\r\n#### RUBY - TESTING - MINITEST\r\n\r\n* [Getting Started with Minitest - Ilija Eftimov](https://semaphoreci.com/community/tutorials/getting-started-with-minitest)\r\n* [A Big Look at MiniTest - Mark Bates (Ruby Australia 2014)](http://vimeo.com/88934438)\r\n* [MiniTest: Refactoring Test Unit and RSpec back to version 0.0.1 - Jared Ning (RailsConf 2012)](http://confreaks.tv/videos/913-railsconf2012-minitest-refactoring-test-unit-and-rspec-back-to-version-0-0-1)\r\n* [MiniTest: Write Awesome Tests - Michael J.I. Jackson (MountainWest RubyConf 2012)](http://confreaks.tv/videos/962-mwrc2012-minitest-write-awesome-tests)\r\n\r\n#### RUBY - TESTING - POLTERGEIST\r\n\r\n* [Cucumber: Testing Web Applications With Capybara, Poltergeist and PhantomJS](https://blog.codecentric.de/en/2013/08/cucumber-capybara-poltergeist/)\r\n* [Migrating From Capybara-Webkit to Poltergeist-PhantomJs](http://www.railsonmaui.com/blog/2013/08/06/migrating-from-capybara-webkit-to-poltergeist-phantomjs/)\r\n* [Poltergeist](https://github.com/jonleighton/poltergeist)\r\n* [Testing JavaScript With PhantomJS - Railscasts (non-free)](http://railscasts.com/episodes/391-testing-javascript-with-phantomjs)\r\n\r\n#### RUBY - TESTING - RSPEC\r\n\r\n* RSpec cheatsheets:\r\n  * [rspec-rails-examples - Eliot Sykes](https://github.com/eliotsykes/rspec-rails-examples)\r\n  * [Anchor.com.au](https://www.anchor.com.au/wp-content/uploads/rspec_cheatsheet_attributed.pdf)\r\n* RSpec documentation (Github):\r\n    * [rspec-core](https://github.com/rspec/rspec-core) \r\n    * [rspec-expectations](https://github.com/rspec/rspec-expectations) \r\n    * [rspec-mocks](https://github.com/rspec/rspec-mocks)\r\n    * [rspec-rails](https://github.com/rspec/rspec-rails)\r\n* RSpec documentation (rspec.info):\r\n    * rspec-core: [3.2](http://rspec.info/documentation/3.2/rspec-core/) | [3.1](http://rspec.info/documentation/3.1/rspec-core/) | [3.0](http://rspec.info/documentation/3.0/rspec-core/) | [2.99](http://rspec.info/documentation/2.99/rspec-core/) | [2.14](http://rspec.info/documentation/2.14/rspec-core/)\r\n    * rspec-expectations| [3.2](http://rspec.info/documentation/3.2/rspec-expectations/) | [3.1](http://rspec.info/documentation/3.1/rspec-expectations/) | [3.0](http://rspec.info/documentation/3.0/rspec-expectations/) | [2.99](http://rspec.info/documentation/2.99/rspec-expectations/) | [2.14](http://rspec.info/documentation/2.14/rspec-expectations/)\r\n    * rspec-mocks: [3.2](http://rspec.info/documentation/3.2/rspec-mocks/) | [3.1](http://rspec.info/documentation/3.1/rspec-mocks/) | [3.0](http://rspec.info/documentation/3.0/rspec-mocks/) | [2.99](http://rspec.info/documentation/2.99/rspec-mocks/) | [2.14](http://rspec.info/documentation/2.14/rspec-mocks/)\r\n    * rspec-rails: [3.2](http://rspec.info/documentation/3.2/rspec-rails/) | [3.1](http://rspec.info/documentation/3.1/rspec-rails/) | [3.0](http://rspec.info/documentation/3.0/rspec-rails/) | [2.99](http://rspec.info/documentation/2.99/rspec-rails/) | [2.14](http://rspec.info/documentation/2.14/rspec-rails/)\r\n* RSpec documentation (relishapp.com):\r\n    * rspec-core: [3.2](https://relishapp.com/rspec/rspec-core/v/3-2/docs) | [3.1](https://relishapp.com/rspec/rspec-core/v/3-1/docs) | [3.0](https://relishapp.com/rspec/rspec-core/v/3-0/docs) | [2.99](https://relishapp.com/rspec/rspec-core/v/2-99/docs) | [2.14](https://relishapp.com/rspec/rspec-core/v/2-14/docs) | [2.13](https://relishapp.com/rspec/rspec-core/v/2-13/docs) | [2.12](https://relishapp.com/rspec/rspec-core/v/2-12/docs) | [2.11](https://relishapp.com/rspec/rspec-core/v/2-11/docs) | [2.10](https://relishapp.com/rspec/rspec-core/v/2-10/docs) | [2.9](https://relishapp.com/rspec/rspec-core/v/2-9/docs) | [2.8](https://relishapp.com/rspec/rspec-core/v/2-8/docs) | [2.7](https://relishapp.com/rspec/rspec-core/v/2-7/docs) | [2.6](https://relishapp.com/rspec/rspec-core/v/2-6/docs) | [2.5](https://relishapp.com/rspec/rspec-core/v/2-5/docs) | [2.4](https://relishapp.com/rspec/rspec-core/v/2-4/docs)\r\n    * rspec-expectations: [3.2](https://relishapp.com/rspec/rspec-expectations/v/3-2/docs) | [3.1](https://relishapp.com/rspec/rspec-expectations/v/3-1/docs) | [3.0](https://relishapp.com/rspec/rspec-expectations/v/3-0/docs) | [2.99](https://relishapp.com/rspec/rspec-expectations/v/2-99/docs) | [2.14](https://relishapp.com/rspec/rspec-expectations/v/2-14/docs) | [2.13](https://relishapp.com/rspec/rspec-expectations/v/2-13/docs) | [2.12](https://relishapp.com/rspec/rspec-expectations/v/2-12/docs) | [2.11](https://relishapp.com/rspec/rspec-expectations/v/2-11/docs) | [2.10](https://relishapp.com/rspec/rspec-expectations/v/2-10/docs) | [2.9](https://relishapp.com/rspec/rspec-expectations/v/2-9/docs) | [2.8](https://relishapp.com/rspec/rspec-expectations/v/2-8/docs) | [2.7](https://relishapp.com/rspec/rspec-expectations/v/2-7/docs) | [2.6](https://relishapp.com/rspec/rspec-expectations/v/2-6/docs) | [2.5](https://relishapp.com/rspec/rspec-expectations/v/2-5/docs) | [2.4](https://relishapp.com/rspec/rspec-expectations/v/2-4/docs)\r\n    * rspec-mocks: [3.2](https://relishapp.com/rspec/rspec-mocks/v/3-2/docs) | [3.1](https://relishapp.com/rspec/rspec-mocks/v/3-1/docs) | [3.0](https://relishapp.com/rspec/rspec-mocks/v/3-0/docs) | [2.99](https://relishapp.com/rspec/rspec-mocks/v/2-99/docs) | [2.14](https://relishapp.com/rspec/rspec-mocks/v/2-14/docs) | [2.13](https://relishapp.com/rspec/rspec-mocks/v/2-13/docs) | [2.12](https://relishapp.com/rspec/rspec-mocks/v/2-12/docs) | [2.11](https://relishapp.com/rspec/rspec-mocks/v/2-11/docs) | [2.10](https://relishapp.com/rspec/rspec-mocks/v/2-10/docs) | [2.9](https://relishapp.com/rspec/rspec-mocks/v/2-9/docs) | [2.8](https://relishapp.com/rspec/rspec-mocks/v/2-8/docs) | [2.7](https://relishapp.com/rspec/rspec-mocks/v/2-7/docs) | [2.6](https://relishapp.com/rspec/rspec-mocks/v/2-6/docs) | [2.5](https://relishapp.com/rspec/rspec-mocks/v/2-5/docs) | [2.4](https://relishapp.com/rspec/rspec-mocks/v/2-4/docs)\r\n    * rspec-rails: [3.2](https://relishapp.com/rspec/rspec-rails/v/3-2/docs) | [3.1](https://relishapp.com/rspec/rspec-rails/v/3-1/docs) | [3.0](https://relishapp.com/rspec/rspec-rails/v/3-0/docs) | [2.99](https://relishapp.com/rspec/rspec-rails/v/2-99/docs) | [2.14](https://relishapp.com/rspec/rspec-rails/v/2-14/docs) | [2.13](https://relishapp.com/rspec/rspec-rails/v/2-13/docs) | [2.12](https://relishapp.com/rspec/rspec-rails/v/2-12/docs) | [2.11](https://relishapp.com/rspec/rspec-rails/v/2-11/docs) | [2.10](https://relishapp.com/rspec/rspec-rails/v/2-10/docs) | [2.9](https://relishapp.com/rspec/rspec-rails/v/2-9/docs) | [2.8](https://relishapp.com/rspec/rspec-rails/v/2-8/docs) | [2.7](https://relishapp.com/rspec/rspec-rails/v/2-7/docs) | [2.6](https://relishapp.com/rspec/rspec-rails/v/2-6/docs) | [2.5](https://relishapp.com/rspec/rspec-rails/v/2-5/docs) | [2.4](https://relishapp.com/rspec/rspec-rails/v/2-4/docs)\r\n* RSpec documentation (rspec.rubyforge.org):\r\n    * rspec: [1.3.2](http://rspec.rubyforge.org/rspec/1.3.2/) | [1.3.1](http://rspec.rubyforge.org/rspec/1.3.1/) | [1.3.0](http://rspec.rubyforge.org/rspec/1.3.0/) | [1.2.9](http://rspec.rubyforge.org/rspec/1.2.9/) | [1.2.7](http://rspec.rubyforge.org/rspec/1.2.7/) | [1.2.6](http://rspec.rubyforge.org/rspec/1.2.6/) | [1.2.5](http://rspec.rubyforge.org/rspec/1.2.5/) | [1.2.4](http://rspec.rubyforge.org/rspec/1.2.4/) | [1.2.2](http://rspec.rubyforge.org/rspec/1.2.2/) | [1.2.1](http://rspec.rubyforge.org/rspec/1.2.1/) | [1.1.12](http://rspec.rubyforge.org/rspec/1.1.12/) | [1.1.11](http://rspec.rubyforge.org/rspec/1.1.11/) | [1.1.9](http://rspec.rubyforge.org/rspec/1.1.9/) | [1.1.8](http://rspec.rubyforge.org/rspec/1.1.8/)\r\n    * rspec-rails: [1.3.2](http://rspec.rubyforge.org/rspec-rails/1.3.2/) | [1.3.1](http://rspec.rubyforge.org/rspec-rails/1.3.1/) | [1.3.0](http://rspec.rubyforge.org/rspec-rails/1.3.0/) | [1.2.9](http://rspec.rubyforge.org/rspec-rails/1.2.9/) | [1.2.7](http://rspec.rubyforge.org/rspec-rails/1.2.7/) | [1.2.6](http://rspec.rubyforge.org/rspec-rails/1.2.6/) | [1.2.5](http://rspec.rubyforge.org/rspec-rails/1.2.5/) | [1.2.4](http://rspec.rubyforge.org/rspec-rails/1.2.4/) | [1.2.2](http://rspec.rubyforge.org/rspec-rails/1.2.2/) | [1.2.1](http://rspec.rubyforge.org/rspec-rails/1.2.1/) | [1.1.12](http://rspec.rubyforge.org/rspec-rails/1.1.12/) | [1.1.11](http://rspec.rubyforge.org/rspec-rails/1.1.11/) | [1.1.9](http://rspec.rubyforge.org/rspec-rails/1.1.9/) | [1.1.8](http://rspec.rubyforge.org/rspec-rails/1.1.8/)\r\n* [Understanding Rails test types in RSpec - Sam Phippen (RailsConf 2015)](https://www.youtube.com/watch?t=11&v=SOi_1reKn8M)\r\n* [RRRSpec - Distributed RSpec](https://github.com/cookpad/rrrspec)\r\n* [BDD and Acceptance Testing with RSpec & Capybara - Brian Sam-Bodden (RailsConf 2013)](http://confreaks.tv/videos/2433-railsconf2013-bdd-and-acceptance-testing-with-rspec-capybara)\r\n* [An Introduction to Spies in RSpec - Sam Phippen (RubyConf 2014)](http://confreaks.tv/videos/rubyconf2014-an-introduction-to-spies-in-rspec)\r\n* [David Chelimsky's \"RSpec Toolbox\" talk (WindyCityRails2012)](http://vimeo.com/50185518)\r\n* [API Dock (good for older versions of RSpec)](http://apidock.com/rspec/browse)\r\n* [RSpec 1.1.2 docs - (Incredibly, one of my job's apps still uses this!)](http://rspec.rubyforge.org/rspec/1.1.12/) & [1.1 - 1.3 documentation](http://rspec.rubyforge.org/rspec/)\r\n\r\n### RUBY - TOOLS\r\n\r\n* [RubyMine (non-free)](http://www.jetbrains.com/ruby/)\r\n\r\n### RUBY - VIDEOS\r\n\r\n* [Ruby On Ales 2016](http://confreaks.tv/events/roa2016)\r\n* [MountainWest RubyConf 2016](http://confreaks.tv/events/mwrc2016)\r\n* [RubyConf 2015](http://confreaks.tv/events/rubyconf2015)\r\n* [LA Ruby Conf 2015](http://confreaks.tv/events/larubyconf2015)\r\n* [Ruby Remote Conf 2015](https://www.youtube.com/playlist?list=PLJesql-aSfX5wDU8ALH2bRd_xvw27klTQ)\r\n* [Tropical Ruby 2015](http://tropicalrb.com/en/videos/)\r\n* [BostonRB videos](http://www.youtube.com/channel/UCVMoyi_TUOJ0qVZRt42_ltA)\r\n* [Ruby Manor 4.0 videos - 2012](http://vimeo.com/album/2596602)\r\n* [Ruby Manor 3 videos - 2011](http://rubymanor.org/3/videos/)\r\n* [Ruby Manor 2 videos - 2009](http://rubymanor.org/harder/videos/)\r\n* [Ruby Manor (1) videos - 2008](http://rubymanor.org/videos/)\r\n\r\n## SCALA\r\n\r\n* [Official documentation](http://scala-lang.org/documentation/)\r\n* [Scala School - Twitter](http://twitter.github.io/scala_school/)\r\n* [Effective Scala - Marius Eriksen](http://twitter.github.io/effectivescala/)\r\n* [Scala with Style - Martin Odersky](http://www.youtube.com/watch?v=kkTFx3-duc8)\r\n* [Tim Cowlishaw - From Ruby to Scala and back again: Better living through type-checking - Tim Colishaw (Ruby Manor 4.0)](http://vimeo.com/79180652)\r\n* [Scala: The Simple Parts - Martin Odersky (GOTO Conf 2014)](https://www.youtube.com/watch?v=P8jrvyxHodU)\r\n\r\n### SCALA - AKKA\r\n\r\n* [Akka.io](http://akka.io/)\r\n\r\n### SCALA - BOOKS\r\n\r\n* [Scala By Example - Martin Odersky (free PDF)](http://www.scala-lang.org/docu/files/ScalaByExample.pdf)\r\n* [Scala for the Impatient (free PDF; requires registration)](http://typesafe.com/resources/book/scala-for-the-impatient)\r\n* [Scala in Depth (free PDF; requires registration)](http://typesafe.com/resources/book/scala-in-depth)\r\n* [Scala Tutorial (PDF) - TutorialsPoint.com](http://tutorialspoint.com/scala/scala_tutorial.pdf)\r\n\r\n### SCALA - AKKA\r\n\r\n* [Implementing the Reactive Manifesto with Akka - Adam Warski (Lambda Days 2015)](https://www.youtube.com/watch?v=kFH3_OF9EW8)\r\n\r\n### SCALA - FUNCTIONAL PROGRAMMING\r\n\r\n* [Functional Programming Principles in Scala - Scala creator Martin Odersky (École Polytechnique Fédérale de Lausanne) Coursera](https://www.coursera.org/course/progfun)\r\n* [Principles of Reactive Programming - Scala creator Martin Odersky, Erik Meijer & Roland Kuhn](https://www.coursera.org/course/reactive)\r\n* [Functional Programming with Scala - Jacek Laskowski (JEE Conf 2015)](https://www.youtube.com/watch?v=9qwmuEIScB0)\r\n* [Cats - A Fresh Look at Functional Programming in Scala - Mike Stew (LambdaConf 2015)](https://www.youtube.com/watch?v=hIwdaP3-U6I)\r\n* [Intro to Functional Programming in Scala - Joe Barnes](https://www.youtube.com/watch?v=2Ji5i0x2gJI)\r\n* [Programs as Values: Pure Composable Database Access in Scala - Rob Norris](https://www.youtube.com/watch?v=XHiTK4UOIf0)\r\n\r\n### SCALA - VIDEOS\r\n\r\n* [Learn Scala in One Video - Derek Banas](https://www.youtube.com/watch?v=DzFt0YkZo8M)\r\n* [Scala for the Intrigued - Dr. Venkat Subramaniam](https://www.youtube.com/watch?v=grvvKURwGNg)\r\n* [Why Scala? - Venkat Subramaniam](http://www.youtube.com/watch?v=LH75sJAR0hc)\r\n* [Tim Cowlishaw - From Ruby to Scala and back again: Better living through type-checking - Tim Colishaw (Ruby Manor 4.0)](http://vimeo.com/79180652)\r\n* [Scala: The Simple Parts - Martin Odersky (GOTO Conf 2014)](https://www.youtube.com/watch?v=P8jrvyxHodU)\r\n* Scala talks: [Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=scala&commit=go) & [Youtube](https://www.youtube.com/results?q=scala+language)\r\n\r\n## SCRATCH\r\n\r\n* [Programming in Scratch - Harvey Mudd College (edX)](https://www.edx.org/course/programming-scratch-harveymuddx-cs002x-0)\r\n\r\n## SECURITY\r\n\r\n* [Awesome Hacking: A collection of awesome lists for hackers, pentesters & security researchers](https://github.com/Hack-with-Github/Awesome-Hackin://github.com/Hack-with-Github/Awesome-Hacking)\r\n\r\n### SECURITY - ENCRYPTION\r\n\r\n* [Crypto101 (free in-depth cryptography book) - Laurens Van Houtven](https://www.crypto101.io/) & [PyCon US 2013 talk](https://www.youtube.com/watch?t=8&v=3rmCGsCYJF8)\r\n* [Cryptography Tutorial - Joe Armstrong](https://github.com/joearms/crypto_tutorial/raw/master/crypto_tutorial.pdf)\r\n* [Let's Encrypt - \"lets site operators turn on and manage HTTPS with simple commands\"](https://letsencrypt.org/howitworks/)\r\n* [Awesome Cryptography](https://github.com/sobolevn/awesome-cryptography)\r\n* [Encryption Works: How to Protect Your Privacy in the Age of NSA Surveillance - Micha Leee (Freedom of the Press Foundation)](https://freedom.press/encryption-works)\r\n\r\n#### SECURITY - ENCRYPTION - FREE CERTS\r\n\r\n* [LetsEncrypt.org](https://letsencrypt.org/) | [Github](https://github.com/letsencrypt/letsencrypt) | [Twitter](https://twitter.com/letsencrypt)\r\n* [Free HTTPS certs for all – Let's Encrypt opens doors to world+dog](http://www.theregister.co.uk/2015/12/03/letsencrypt_public_beta/)\r\n\r\n## SHOPPING TOOLS\r\n\r\n* [CamelCamelCamel](http://camelcamelcamel.com/)\r\n* [Nifti](http://www.nifti.com/)\r\n* [PriceGrabber](http://www.pricegrabber.com/)\r\n* [ShopSavvy](http://shopsavvy.com/)\r\n* [TheWireCutter](http://thewirecutter.com/deals/)\r\n\r\n## STATISTICAL ANALYSIS\r\n\r\n### STATISTICAL ANALYSIS - INTRO TO\r\n\r\n* Intro to Statistics - Thomas Haslwanter: [HTML](http://work.thaslwanter.at/Stats/html/) | [PDF](http://work.thaslwanter.at/Stats/StatsIntro.pdf) | [Github (with full sourcecode)](https://github.com/thomas-haslwanter/statsintro)\r\n* [Learning Statistics will Save Your Life - John Paul Ashenfelter (MountainWest RubyConf 2015)](http://confreaks.tv/videos/mwrc2015-learning-statistics-will-save-your-life)\r\n\r\n### STATISTICAL ANALYSIS - TIME SERIES\r\n\r\n* [Introduction to Computational Finance and Financial Econometrics - Eric Zivot](http://faculty.washington.edu/ezivot/econ424/424notes.htm)\r\n* [Variety of Eric Zivot PDFs for Econ 584](http://faculty.washington.edu/ezivot/econ584/notes/) including [Vector Autoregressive Models for Multivariate Time Series](http://faculty.washington.edu/ezivot/econ584/notes/varModels.pdf)\r\n\r\n### STATISTICAL ANALYSIS - VIDEOS\r\n\r\n* [Strata Conference 2014 videos](https://www.youtube.com/playlist?list=PL055Epbe6d5YX_cD2IDr4dK9Da0Vh6YgI)\r\n* [Strata Conference 2013 videos](https://www.youtube.com/playlist?list=PL055Epbe6d5ZEYjq8K7CA37-1fEST-yWe)\r\n\r\n## SVG\r\n\r\n* [Pocket Guide to Writing SVG - Joni Trythall](http://svgpocketguide.com/book/)\r\n\r\n## TESTING\r\n\r\n* [Ruby-Toolbox - Testing tools](https://www.ruby-toolbox.com/#Testing)\r\n* [Let's Make Testing Fun Again - Noel Rappin (WindyCityRails2012)](http://vimeo.com/49525644)\r\n* [Test Your Legacy Rails Code - Noel Rappin (Ruby Midwest 2011)](http://confreaks.tv/videos/755-rubymidwest2011-test-your-legacy-rails-code)\r\n* [Jenkins User Conference San Francisco 2012 videos](http://confreaks.tv/events/jucsf2012)\r\n* [Breaking Up With Your Test Suite - Justin Searls (AncientCity Ruby 2014)](http://blog.testdouble.com/posts/2014-05-25-breaking-up-with-your-test-suite.html)\r\n\r\n### TESTING - CONTINUOUS INTEGRATION\r\n\r\n* [Ruby-Toolbox - Continuous Integration](https://www.ruby-toolbox.com/categories/continuous_integration)\r\n* [Deconstructing Travis - Josh ](http://confreaks.tv/videos/915-railsconf2012-deconstructing-travis)\r\n\r\n#### TESTING - CONTINUOUS INTEGRATION - JENKINS\r\n\r\n* [Jenkins User Conference London 2015](http://confreaks.tv/events/jenkinsconflondon2015)\r\n* [Jenkins talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=jenkins&commit=go)\r\n* [Jenkins User Conference San Francisco 2012](http://confreaks.tv/events/jucsf2012)\r\n* [Jenkins User Conference Palo Alto 2013](http://confreaks.tv/events/jenkins2013)\r\n\r\n### TESTING - COVERAGE\r\n\r\n* SimpleCov, RCov\r\n* [Ruby-Toolbox - Code Metrics](https://www.ruby-toolbox.com/categories/code_metrics)\r\n\r\n### TESTING - DEBUGGING\r\n\r\n* [How to Debug Anything - James Golick (GoRuCo 2014)](http://confreaks.tv/videos/3451-goruco-how-to-debug-anything)\r\n\r\n### TESTING - INTEGRATION TESTS\r\n\r\n* [Ruby-Toolbox - Browser Testing](https://www.ruby-toolbox.com/categories/browser_testing)\r\n* [Ruby-Toolbox - Distributed Testing](https://www.ruby-toolbox.com/categories/distributed_testing)\r\n\r\n### TESTING - MOCKS\r\n\r\n* [Yay! Mocks! - Corey Haines (Aloha Ruby Conf 2012)](http://confreaks.tv/videos/1237-aloharuby2012-yay-mocks)\r\n* [Mock Objects in Discovery Tests - Justin Searls](http://blog.testdouble.com/posts/2014-05-14-mock-objects-in-discovery-tests.html)\r\n\r\n### TESTING - UNIT TESTS\r\n\r\n* [Why Is a Math Proof Like a Unit Test? - Daniela Wellisz (GoGaRuCo 2012)](http://confreaks.tv/videos/1116-gogaruco2012-why-is-a-math-proof-like-a-unit-test)\r\n\r\n## TMUX\r\n\r\n* [Tmux Quickstart Guide - Sam Livingston-Gray](https://www.youtube.com/watch?v=wKEGA8oEWXw)\r\n* [Humans Present: tmux - Thoughtbot](https://www.youtube.com/watch?v=CKC8Ph-s2F4)\r\n* [A tmux Primer (on persistent remote sessions) - Daniel Miessler](https://danielmiessler.com/study/tmux/)\r\n* [ArchLinux Tmux wiki](https://wiki.archlinux.org/index.php/Tmux)\r\n* [The Tao of Tmux](http://tmuxp.readthedocs.org/en/latest/about_tmux.html)\r\n* [10 Killer Tmux Tips - Benjamin Tan Wei Hao](http://www.sitepoint.com/10-killer-tmux-tips/)\r\n* [Impressive Ruby Productivity with Vim and Tmux - Chris Hunt](http://confreaks.tv/videos/2291-larubyconf2013-impressive-ruby-productivity-with-vim-and-tmux) & [Ancient City Ruby 2013](https://www.youtube.com/watch?v=9jzWDr24UHQ)\r\n* [man page](http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&sektion=1)\r\n* [FAQ](http://sourceforge.net/p/tmux/tmux-code/ci/master/tree/FAQ)\r\n* [Pair Programming With Tmux - Flaviu Simihaian](http://www.youtube.com/watch?v=za8FMIWYtUc)\r\n\r\n### TMUX - BASICS\r\n\r\n* [A Tmux Primer - Daniel Miessler](https://danielmiessler.com/study/tmux/)\r\n* [Tmux: A Simple Start - Glenn Goodrich](http://www.sitepoint.com/tmux-a-simple-start/)\r\n* [Intro to Tmux (NetTuts)](http://net.tutsplus.com/tutorials/tools-and-tips/intro-to-tmux/)\r\n* [Tmux Crash Course (Thoughtbot)](http://robots.thoughtbot.com/post/2641409235/a-tmux-crash-course)\r\n* [Tmux - The Terminal Multiplexer - part 1](http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/) & [part 2](http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/)\r\n\r\n### TMUX - CHEATSHEETS\r\n\r\n* [Tmux Cheatsheet (Mohamed Alaa)](https://gist.github.com/MohamedAlaa/2961058)\r\n* [Tmux Cheatsheet (Niklas Ottoson)](http://blog.niklasottosson.com/?p=574)\r\n* [Tmux Cheatsheet (Alvin Alexander)](http://alvinalexander.com/linux-unix/tmux-cheat-sheet-commands-pdf) & [PDF](http://alvinalexander.com/downloads/linux/tmux-cheat-sheet.pdf)\r\n* [Tmux Cheatsheet (Andrey Vit)](https://gist.github.com/andreyvit/2921703)\r\n\r\n### TMUX - PLUGINS\r\n\r\n* [Tmux Plugin Manager](https://github.com/tmux-plugins/tpm)\r\n\r\n## UML\r\n\r\n* [ArgoUML](http://argouml.tigris.org/)\r\n* [PlantUML](http://plantuml.sourceforge.net/)\r\n\r\n## USABILITY\r\n\r\n* [Ruby-Toolbox - A/B Testing](https://www.ruby-toolbox.com/categories/A_B_Testing)\r\n* [Building the Web for Everyone - Greg Tarnoff (MadisonRuby 2012)](http://confreaks.tv/videos/1102-madisonruby2012-building-the-web-for-everyone)\r\n* [Your User: The Animal - Hampton Catlin (MadisonRuby 2012)](http://confreaks.tv/videos/1106-madisonruby2012-your-user-the-animal)\r\n\r\n## VIM (YEAH, IT'S THE BEST)\r\n\r\n* [Full Vim documentation + Vim FAQ (downloadable PDF)](http://nathangrigg.net/vimhelp/)\r\n* [A vim Tutorial and Primer - Daniel Miessler](https://danielmiessler.com/study/vim/)\r\n* [VimDoc](http://vimdoc.sourceforge.net/htmldoc/)\r\n* [vim.wikia.com](http://vim.wikia.com/wiki/Vim_documentation)\r\n* [Vimcasts.org](http://vimcasts.org/)\r\n* [Vim London videos](http://vimeo.com/vimlondon/videos)\r\n* [Vim talks - Confreaks.tv](http://confreaks.tv/search?utf8=%E2%9C%93&query=vim&commit=go)\r\n* [VimNinjas.com](http://www.vimninjas.com/)\r\n* [OpenVim tutorial](http://www.openvim.com/tutorial.html)\r\n* [UseVim.com](http://usevim.com/)\r\n* [vim + tmux - OMG!Code - Nick Nisi](https://www.youtube.com/watch?v=5r6yzFEXajQ)\r\n* [Learn to speak vim – verbs, nouns, and modifiers! - Yan Pritzker](http://yanpritzker.com/2011/12/16/learn-to-speak-vim-verbs-nouns-and-modifiers/)\r\n* [The grammar of Vim - Rafe Colburn](http://rc3.org/2012/05/12/the-grammar-of-vim/)\r\n* [MinuteVimTricks](https://www.youtube.com/user/MinuteVimTricks/videos)\r\n* [vi and vim editor: Tutorial and advanced features](http://www.yolinux.com/TUTORIALS/LinuxTutorialAdvanced_vi.html)\r\n* [Vim graphical cheat sheet-based tutorial](http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html)\r\n* [Buffers, windows & tabs](http://blog.sanctum.geek.nz/buffers-windows-tabs/)\r\n* [Write code faster: expert-level vim - Ben Orenstein (Railsberry 2012)](http://www.youtube.com/watch?v=SkdrYWhh-8s)\r\n* [Vim Tips With Ben (Orenstein)](https://www.briefs.fm/vim-tips-with-ben)\r\n* [Derek Wyatt videos - Novice](http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-novice-tutorial-videos/), [Intermediate](http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-intermediate-tutorial-videos/) and [Advanced](http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-advanced-tutorial-videos/)\r\n* [Impressive Ruby Productivity with Vim and Tmux](http://confreaks.tv/videos/2291-larubyconf2013-impressive-ruby-productivity-with-vim-and-tmux)\r\n* [Vim Commands Cheat Sheet](http://www.fprintf.net/vimCheatSheet.html)\r\n* [Cheatsheet](http://i.imgur.com/YLInLlY.png)\r\n* NerdTree: [Guide](http://usevim.com/2012/07/18/nerdtree/) [Cheatsheet](http://cheat.errtheblog.com/s/nerdtree/) [add a file](http://stackoverflow.com/questions/1459750/vim-and-nerd-tree-extension-adding-a-file)\r\n* [Vundle plug-in manager](https://github.com/gmarik/vundle)\r\n* [A Byte of Vim](http://files.swaroopch.com/vim/byte_of_vim_v051.pdf)\r\n* [Vi/Vim notes - Darin Brezeale](http://www.brezeale.com/technical_notes/vim_notes.shtml)\r\n* [How I Boosted My Vim - Vincent Driessen](http://nvie.com/posts/how-i-boosted-my-vim/)\r\n* [Faster Grepping in Vim - Dan Croak](https://robots.thoughtbot.com/faster-grepping-in-vim) & [More vim tips from Thoughtbot](https://robots.thoughtbot.com/tags/vim)\r\n\r\n### VIM - PLUGIN DOCS\r\n\r\n* [ack.vim](https://raw.githubusercontent.com/mileszs/ack.vim/master/doc/ack.txt)\r\n* [Command-T](https://github.com/wincent/Command-T)\r\n* [ctags](http://ctags.sourceforge.net/) & [Using Vim and Exuberant CTags for easy source navigation](http://benoithamelin.tumblr.com/post/15101202004/using-vim-exuberant-ctags-easy-source-navigation) [Manual](http://ctags.sourceforge.net/ctags.html) & [FAQ](http://ctags.sourceforge.net/faq.html)\r\n* [ctrlp.vim](https://github.com/kien/ctrlp.vim/blob/master/readme.md#readme)\r\n* [gist.vim](https://github.com/mattn/gist-vim/blob/master/README.mkd#readme)\r\n* [jslint.vim](https://github.com/hallettj/jslint.vim/blob/master/README.markdown)\r\n* [NERDTree](https://raw.githubusercontent.com/scrooloose/nerdtree/master/doc/NERD_tree.txt) & [video tutorial](http://www.youtube.com/watch?v=CPu9mDpSYj0)\r\n* [Recover.vim](https://raw.githubusercontent.com/chrisbra/Recover.vim/master/doc/recoverPlugin.txt)\r\n* [snipmate](https://raw.githubusercontent.com/garbas/vim-snipmate/master/doc/snipMate.txt) & [video tutorial](http://www.youtube.com/watch?v=xV2IsE5OHd4)\r\n* [supertab](https://raw.githubusercontent.com/ervandew/supertab/master/doc/supertab.txt)\r\n* [syntastic](https://raw.githubusercontent.com/scrooloose/syntastic/master/doc/syntastic.txt)\r\n* [tabular](https://raw.githubusercontent.com/godlygeek/tabular/master/doc/Tabular.txt)\r\n* [vim-coffee-script](https://raw.githubusercontent.com/kchmck/vim-coffee-script/master/doc/coffee-script.txt)\r\n* [vim-fugitive](https://raw.githubusercontent.com/tpope/vim-fugitive/master/doc/fugitive.txt) & [VimCasts](http://vimcasts.org/results/#stq=fugitive) & [Painless Merge Conflict Resolution in Git](http://blog.wuwon.id.au/2010/09/painless-merge-conflict-resolution-in.html)\r\n* [vim-ipython](https://github.com/ivanov/vim-ipython)\r\n* [vim-rails](https://raw.githubusercontent.com/tpope/vim-rails/master/doc/rails.txt)\r\n* [vim-rake](https://raw.githubusercontent.com/tpope/vim-rake/master/doc/rake.txt)\r\n* [vim-rspec](https://github.com/thoughtbot/vim-rspec/blob/master/README.md)\r\n* [vim-ruby](https://raw.githubusercontent.com/vim-ruby/vim-ruby/master/doc/vim-ruby.txt)\r\n* [vim-ruby-debugger](https://raw.githubusercontent.com/astashov/vim-ruby-debugger/master/doc/ruby_debugger.txt)\r\n* [vim-ruby-refactoring](https://raw.githubusercontent.com/ecomba/vim-ruby-refactoring/master/doc/rubyrefactoring.txt) & [Check out this excellent refactoring plugin - Justin Ram](https://justinram.wordpress.com/2010/12/30/vim-ruby-refactoring-series/)\r\n* [vim-surround](https://raw.githubusercontent.com/tpope/vim-surround/master/doc/surround.txt)\r\n* [vim-textobj-rubyblock](https://github.com/nelstrom/vim-textobj-rubyblock) & [A text-object for ruby blocks - Drew Neil](http://vimcasts.org/blog/2010/12/a-text-object-for-ruby-blocks/)\r\n* [vim-unimpaired](https://github.com/tpope/vim-unimpaired) | [Unimpaired Cheatsheet](http://mindonmind.github.io/notes/vim/unimpaired.html)\r\n* [vundle](https://raw.githubusercontent.com/gmarik/vundle/master/doc/vundle.txt)\r\n\r\n### VIM - JAVASCRIPT\r\n\r\n* [jslint.vim](https://github.com/hallettj/jslint.vim)\r\n\r\n### VIM - PYTHON\r\n\r\n* [Vim as a Python IDE - Martin Brochhaus](https://www.youtube.com/watch?v=YhqsjUUHj6g)\r\n\r\n### VIM - RAILS\r\n\r\n* [Effective Rails Development with Vim - Islam Wazery](http://www.sitepoint.com/effective-rails-development-vim/)\r\n* [Ruby Text Objects](http://tilvim.com/2014/07/18/ruby-text-objects.html)\r\n* [vim-rspec](https://github.com/thoughtbot/vim-rspec)\r\n* [vim-ruby-refactoring tutorials](https://justinram.wordpress.com/2010/12/30/vim-ruby-refactoring-series/)\r\n* [vim-textobj-rubyblock](https://github.com/nelstrom/vim-textobj-rubyblock)\r\n\r\n### VIM - SPACEMACS\r\n\r\n* [Spacemacs Documentation](https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org) & [Github](https://github.com/syl20bnr/spacemacs)\r\n* [Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs - Aaron Bieber](https://www.youtube.com/watch?v=JWD1Fpdd4Pc)\r\n* [Spacemacs ABC videos - Eivind Fonn](https://www.youtube.com/playlist?list=PLrJ2YN5y27KLhd3yNs2dR8_inqtEiEweE)\r\n* [Migrating from Vim](https://github.com/syl20bnr/spacemacs/blob/master/doc/VIMUSERS.org)\r\n* [Quick Start](https://github.com/syl20bnr/spacemacs/blob/master/doc/QUICK_START.org) | [FAQ](https://github.com/syl20bnr/spacemacs/blob/master/doc/FAQ.org)\r\n* [Evil-Tutor](https://github.com/syl20bnr/evil-tutor)\r\n* [Alchemist docs](http://alchemist.readthedocs.io/en/latest/)\r\n* [Elixir With Alchemist](http://spacemacs.org/layers/+lang/elixir/README.html)\r\n* [Alchemist Quick Reference Card (Spacemacs Version)](https://github.com/syl20bnr/spacemacs/blob/master/layers/%2Blang/elixir/alchemist-refcard.pdf)\r\n\r\n### VIM - TMUX\r\n\r\n* [vim-tmux-navigator](https://github.com/christoomey/vim-tmux-navigator)\r\n* [vim-tmux-runner](https://github.com/christoomey/vim-tmux-runner)\r\n\r\n### VIM - VIMSCRIPT\r\n\r\n* [Learn Vimscript the Hard Way - Steve Losh](http://learnvimscriptthehardway.stevelosh.com/)\r\n* Scripting the Vim editor - Damian Conway:\r\n    * Part 1: Variables, values, and expressions: [HTML](http://www.ibm.com/developerworks/library/l-vim-script-1/) & [PDF](http://www.ibm.com/developerworks/library/l-vim-script-1/l-vim-script-1-pdf.pdf)\r\n    * Part 2: User-defined functions: [HTML](http://www.ibm.com/developerworks/linux/library/l-vim-script-2/index.html) & [PDF](http://www.ibm.com/developerworks/linux/library/l-vim-script-2/l-vim-script-2-pdf.pdf)\r\n    * Part 3: Built-in lists: [HTML](http://www.ibm.com/developerworks/linux/library/l-vim-script-3/index.html) & [PDF](http://www.ibm.com/developerworks/linux/library/l-vim-script-3/l-vim-script-3-pdf.pdf)\r\n    * Part 4: Dictionaries: [HTML](http://www.ibm.com/developerworks/linux/library/l-vim-script-4/index.html) & [PDF](http://www.ibm.com/developerworks/linux/library/l-vim-script-4/l-vim-script-4-pdf.pdf)\r\n    * Part 5: Event-driven scripting and automation: [HTML](http://www.ibm.com/developerworks/linux/library/l-vim-script-5/index.html) & [PDF](http://www.ibm.com/developerworks/linux/library/l-vim-script-5/l-vim-script-5-pdf.pdf)\r\n* [More instantly better Vim - Damian Conway (OSCON 2013)](https://www.youtube.com/watch?v=aHm36-na4-4)\r\n\r\n## WEB COMPONENTS\r\n\r\n* [Why You Should Be Using Web Components Right Now. And How. - Phil Leggetter](http://forwardjs.com/university/why-you-should-be-using-web-components-right-now)\r\n* [The Web Components Revolution is Here - Eric Bidelman (April 2014)](https://www.youtube.com/watch?v=3QLmAm9xtnU)\r\n\r\n### WEB COMPONENTS - POLYMER\r\n\r\n* [All About Polymer at SFHTML5 (April 2014)](https://www.youtube.com/watch?v=mN7IAaRdi_k)\r\n* [yo polymer - Addy Osmani (dotJS 2013)](https://www.youtube.com/watch?v=booRxAJblwM)\r\n\r\n## WEATHER (NOT PROGRAMMING-RELATED, JUST USEFUL)\r\n\r\n* [National Weather Service - Nationwide radar loop](http://radar.weather.gov/Conus/full_loop.php)\r\n* [National Weather Service - New York metro radar loop](http://radar.weather.gov/ridge/radar.php?rid=okx&product=N0R&overlay=11101111&loop=yes)\r\n\r\n## WEB DESIGN\r\n\r\n* [Web Fundamentals: Best practices for great multi-device web experiences (Google)](https://developers.google.com/web/fundamentals/?hl=en)\r\n* [Web Fundamentals: Optimizing Performance (Google)](https://developers.google.com/web/fundamentals/performance/?hl=en)\r\n\r\n### WEB DESIGN - BRACKETS CODE EDITOR\r\n\r\n* Brackets code editor: [Brackets.io](http://brackets.io/) & [Github](https://github.com/adobe/brackets)\r\n\r\n### WEB DESIGN - RESPONSIVE DESIGN & PROGRESSIVE ENHANCEMENT\r\n\r\n* [Adaptive Web Design - Aaron Gustafson](http://adaptivewebdesign.info/1st-edition/)\r\n* [Future-Friendly Resources](http://futurefriendlyweb.com/resources.html)\r\n* [Responsive Web Design, Mobile First and Progressive enhancement in action - Leonado Lenase (ScotlandJS 2012)](http://vimeo.com/45140588)\r\n* [Browser Versions Are Dead](http://confreaks.tv/videos/2223-html5tx2013-browser-versions-are-dead)\r\n* [Luke Wroblewski blogs & presentations](http://www.lukew.com/)\r\n\r\n## WRITING/PUBLISHING\r\n\r\n* [GitBook](https://github.com/GitbookIO/gitbook)\r\n* [Softcover.io](https://www.softcover.io/)\r\n\r\n### WRITING/PUBLISHING - ASCIIDOC EDITORS\r\n\r\n* [AsciiDoctor - AsciiDoc Writer’s Guide](http://asciidoctor.org/docs/asciidoc-writers-guide/)\r\n* [AsciiDoc](http://www.methods.co.nz/asciidoc/)\r\n* [AsciiDoc Cheatsheet](http://powerman.name/doc/asciidoc)\r\n* [asciidoc-vim](https://github.com/dagwieers/asciidoc-vim)\r\n\r\n### WRITING/PUBLISHING - LITERATE PYTHON\r\n\r\n* [Literate Python](https://github.com/stdbrouw/python-literate)\r\n\r\n### WRITING/PUBLISHING - MARKDOWN\r\n\r\n* [Markdown](http://daringfireball.net/projects/markdown/)\r\n* [Marked 2 (not free but apparently awesome previewer)](http://marked2app.com/)\r\n\r\n### WRITING/PUBLISHING - PANDOC\r\n\r\n* [Pandoc: Universal Document Converter](http://pandoc.org/)\r\n* [Sustainable Authorship in Plain Text using Pandoc and Markdown - Dennis Tenen and Grant Wythoff](http://programminghistorian.org/lessons/sustainable-authorship-in-plain-text-using-pandoc-and-markdown)\r\n* [Plain Text, Papers, Pandoc](http://kieranhealy.org/blog/archives/2014/01/23/plain-text/)\r\n\r\n### WRITING/PUBLISHING - RESTRUCTURED TEXT\r\n\r\n* [reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html)\r\n* [ReStructured Text](http://docutils.sourceforge.net/rst.html)\r\n* [ReStructured Text Syntax - Thomas Cokelaer](http://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html)\r\n* [ReStructured Text Demo (.txt)](http://docutils.sourceforge.net/docs/user/rst/demo.txt) & [(.html)](http://docutils.sourceforge.net/docs/user/rst/demo.html)\r\n* [ReStructured Text Primer (.txt)](http://docutils.sourceforge.net/docs/user/rst/demo.txt) & [(.html)](http://docutils.sourceforge.net/docs/user/rst/quickstart.html)\r\n* [ReStructured Text Cheat Sheet - David Goodger (.txt)](http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt) & [(.html)](http://docutils.sourceforge.net/docs/user/rst/cheatsheet.html)\r\n\r\n#### WRITING/PUBLISHING - RESTRUCTURED TEXT - RIV\r\n\r\n* [Rykka (ReStructured Text vim plugin)](https://github.com/Rykka/riv.vim)\r\n* [Riv: QuickStart (G.F. Rykka)](https://github.com/Rykka/riv.vim/blob/master/doc/riv_quickstart.rst)\r\n* [Riv: Detailed Instructions](https://github.com/Rykka/riv.vim/blob/master/doc/riv_instruction.rst)\r\n* [Writing A Book With Vim, Restructured Text, and Sphinx - Tom Purl](http://tompurl.com/2012/11/22/writing-a-book-with-vim-restructured-text-and-sphinx/)\r\n\r\n#### WRITING/PUBLISHING - RESTRUCTURED TEXT - SPHINX\r\n\r\n* [Sphinx (Python Document Generator)](http://sphinx-doc.org/)\r\n\r\n### WRITING/PUBLISHING - ZOTERO\r\n\r\n* [Zotero (Firefox extention to \"collect, organize, cite, and share your research sources\")](https://www.zotero.org/)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}